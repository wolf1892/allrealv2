"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9079],{1523:function(e,t,s){let r,i,a,n,o,l,c,h,d;s.d(t,{AE:function(){return tG},j6:function(){return tt}});var p=s(9031);class u{static idGen=0;constructor(e,t){let s,r;this.promise=new Promise((e,t)=>{s=e,r=t});let i=s.bind(this),a=r.bind(this);e(((...e)=>{i(...e)}).bind(this),(e=>{a(e)}).bind(this)),this.abortHandler=t,this.id=u.idGen++}then(e){return new u((t,s)=>{this.promise=this.promise.then((...s)=>{let r=e(...s);r instanceof Promise||r instanceof u?r.then((...e)=>{t(...e)}):t(r)}).catch(e=>{s(e)})},this.abortHandler)}catch(e){return new u(t=>{this.promise=this.promise.then((...e)=>{t(...e)}).catch(e)},this.abortHandler)}abort(e){this.abortHandler&&this.abortHandler(e)}}class m extends Error{constructor(e){super(e)}}new Int32Array(new Float32Array(1).buffer);let A=function(){let e=new Float32Array(1),t=new Int32Array(e.buffer);return function(s){return e[0]=s,t[0]}}(),f=function(e,t,s=!0){let r=new AbortController,i=r.signal,a=!1;return new u((r,n)=>{fetch(e,{signal:i}).then(async e=>{let i=e.body.getReader(),o=0,l=e.headers.get("Content-Length"),c=l?parseInt(l):void 0,h=[];for(;!a;)try{let e,a;let{value:n,done:l}=await i.read();if(l){if(t&&t(100,"100%",n,c),s){let e=new Blob(h).arrayBuffer();r(e)}else r();break}o+=n.length,void 0!==c&&(e=o/c*100,a=`${e.toFixed(2)}%`),s&&h.push(n),t&&t(e,a,n,c)&&(s=!1)}catch(e){n(e);break}}).catch(e=>{n(e)})},e=>{r.abort(new m(e)),a=!0})},g=function(e,t,s){return Math.max(Math.min(e,s),t)},C=function(){return performance.now()/1e3},S=e=>{if(e.geometry&&(e.geometry.dispose(),e.geometry=null),e.material&&(e.material.dispose(),e.material=null),e.children)for(let t of e.children)S(t)},y=(e,t)=>new Promise(s=>{window.setTimeout(()=>{s(e())},t?1:50)}),x=(e=0)=>{switch(e){case 1:return 9;case 2:return 24}return 0},v=()=>{let e,t;return{promise:new Promise((s,r)=>{e=s,t=r}),resolve:e,reject:t}},I=e=>{let t,s;return e||(e=()=>{}),{promise:new u((e,r)=>{t=e,s=r},e),resolve:t,reject:s}};class B{constructor(e,t,s){this.major=e,this.minor=t,this.patch=s}toString(){return`${this.major}_${this.minor}_${this.patch}`}}function w(){let e=navigator.userAgent;return e.indexOf("iPhone")>0||e.indexOf("iPad")>0}function b(){if(!w())return null;{let e=navigator.userAgent.match(/OS (\d+)_(\d+)_?(\d+)?/);return new B(parseInt(e[1]||0,10),parseInt(e[2]||0,10),parseInt(e[3]||0,10))}}class T{static OFFSET={X:0,Y:1,Z:2,SCALE0:3,SCALE1:4,SCALE2:5,ROTATION0:6,ROTATION1:7,ROTATION2:8,ROTATION3:9,FDC0:10,FDC1:11,FDC2:12,OPACITY:13,FRC0:14,FRC1:15,FRC2:16,FRC3:17,FRC4:18,FRC5:19,FRC6:20,FRC7:21,FRC8:22,FRC9:23,FRC10:24,FRC11:25,FRC12:26,FRC13:27,FRC14:28,FRC15:29,FRC16:30,FRC17:31,FRC18:32,FRC19:33,FRC20:34,FRC21:35,FRC22:36,FRC23:37};constructor(e=0){this.sphericalHarmonicsDegree=e,this.sphericalHarmonicsCount=x(this.sphericalHarmonicsDegree),this.componentCount=this.sphericalHarmonicsCount+14,this.defaultSphericalHarmonics=Array(this.sphericalHarmonicsCount).fill(0),this.splats=[],this.splatCount=0}static createSplat(e=0){let t=[0,0,0,1,1,1,1,0,0,0,0,0,0,0],s=x(e);for(let e=0;e<s;e++)t.push(0);return t}addSplat(e){this.splats.push(e),this.splatCount++}getSplat(e){return this.splats[e]}addDefaultSplat(){let e=T.createSplat(this.sphericalHarmonicsDegree);return this.addSplat(e),e}addSplatFromComonents(e,t,s,r,i,a,n,o,l,c,h,d,p,u,...m){let A=[e,t,s,r,i,a,n,o,l,c,h,d,p,u,...this.defaultSphericalHarmonics];for(let e=0;e<m.length&&e<this.sphericalHarmonicsCount;e++)A[e]=m[e];return this.addSplat(A),A}addSplatFromArray(e,t){let s=e.splats[t],r=T.createSplat(this.sphericalHarmonicsDegree);for(let e=0;e<this.componentCount&&e<s.length;e++)r[e]=s[e];this.addSplat(r)}}class D{static DepthMapRange=65536;static MemoryPageSize=65536;static BytesPerFloat=4;static BytesPerInt=4;static MaxScenes=32;static ProgressiveLoadSectionSize=262144;static ProgressiveLoadSectionDelayDuration=15;static SphericalHarmonics8BitCompressionRange=3}let E=D.SphericalHarmonics8BitCompressionRange/2,M=p.A5E.toHalfFloat.bind(p.A5E),F=p.A5E.fromHalfFloat.bind(p.A5E),P=(e,t,s=!1,r,i)=>0===t?e:1!==t&&(2!==t||s)?2===t?k(e,r,i):void 0:p.A5E.fromHalfFloat(e),R=(e,t,s)=>{e=g(e,t,s);let r=s-t;return g(Math.floor((e-t)/r*255),0,255)},k=(e,t,s)=>e/255*(s-t)+t,H=(e,t,s)=>R(F(e,t,s)),L=(e,t,s)=>M(k(e,t,s)),_=(e,t,s,r=!1)=>0===s?e.getFloat32(4*t,!0):1!==s&&(2!==s||r)?e.getUint8(t,!0):e.getUint16(2*t,!0),O=function(){let e=e=>e;return function(t,s,r,i=!1){if(s===r)return t;let a=e;return 2===s&&i?1===r?a=L:0==r&&(a=k):2===s||1===s?0===r?a=F:2==r&&(a=i?H:e):0===s&&(1===r?a=M:2==r&&(a=i?R:M)),a(t)}}(),z=(e,t,s,r,i=0)=>{let a=new Uint8Array(e,t),n=new Uint8Array(s,r);for(let e=0;e<i;e++)n[e]=a[e]};class U{static CurrentMajorVersion=0;static CurrentMinorVersion=1;static CenterComponentCount=3;static ScaleComponentCount=3;static RotationComponentCount=4;static ColorComponentCount=4;static CovarianceComponentCount=6;static SplatScaleOffsetFloat=3;static SplatRotationOffsetFloat=6;static CompressionLevels={0:{BytesPerCenter:12,BytesPerScale:12,BytesPerRotation:16,BytesPerColor:4,ScaleOffsetBytes:12,RotationffsetBytes:24,ColorOffsetBytes:40,SphericalHarmonicsOffsetBytes:44,ScaleRange:1,BytesPerSphericalHarmonicsComponent:4,SphericalHarmonicsOffsetFloat:11,SphericalHarmonicsDegrees:{0:{BytesPerSplat:44},1:{BytesPerSplat:80},2:{BytesPerSplat:140}}},1:{BytesPerCenter:6,BytesPerScale:6,BytesPerRotation:8,BytesPerColor:4,ScaleOffsetBytes:6,RotationffsetBytes:12,ColorOffsetBytes:20,SphericalHarmonicsOffsetBytes:24,ScaleRange:32767,BytesPerSphericalHarmonicsComponent:2,SphericalHarmonicsOffsetFloat:12,SphericalHarmonicsDegrees:{0:{BytesPerSplat:24},1:{BytesPerSplat:42},2:{BytesPerSplat:72}}},2:{BytesPerCenter:6,BytesPerScale:6,BytesPerRotation:8,BytesPerColor:4,ScaleOffsetBytes:6,RotationffsetBytes:12,ColorOffsetBytes:20,SphericalHarmonicsOffsetBytes:24,ScaleRange:32767,BytesPerSphericalHarmonicsComponent:1,SphericalHarmonicsOffsetFloat:12,SphericalHarmonicsDegrees:{0:{BytesPerSplat:24},1:{BytesPerSplat:33},2:{BytesPerSplat:48}}}};static CovarianceSizeFloats=6;static HeaderSizeBytes=4096;static SectionHeaderSizeBytes=1024;static BucketStorageSizeBytes=12;static BucketStorageSizeFloats=3;static BucketBlockSize=5;static BucketSize=256;constructor(e,t=!0){this.constructFromBuffer(e,t)}getSplatCount(){return this.splatCount}getMaxSplatCount(){return this.maxSplatCount}getMinSphericalHarmonicsDegree(){let e=0;for(let t=0;t<this.sections.length;t++){let s=this.sections[t];(0===t||s.sphericalHarmonicsDegree<e)&&(e=s.sphericalHarmonicsDegree)}return e}getBucketIndex(e,t){let s;let r=e.fullBucketCount*e.bucketSize;if(t<r)s=Math.floor(t/e.bucketSize);else{let i=r;s=e.fullBucketCount;let a=0;for(;i<e.splatCount;){let r=e.partiallyFilledBucketLengths[a];if(t>=i&&t<i+r)break;i+=r,s++,a++}}return s}getSplatCenter(e,t,s){let r=this.globalSplatIndexToSectionMap[e],i=this.sections[r],a=e-i.splatCountOffset,n=i.bytesPerSplat*a,o=new DataView(this.bufferData,i.dataBase+n),l=_(o,0,this.compressionLevel),c=_(o,1,this.compressionLevel),h=_(o,2,this.compressionLevel);if(this.compressionLevel>=1){let e=this.getBucketIndex(i,a)*U.BucketStorageSizeFloats,s=i.compressionScaleFactor,r=i.compressionScaleRange;t.x=(l-r)*s+i.bucketArray[e],t.y=(c-r)*s+i.bucketArray[e+1],t.z=(h-r)*s+i.bucketArray[e+2]}else t.x=l,t.y=c,t.z=h;s&&t.applyMatrix4(s)}getSplatScaleAndRotation=(function(){let e=new p.yGw,t=new p.yGw,s=new p.yGw,r=new p.Pa4,i=new p.Pa4,a=new p._fP;return function(n,o,l,c,h){let d=this.globalSplatIndexToSectionMap[n],p=this.sections[d],u=n-p.splatCountOffset,m=p.bytesPerSplat*u+U.CompressionLevels[this.compressionLevel].ScaleOffsetBytes,A=new DataView(this.bufferData,p.dataBase+m);i.set(P(_(A,0,this.compressionLevel),this.compressionLevel),P(_(A,1,this.compressionLevel),this.compressionLevel),P(_(A,2,this.compressionLevel),this.compressionLevel)),h&&(void 0!==h.x&&(i.x=h.x),void 0!==h.y&&(i.y=h.y),void 0!==h.z&&(i.z=h.z)),a.set(P(_(A,4,this.compressionLevel),this.compressionLevel),P(_(A,5,this.compressionLevel),this.compressionLevel),P(_(A,6,this.compressionLevel),this.compressionLevel),P(_(A,3,this.compressionLevel),this.compressionLevel)),c?(e.makeScale(i.x,i.y,i.z),t.makeRotationFromQuaternion(a),s.copy(e).multiply(t).multiply(c),s.decompose(r,l,o)):(o.copy(i),l.copy(a))}})();getSplatColor(e,t){let s=this.globalSplatIndexToSectionMap[e],r=this.sections[s],i=e-r.splatCountOffset,a=r.bytesPerSplat*i+U.CompressionLevels[this.compressionLevel].ColorOffsetBytes,n=new Uint8Array(this.bufferData,r.dataBase+a,4);t.set(n[0],n[1],n[2],n[3])}fillSplatCenterArray(e,t,s,r,i){let a=this.splatCount;s=s||0,r=r||a-1,void 0===i&&(i=s);let n=new p.Pa4;for(let a=s;a<=r;a++){let r=this.globalSplatIndexToSectionMap[a],o=this.sections[r],l=a-o.splatCountOffset,c=(a-s+i)*U.CenterComponentCount,h=o.bytesPerSplat*l,d=new DataView(this.bufferData,o.dataBase+h),p=_(d,0,this.compressionLevel),u=_(d,1,this.compressionLevel),m=_(d,2,this.compressionLevel);if(this.compressionLevel>=1){let e=this.getBucketIndex(o,l)*U.BucketStorageSizeFloats,t=o.compressionScaleFactor,s=o.compressionScaleRange;n.x=(p-s)*t+o.bucketArray[e],n.y=(u-s)*t+o.bucketArray[e+1],n.z=(m-s)*t+o.bucketArray[e+2]}else n.x=p,n.y=u,n.z=m;t&&n.applyMatrix4(t),e[c]=n.x,e[c+1]=n.y,e[c+2]=n.z}}fillSplatScaleRotationArray=(function(){let e=new p.yGw,t=new p.yGw,s=new p.yGw,r=new p.Pa4,i=new p._fP,a=new p.Pa4,n=e=>{let t=e.w<0?-1:1;e.x*=t,e.y*=t,e.z*=t,e.w*=t};return function(o,l,c,h,d,p,u,m){let A=this.splatCount;h=h||0,d=d||A-1,void 0===p&&(p=h);let f=(e,t)=>(void 0===t&&(t=this.compressionLevel),O(e,t,u));for(let u=h;u<=d;u++){let d=this.globalSplatIndexToSectionMap[u],A=this.sections[d],g=u-A.splatCountOffset,C=A.bytesPerSplat*g+U.CompressionLevels[this.compressionLevel].ScaleOffsetBytes,S=(u-h+p)*U.ScaleComponentCount,y=(u-h+p)*U.RotationComponentCount,x=new DataView(this.bufferData,A.dataBase+C),v=m&&void 0!==m.x?m.x:_(x,0,this.compressionLevel),I=m&&void 0!==m.y?m.y:_(x,1,this.compressionLevel),B=m&&void 0!==m.z?m.z:_(x,2,this.compressionLevel),w=_(x,3,this.compressionLevel),b=_(x,4,this.compressionLevel),T=_(x,5,this.compressionLevel),D=_(x,6,this.compressionLevel);r.set(P(v,this.compressionLevel),P(I,this.compressionLevel),P(B,this.compressionLevel)),i.set(P(b,this.compressionLevel),P(T,this.compressionLevel),P(D,this.compressionLevel),P(w,this.compressionLevel)).normalize(),c&&(a.set(0,0,0),e.makeScale(r.x,r.y,r.z),t.makeRotationFromQuaternion(i),s.identity().premultiply(e).premultiply(t),s.premultiply(c),s.decompose(a,i,r),i.normalize()),n(i),o&&(o[S]=f(r.x,0),o[S+1]=f(r.y,0),o[S+2]=f(r.z,0)),l&&(l[y]=f(i.x,0),l[y+1]=f(i.y,0),l[y+2]=f(i.z,0),l[y+3]=f(i.w,0))}}})();static computeCovariance=(function(){let e=new p.yGw,t=new p.Vkp,s=new p.Vkp,r=new p.Vkp,i=new p.Vkp,a=new p.Vkp,n=new p.Vkp;return function(o,l,c,h,d=0,p){e.makeScale(o.x,o.y,o.z),t.setFromMatrix4(e),e.makeRotationFromQuaternion(l),s.setFromMatrix4(e),r.copy(s).multiply(t),i.copy(r).transpose().premultiply(r),c&&(a.setFromMatrix4(c),n.copy(a).transpose(),i.multiply(n),i.premultiply(a)),p>=1?(h[d]=M(i.elements[0]),h[d+1]=M(i.elements[3]),h[d+2]=M(i.elements[6]),h[d+3]=M(i.elements[4]),h[d+4]=M(i.elements[7]),h[d+5]=M(i.elements[8])):(h[d]=i.elements[0],h[d+1]=i.elements[3],h[d+2]=i.elements[6],h[d+3]=i.elements[4],h[d+4]=i.elements[7],h[d+5]=i.elements[8])}})();fillSplatCovarianceArray(e,t,s,r,i,a){let n=this.splatCount,o=new p.Pa4,l=new p._fP;s=s||0,r=r||n-1,void 0===i&&(i=s);for(let n=s;n<=r;n++){let r=this.globalSplatIndexToSectionMap[n],c=this.sections[r],h=n-c.splatCountOffset,d=(n-s+i)*U.CovarianceComponentCount,p=c.bytesPerSplat*h+U.CompressionLevels[this.compressionLevel].ScaleOffsetBytes,u=new DataView(this.bufferData,c.dataBase+p);o.set(P(_(u,0,this.compressionLevel),this.compressionLevel),P(_(u,1,this.compressionLevel),this.compressionLevel),P(_(u,2,this.compressionLevel),this.compressionLevel)),l.set(P(_(u,4,this.compressionLevel),this.compressionLevel),P(_(u,5,this.compressionLevel),this.compressionLevel),P(_(u,6,this.compressionLevel),this.compressionLevel),P(_(u,3,this.compressionLevel),this.compressionLevel)),U.computeCovariance(o,l,t,e,d,a)}}fillSplatColorArray(e,t,s,r,i){let a=this.splatCount;s=s||0,r=r||a-1,void 0===i&&(i=s);for(let a=s;a<=r;a++){let r=this.globalSplatIndexToSectionMap[a],n=this.sections[r],o=a-n.splatCountOffset,l=(a-s+i)*U.ColorComponentCount,c=n.bytesPerSplat*o+U.CompressionLevels[this.compressionLevel].ColorOffsetBytes,h=new Uint8Array(this.bufferData,n.dataBase+c),d=h[3];d=d>=t?d:0,e[l]=h[0],e[l+1]=h[1],e[l+2]=h[2],e[l+3]=d}}fillSphericalHarmonicsArray=(function(){let e=[];for(let t=0;t<15;t++)e[t]=new p.Pa4;let t=new p.Vkp,s=new p.yGw,r=new p.Pa4,i=new p.Pa4,a=new p._fP,n=[],o=[],l=[],c=[],h=[],d=[],u=[],m=[],A=[],f=[],g=[],C=[],S=[],y=[],v=[],I=[],B=[],w=[],b=e=>e,T=(e,t,s,r)=>{e[0]=t,e[1]=s,e[2]=r},D=(e,t,s,r,i)=>{e[0]=_(t,r,i,!0),e[1]=_(t,r+s,i,!0),e[2]=_(t,r+s+s,i,!0)},E=(e,t)=>{t[0]=e[0],t[1]=e[1],t[2]=e[2]},k=(e,t,s,r)=>{t[s]=r(e[0]),t[s+1]=r(e[1]),t[s+2]=r(e[2])},L=(e,t,s,r,i)=>(t[0]=P(e[0],s,!0,r,i),t[1]=P(e[1],s,!0,r,i),t[2]=P(e[2],s,!0,r,i),t);return function(e,p,P,_,O,z,Q){let N=this.splatCount;_=_||0,O=O||N-1,void 0===z&&(z=_),P&&p>=1&&(s.copy(P),s.decompose(r,a,i),a.normalize(),s.makeRotationFromQuaternion(a),t.setFromMatrix4(s),T(n,t.elements[4],-t.elements[7],t.elements[1]),T(o,-t.elements[5],t.elements[8],-t.elements[2]),T(l,t.elements[3],-t.elements[6],t.elements[0]));let V=e=>H(e,this.minSphericalHarmonicsCoeff,this.maxSphericalHarmonicsCoeff),K=e=>R(e,this.minSphericalHarmonicsCoeff,this.maxSphericalHarmonicsCoeff);for(let t=_;t<=O;t++){let s=this.globalSplatIndexToSectionMap[t],r=this.sections[s],i=x(p=Math.min(p,r.sphericalHarmonicsDegree)),a=t-r.splatCountOffset,T=r.bytesPerSplat*a+U.CompressionLevels[this.compressionLevel].SphericalHarmonicsOffsetBytes,R=new DataView(this.bufferData,r.dataBase+T),H=(t-_+z)*i,O=P?0:this.compressionLevel,N=b;O!==Q&&(1===O?0===Q?N=F:2==Q&&(N=V):0===O&&(1===Q?N=M:2==Q&&(N=K)));let G=this.minSphericalHarmonicsCoeff,j=this.maxSphericalHarmonicsCoeff;p>=1&&(D(A,R,3,0,this.compressionLevel),D(f,R,3,1,this.compressionLevel),D(g,R,3,2,this.compressionLevel),P?(L(A,A,this.compressionLevel,G,j),L(f,f,this.compressionLevel,G,j),L(g,g,this.compressionLevel,G,j),U.rotateSphericalHarmonics3(A,f,g,n,o,l,y,v,I)):(E(A,y),E(f,v),E(g,I)),k(y,e,H,N),k(v,e,H+3,N),k(I,e,H+6,N),p>=2&&(D(A,R,5,9,this.compressionLevel),D(f,R,5,10,this.compressionLevel),D(g,R,5,11,this.compressionLevel),D(C,R,5,12,this.compressionLevel),D(S,R,5,13,this.compressionLevel),P?(L(A,A,this.compressionLevel,G,j),L(f,f,this.compressionLevel,G,j),L(g,g,this.compressionLevel,G,j),L(C,C,this.compressionLevel,G,j),L(S,S,this.compressionLevel,G,j),U.rotateSphericalHarmonics5(A,f,g,C,S,n,o,l,c,h,d,u,m,y,v,I,B,w)):(E(A,y),E(f,v),E(g,I),E(C,B),E(S,w)),k(y,e,H+9,N),k(v,e,H+12,N),k(I,e,H+15,N),k(B,e,H+18,N),k(w,e,H+21,N)))}}})();static dot3=(e,t,s,r,i)=>{i[0]=i[1]=i[2]=0;let a=r[0],n=r[1],o=r[2];U.addInto3(e[0]*a,e[1]*a,e[2]*a,i),U.addInto3(t[0]*n,t[1]*n,t[2]*n,i),U.addInto3(s[0]*o,s[1]*o,s[2]*o,i)};static addInto3=(e,t,s,r)=>{r[0]=r[0]+e,r[1]=r[1]+t,r[2]=r[2]+s};static dot5=(e,t,s,r,i,a,n)=>{n[0]=n[1]=n[2]=0;let o=a[0],l=a[1],c=a[2],h=a[3],d=a[4];U.addInto3(e[0]*o,e[1]*o,e[2]*o,n),U.addInto3(t[0]*l,t[1]*l,t[2]*l,n),U.addInto3(s[0]*c,s[1]*c,s[2]*c,n),U.addInto3(r[0]*h,r[1]*h,r[2]*h,n),U.addInto3(i[0]*d,i[1]*d,i[2]*d,n)};static rotateSphericalHarmonics3=(e,t,s,r,i,a,n,o,l)=>{U.dot3(e,t,s,r,n),U.dot3(e,t,s,i,o),U.dot3(e,t,s,a,l)};static rotateSphericalHarmonics5=(e,t,s,r,i,a,n,o,l,c,h,d,p,u,m,A,f,g)=>{let C=Math.sqrt(.25),S=Math.sqrt(.75),y=Math.sqrt(1/3),x=Math.sqrt(4/3),v=Math.sqrt(1/12);l[0]=C*(o[2]*a[0]+o[0]*a[2]+(a[2]*o[0]+a[0]*o[2])),l[1]=o[1]*a[0]+a[1]*o[0],l[2]=S*(o[1]*a[1]+a[1]*o[1]),l[3]=o[1]*a[2]+a[1]*o[2],l[4]=C*(o[2]*a[2]-o[0]*a[0]+(a[2]*o[2]-a[0]*o[0])),U.dot5(e,t,s,r,i,l,u),c[0]=C*(n[2]*a[0]+n[0]*a[2]+(a[2]*n[0]+a[0]*n[2])),c[1]=n[1]*a[0]+a[1]*n[0],c[2]=S*(n[1]*a[1]+a[1]*n[1]),c[3]=n[1]*a[2]+a[1]*n[2],c[4]=C*(n[2]*a[2]-n[0]*a[0]+(a[2]*n[2]-a[0]*n[0])),U.dot5(e,t,s,r,i,c,m),h[0]=y*(n[2]*n[0]+n[0]*n[2])+-v*(o[2]*o[0]+o[0]*o[2]+(a[2]*a[0]+a[0]*a[2])),h[1]=x*n[1]*n[0]+-y*(o[1]*o[0]+a[1]*a[0]),h[2]=n[1]*n[1]+-C*(o[1]*o[1]+a[1]*a[1]),h[3]=x*n[1]*n[2]+-y*(o[1]*o[2]+a[1]*a[2]),h[4]=y*(n[2]*n[2]-n[0]*n[0])+-v*(o[2]*o[2]-o[0]*o[0]+(a[2]*a[2]-a[0]*a[0])),U.dot5(e,t,s,r,i,h,A),d[0]=C*(n[2]*o[0]+n[0]*o[2]+(o[2]*n[0]+o[0]*n[2])),d[1]=n[1]*o[0]+o[1]*n[0],d[2]=S*(n[1]*o[1]+o[1]*n[1]),d[3]=n[1]*o[2]+o[1]*n[2],d[4]=C*(n[2]*o[2]-n[0]*o[0]+(o[2]*n[2]-o[0]*n[0])),U.dot5(e,t,s,r,i,d,f),p[0]=C*(o[2]*o[0]+o[0]*o[2]-(a[2]*a[0]+a[0]*a[2])),p[1]=o[1]*o[0]-a[1]*a[0],p[2]=S*(o[1]*o[1]-a[1]*a[1]),p[3]=o[1]*o[2]-a[1]*a[2],p[4]=C*(o[2]*o[2]-o[0]*o[0]-(a[2]*a[2]-a[0]*a[0])),U.dot5(e,t,s,r,i,p,g)};static parseHeader(e){let t=new Uint8Array(e,0,U.HeaderSizeBytes),s=new Uint16Array(e,0,U.HeaderSizeBytes/2),r=new Uint32Array(e,0,U.HeaderSizeBytes/4),i=new Float32Array(e,0,U.HeaderSizeBytes/4),a=t[0],n=t[1],o=r[1],l=r[2],c=r[3],h=r[4],d=s[10];return{versionMajor:a,versionMinor:n,maxSectionCount:o,sectionCount:l,maxSplatCount:c,splatCount:h,compressionLevel:d,sceneCenter:new p.Pa4(i[6],i[7],i[8]),minSphericalHarmonicsCoeff:i[9]||-E,maxSphericalHarmonicsCoeff:i[10]||E}}static writeHeaderCountsToBuffer(e,t,s){let r=new Uint32Array(s,0,U.HeaderSizeBytes/4);r[2]=e,r[4]=t}static writeHeaderToBuffer(e,t){let s=new Uint8Array(t,0,U.HeaderSizeBytes),r=new Uint16Array(t,0,U.HeaderSizeBytes/2),i=new Uint32Array(t,0,U.HeaderSizeBytes/4),a=new Float32Array(t,0,U.HeaderSizeBytes/4);s[0]=e.versionMajor,s[1]=e.versionMinor,s[2]=0,s[3]=0,i[1]=e.maxSectionCount,i[2]=e.sectionCount,i[3]=e.maxSplatCount,i[4]=e.splatCount,r[10]=e.compressionLevel,a[6]=e.sceneCenter.x,a[7]=e.sceneCenter.y,a[8]=e.sceneCenter.z,a[9]=e.minSphericalHarmonicsCoeff||-E,a[10]=e.maxSphericalHarmonicsCoeff||E}static parseSectionHeaders(e,t,s=0,r){let i=e.compressionLevel,a=e.maxSectionCount,n=new Uint16Array(t,s,a*U.SectionHeaderSizeBytes/2),o=new Uint32Array(t,s,a*U.SectionHeaderSizeBytes/4),l=new Float32Array(t,s,a*U.SectionHeaderSizeBytes/4),c=[],h=0,d=0,p=0,u=U.HeaderSizeBytes+e.maxSectionCount*U.SectionHeaderSizeBytes,m=0;for(let e=0;e<a;e++){let t=o[p+1],s=o[p+2],a=o[p+3],A=l[p+4],f=A/2,g=n[d+10],C=o[p+6]||U.CompressionLevels[i].ScaleRange,S=o[p+8],y=o[p+9],x=4*y,v=g*a+x,I=n[d+20],{bytesPerSplat:B}=U.calculateComponentStorage(i,I),w=B*t,b=w+v,T={bytesPerSplat:B,splatCountOffset:m,splatCount:r?t:0,maxSplatCount:t,bucketSize:s,bucketCount:a,bucketBlockSize:A,halfBucketBlockSize:f,bucketStorageSizeBytes:g,bucketsStorageSizeBytes:v,splatDataStorageSizeBytes:w,storageSizeBytes:b,compressionScaleRange:C,compressionScaleFactor:f/C,base:u,bucketsBase:u+x,dataBase:u+v,fullBucketCount:S,partiallyFilledBucketCount:y,sphericalHarmonicsDegree:I};c[e]=T,u+=b,h+=U.SectionHeaderSizeBytes,d=h/2,p=h/4,m+=t}return c}static writeSectionHeaderToBuffer(e,t,s,r=0){let i=new Uint16Array(s,r,U.SectionHeaderSizeBytes/2),a=new Uint32Array(s,r,U.SectionHeaderSizeBytes/4),n=new Float32Array(s,r,U.SectionHeaderSizeBytes/4);a[0]=e.splatCount,a[1]=e.maxSplatCount,a[2]=t>=1?e.bucketSize:0,a[3]=t>=1?e.bucketCount:0,n[4]=t>=1?e.bucketBlockSize:0,i[10]=t>=1?U.BucketStorageSizeBytes:0,a[6]=t>=1?e.compressionScaleRange:0,a[7]=e.storageSizeBytes,a[8]=t>=1?e.fullBucketCount:0,a[9]=t>=1?e.partiallyFilledBucketCount:0,i[20]=e.sphericalHarmonicsDegree}static writeSectionHeaderSplatCountToBuffer(e,t,s=0){new Uint32Array(t,s,U.SectionHeaderSizeBytes/4)[0]=e}constructFromBuffer(e,t){this.bufferData=e,this.globalSplatIndexToLocalSplatIndexMap=[],this.globalSplatIndexToSectionMap=[];let s=U.parseHeader(this.bufferData);this.versionMajor=s.versionMajor,this.versionMinor=s.versionMinor,this.maxSectionCount=s.maxSectionCount,this.sectionCount=t?s.maxSectionCount:0,this.maxSplatCount=s.maxSplatCount,this.splatCount=t?s.maxSplatCount:0,this.compressionLevel=s.compressionLevel,this.sceneCenter=new p.Pa4().copy(s.sceneCenter),this.minSphericalHarmonicsCoeff=s.minSphericalHarmonicsCoeff,this.maxSphericalHarmonicsCoeff=s.maxSphericalHarmonicsCoeff,this.sections=U.parseSectionHeaders(s,this.bufferData,U.HeaderSizeBytes,t),this.linkBufferArrays(),this.buildMaps()}static calculateComponentStorage(e,t){let s=U.CompressionLevels[e].BytesPerCenter,r=U.CompressionLevels[e].BytesPerScale,i=U.CompressionLevels[e].BytesPerRotation,a=U.CompressionLevels[e].BytesPerColor,n=x(t),o=U.CompressionLevels[e].BytesPerSphericalHarmonicsComponent*n;return{bytesPerCenter:s,bytesPerScale:r,bytesPerRotation:i,bytesPerColor:a,sphericalHarmonicsComponentsPerSplat:n,sphericalHarmonicsBytesPerSplat:o,bytesPerSplat:s+r+i+a+o}}linkBufferArrays(){for(let e=0;e<this.maxSectionCount;e++){let t=this.sections[e];t.bucketArray=new Float32Array(this.bufferData,t.bucketsBase,t.bucketCount*U.BucketStorageSizeFloats),t.partiallyFilledBucketCount>0&&(t.partiallyFilledBucketLengths=new Uint32Array(this.bufferData,t.base,t.partiallyFilledBucketCount))}}buildMaps(){let e=0;for(let t=0;t<this.maxSectionCount;t++){let s=this.sections[t];for(let r=0;r<s.maxSplatCount;r++){let s=e+r;this.globalSplatIndexToLocalSplatIndexMap[s]=r,this.globalSplatIndexToSectionMap[s]=t}e+=s.maxSplatCount}}updateLoadedCounts(e,t){U.writeHeaderCountsToBuffer(e,t,this.bufferData),this.sectionCount=e,this.splatCount=t}updateSectionLoadedCounts(e,t){let s=U.HeaderSizeBytes+U.SectionHeaderSizeBytes*e;U.writeSectionHeaderSplatCountToBuffer(t,this.bufferData,s),this.sections[e].splatCount=t}static writeSplatDataToSectionBuffer=(function(){let e=new ArrayBuffer(12),t=new ArrayBuffer(12),s=new ArrayBuffer(16),r=new ArrayBuffer(4),i=new ArrayBuffer(256),a=new p._fP,n=new p.Pa4,o=new p.Pa4,{X:l,Y:c,Z:h,SCALE0:d,SCALE1:u,SCALE2:m,ROTATION0:A,ROTATION1:f,ROTATION2:C,ROTATION3:S,FDC0:y,FDC1:v,FDC2:I,OPACITY:B,FRC0:w,FRC9:b}=T.OFFSET,D=(e,t,s)=>g(e=Math.round(e*t)+s,0,2*s+1);return function(p,g,T,F,P,k,H,L,_=-E,O=E){let Q=x(P),N=U.CompressionLevels[F].BytesPerCenter,V=U.CompressionLevels[F].BytesPerScale,K=U.CompressionLevels[F].BytesPerRotation,G=U.CompressionLevels[F].BytesPerColor,j=T+N,q=j+V,W=q+K,Y=W+G;if(void 0!==p[A]?(a.set(p[A],p[f],p[C],p[S]),a.normalize()):a.set(1,0,0,0),void 0!==p[d]?n.set(p[d]||0,p[u]||0,p[m]||0):n.set(0,0,0),0===F){let e=new Float32Array(g,T,U.CenterComponentCount),t=new Float32Array(g,q,U.RotationComponentCount),s=new Float32Array(g,j,U.ScaleComponentCount);if(t.set([a.x,a.y,a.z,a.w]),s.set([n.x,n.y,n.z]),e.set([p[l],p[c],p[h]]),P>0){let e=new Float32Array(g,Y,Q);if(P>=1){for(let t=0;t<9;t++)e[t]=p[w+t]||0;if(P>=2)for(let t=0;t<15;t++)e[t+9]=p[b+t]||0}}}else{let r=new Uint16Array(e,0,U.CenterComponentCount),d=new Uint16Array(s,0,U.RotationComponentCount),u=new Uint16Array(t,0,U.ScaleComponentCount);if(d.set([M(a.x),M(a.y),M(a.z),M(a.w)]),u.set([M(n.x),M(n.y),M(n.z)]),o.set(p[l],p[c],p[h]).sub(k),o.x=D(o.x,H,L),o.y=D(o.y,H,L),o.z=D(o.z,H,L),r.set([o.x,o.y,o.z]),P>0){let e=1===F?Uint16Array:Uint8Array,t=1===F?2:1,s=new e(i,0,Q);if(P>=1){for(let e=0;e<9;e++){let t=p[w+e]||0;s[e]=1===F?M(t):R(t,_,O)}let e=9*t;if(z(s.buffer,0,g,Y,e),P>=2){for(let e=0;e<15;e++){let t=p[b+e]||0;s[e+9]=1===F?M(t):R(t,_,O)}z(s.buffer,e,g,Y+e,15*t)}}}z(r.buffer,0,g,T,6),z(u.buffer,0,g,j,6),z(d.buffer,0,g,q,8)}let X=new Uint8ClampedArray(r,0,4);X.set([p[y]||0,p[v]||0,p[I]||0]),X[3]=p[B]||0,z(X.buffer,0,g,W,4)}})();static generateFromUncompressedSplatArrays(e,t,s,r,i,a,n=[]){let o,l,c=0;for(let t=0;t<e.length;t++)c=Math.max(e[t].sphericalHarmonicsDegree,c);for(let t=0;t<e.length;t++){let s=e[t];for(let e=0;e<s.splats.length;e++){let t=s.splats[e];for(let e=T.OFFSET.FRC0;e<T.OFFSET.FRC23&&e<t.length;e++)(!o||t[e]<o)&&(o=t[e]),(!l||t[e]>l)&&(l=t[e])}}o=o||-E,l=l||E;let{bytesPerSplat:h}=U.calculateComponentStorage(s,c),d=U.CompressionLevels[s].ScaleRange,u=[],m=[],A=0;for(let r=0;r<e.length;r++){let f=e[r],g=new T(c);for(let e=0;e<f.splatCount;e++){let s=f.splats[e];(s[T.OFFSET.OPACITY]||0)>=t&&g.addSplat(s)}let C=n[r]||{},S=(C.blockSizeFactor||1)*(i||U.BucketBlockSize),y=Math.ceil((C.bucketSizeFactor||1)*(a||U.BucketSize)),x=U.computeBucketsForUncompressedSplatArray(g,S,y),v=x.fullBuckets.length,I=x.partiallyFullBuckets.map(e=>e.splats.length),B=I.length,w=[...x.fullBuckets,...x.partiallyFullBuckets],b=g.splats.length*h,D=4*B,E=s>=1?w.length*U.BucketStorageSizeBytes+D:0,M=b+E,F=new ArrayBuffer(M),P=d/(.5*S),R=new p.Pa4,k=0;for(let e=0;e<w.length;e++){let t=w[e];R.fromArray(t.center);for(let e=0;e<t.splats.length;e++){let r=t.splats[e],i=g.splats[r],a=E+k*h;U.writeSplatDataToSectionBuffer(i,F,a,s,c,R,P,d,o,l),k++}}if(A+=k,s>=1){let e=new Uint32Array(F,0,4*I.length);for(let t=0;t<I.length;t++)e[t]=I[t];let t=new Float32Array(F,D,w.length*U.BucketStorageSizeFloats);for(let e=0;e<w.length;e++){let s=w[e],r=3*e;t[r]=s.center[0],t[r+1]=s.center[1],t[r+2]=s.center[2]}}u.push(F);let H=new ArrayBuffer(U.SectionHeaderSizeBytes);U.writeSectionHeaderToBuffer({maxSplatCount:k,splatCount:k,bucketSize:y,bucketCount:w.length,bucketBlockSize:S,compressionScaleRange:d,storageSizeBytes:M,fullBucketCount:v,partiallyFilledBucketCount:B,sphericalHarmonicsDegree:c},s,H,0),m.push(H)}let f=0;for(let e of u)f+=e.byteLength;let g=new ArrayBuffer(U.HeaderSizeBytes+U.SectionHeaderSizeBytes*u.length+f);U.writeHeaderToBuffer({versionMajor:0,versionMinor:1,maxSectionCount:u.length,sectionCount:u.length,maxSplatCount:A,splatCount:A,compressionLevel:s,sceneCenter:r,minSphericalHarmonicsCoeff:o,maxSphericalHarmonicsCoeff:l},g);let C=U.HeaderSizeBytes;for(let e of m)new Uint8Array(g,C,U.SectionHeaderSizeBytes).set(new Uint8Array(e)),C+=U.SectionHeaderSizeBytes;for(let e of u)new Uint8Array(g,C,e.byteLength).set(new Uint8Array(e)),C+=e.byteLength;return new U(g)}static computeBucketsForUncompressedSplatArray(e,t,s){let r=e.splatCount,i=t/2,a=new p.Pa4,n=new p.Pa4;for(let t=0;t<r;t++){let s=e.splats[t],r=[s[T.OFFSET.X],s[T.OFFSET.Y],s[T.OFFSET.Z]];(0===t||r[0]<a.x)&&(a.x=r[0]),(0===t||r[0]>n.x)&&(n.x=r[0]),(0===t||r[1]<a.y)&&(a.y=r[1]),(0===t||r[1]>n.y)&&(n.y=r[1]),(0===t||r[2]<a.z)&&(a.z=r[2]),(0===t||r[2]>n.z)&&(n.z=r[2])}let o=new p.Pa4().copy(n).sub(a),l=Math.ceil(o.y/t),c=Math.ceil(o.z/t),h=new p.Pa4,d=[],u={};for(let n=0;n<r;n++){let r=e.splats[n],o=[r[T.OFFSET.X],r[T.OFFSET.Y],r[T.OFFSET.Z]],p=Math.floor((o[0]-a.x)/t),m=Math.floor((o[1]-a.y)/t),A=Math.floor((o[2]-a.z)/t);h.x=p*t+a.x+i,h.y=m*t+a.y+i,h.z=A*t+a.z+i;let f=l*c*p+m*c+A,g=u[f];g||(u[f]=g={splats:[],center:h.toArray()}),g.splats.push(n),g.splats.length>=s&&(d.push(g),u[f]=null)}let m=[];for(let e in u)if(u.hasOwnProperty(e)){let t=u[e];t&&m.push(t)}return{fullBuckets:d,partiallyFullBuckets:m}}}let Q=new Uint8Array([112,108,121,10]),N=new Uint8Array([10,101,110,100,95,104,101,97,100,101,114,10]),V="end_header",K=new Map([["char",Int8Array],["uchar",Uint8Array],["short",Int16Array],["ushort",Uint16Array],["int",Int32Array],["uint",Uint32Array],["float",Float32Array],["double",Float64Array]]),G=(e,t)=>{let s=(1<<t)-1;return(e&s)/s},j=(e,t)=>{e.x=G(t>>>21,11),e.y=G(t>>>11,10),e.z=G(t,11)},q=(e,t)=>{e.x=G(t>>>24,8),e.y=G(t>>>16,8),e.z=G(t>>>8,8),e.w=G(t,8)},W=(e,t)=>{let s=1/(.5*Math.sqrt(2)),r=(G(t>>>20,10)-.5)*s,i=(G(t>>>10,10)-.5)*s,a=(G(t,10)-.5)*s,n=Math.sqrt(1-(r*r+i*i+a*a));switch(t>>>30){case 0:e.set(n,r,i,a);break;case 1:e.set(r,n,i,a);break;case 2:e.set(r,i,n,a);break;case 3:e.set(r,i,a,n)}},Y=(e,t,s)=>e*(1-s)+t*s,X=(e,t)=>e.properties.find(e=>e.name===t&&e.storage)?.storage;class J{static decodeHeaderText(e){let t,s,r;let i=e.split("\n").filter(e=>!e.startsWith("comment ")),a=0,n=!1;for(let e=1;e<i.length;++e){let o=i[e].split(" ");switch(o[0]){case"format":if("binary_little_endian"!==o[1])throw Error("Unsupported ply format");break;case"element":"chunk"===(t={name:o[1],count:parseInt(o[2],10),properties:[],storageSizeBytes:0}).name?s=t:"vertex"===t.name&&(r=t);break;case"property":{if(!K.has(o[1]))throw Error(`Unrecognized property data type '${o[1]}' in ply header`);let e=K.get(o[1]),s=e.BYTES_PER_ELEMENT*t.count;"vertex"===t.name&&(a+=e.BYTES_PER_ELEMENT),t.properties.push({type:o[1],name:o[2],storage:null,byteSize:e.BYTES_PER_ELEMENT,storageSizeByes:s}),t.storageSizeBytes+=s;break}case V:n=!0;break;default:throw Error(`Unrecognized header value '${o[0]}' in ply header`)}if(n)break}return{chunkElement:s,vertexElement:r,bytesPerSplat:a,headerSizeBytes:e.indexOf(V)+V.length+1,sphericalHarmonicsDegree:0}}static decodeHeader(e){let t;let s=new Uint8Array(e);if(s.length>=Q.length&&!((e,t)=>{if(e.length<t.length)return!1;for(let s=0;s<t.length;++s)if(e[s]!==t[s])return!1;return!0})(s,Q))throw Error("Invalid PLY header");if(-1===(t=((e,t)=>{let s,r;let i=e.length-t.length;for(s=0;s<=i;++s){for(r=0;r<t.length&&e[s+r]===t[r];++r);if(r===t.length)return s}return -1})(s,N)))throw Error("End of PLY header not found");let r=new TextDecoder("ascii").decode(s.slice(0,t)),{chunkElement:i,vertexElement:a,bytesPerSplat:n}=J.decodeHeaderText(r);return{headerSizeBytes:t+N.length,bytesPerSplat:n,chunkElement:i,vertexElement:a}}static readElementData(e,t,s,r,i,a=null){let n=t instanceof DataView?t:new DataView(t);r=r||0,i=i||e.count-1;for(let t=r;t<=i;++t)for(let r=0;r<e.properties.length;++r){let i=e.properties[r],o=K.get(i.type),l=o.BYTES_PER_ELEMENT*e.count;if((!i.storage||i.storage.byteLength<l)&&(!a||a(i.name))&&(i.storage=new o(e.count)),i.storage)switch(i.type){case"char":i.storage[t]=n.getInt8(s);break;case"uchar":i.storage[t]=n.getUint8(s);break;case"short":i.storage[t]=n.getInt16(s,!0);break;case"ushort":i.storage[t]=n.getUint16(s,!0);break;case"int":i.storage[t]=n.getInt32(s,!0);break;case"uint":i.storage[t]=n.getUint32(s,!0);break;case"float":i.storage[t]=n.getFloat32(s,!0);break;case"double":i.storage[t]=n.getFloat64(s,!0)}s+=i.byteSize}return s}static readPly(e,t=null){let s=J.decodeHeader(e),r=J.readElementData(s.chunkElement,e,s.headerSizeBytes,null,null,t);return J.readElementData(s.vertexElement,e,r,null,null,t),{chunkElement:s.chunkElement,vertexElement:s.vertexElement}}static getElementStorageArrays(e,t){let s=X(e,"min_x"),r=X(e,"min_y"),i=X(e,"min_z"),a=X(e,"max_x"),n=X(e,"max_y"),o=X(e,"max_z"),l=X(e,"min_scale_x"),c=X(e,"min_scale_y"),h=X(e,"min_scale_z"),d=X(e,"max_scale_x"),p=X(e,"max_scale_y"),u=X(e,"max_scale_z"),m=X(t,"packed_position");return{positionExtremes:{minX:s,maxX:a,minY:r,maxY:n,minZ:i,maxZ:o},scaleExtremes:{minScaleX:l,maxScaleX:d,minScaleY:c,maxScaleY:p,minScaleZ:h,maxScaleZ:u},position:m,rotation:X(t,"packed_rotation"),scale:X(t,"packed_scale"),color:X(t,"packed_color")}}static decompressSplat=(function(){let e=new p.Pa4,t=new p._fP,s=new p.Pa4,r=new p.Ltg,i=T.OFFSET;return function(a,n,o,l,c,h,d,p,u){u=u||T.createSplat();let m=Math.floor((n+a)/256);return j(e,o[a]),W(t,d[a]),j(s,c[a]),q(r,p[a]),u[i.X]=Y(l.minX[m],l.maxX[m],e.x),u[i.Y]=Y(l.minY[m],l.maxY[m],e.y),u[i.Z]=Y(l.minZ[m],l.maxZ[m],e.z),u[i.ROTATION0]=t.x,u[i.ROTATION1]=t.y,u[i.ROTATION2]=t.z,u[i.ROTATION3]=t.w,u[i.SCALE0]=Math.exp(Y(h.minScaleX[m],h.maxScaleX[m],s.x)),u[i.SCALE1]=Math.exp(Y(h.minScaleY[m],h.maxScaleY[m],s.y)),u[i.SCALE2]=Math.exp(Y(h.minScaleZ[m],h.maxScaleZ[m],s.z)),u[i.FDC0]=g(Math.floor(255*r.x),0,255),u[i.FDC1]=g(Math.floor(255*r.y),0,255),u[i.FDC2]=g(Math.floor(255*r.z),0,255),u[i.OPACITY]=g(Math.floor(255*r.w),0,255),u}})();static parseToUncompressedSplatBufferSection(e,t,s,r,i,a,n,o,l,c=null){J.readElementData(t,a,n,s,r,c);let h=U.CompressionLevels[0].SphericalHarmonicsDegrees[0].BytesPerSplat,{positionExtremes:d,scaleExtremes:p,position:u,rotation:m,scale:A,color:f}=J.getElementStorageArrays(e,t),g=T.createSplat();for(let e=s;e<=r;++e){J.decompressSplat(e,i,u,d,A,p,m,f,g);let t=e*h+l;U.writeSplatDataToSectionBuffer(g,o,t,0,0)}}static parseToUncompressedSplatArray(e){let{chunkElement:t,vertexElement:s}=J.readPly(e),r=new T,{positionExtremes:i,scaleExtremes:a,position:n,rotation:o,scale:l,color:c}=J.getElementStorageArrays(t,s);for(let e=0;e<s.count;++e){r.addDefaultSplat();let t=r.getSplat(r.splatCount-1);J.decompressSplat(e,0,n,i,l,a,o,c,t)}return new p.yGw().identity(),r}}let Z={INRIAV1:0,INRIAV2:1,PlayCanvasCompressed:2},[$,ee,et,es,er,ei,ea]=[0,1,2,3,4,5,6],en={double:$,int:ee,uint:et,float:es,short:er,ushort:ei,uchar:ea},eo={[$]:8,[ee]:4,[et]:4,[es]:4,[er]:2,[ei]:2,[ea]:1};class el{static HeaderEndToken="end_header";constructor(){}decodeSectionHeader(e,t,s=0){let r=[],i=!1,a=-1,n=0,o=!1,l=null,c=[],h=[],d=[],p=[],u={};for(let m=s;m<e.length;m++){let A=e[m].trim();if(A.startsWith("element")){if(i){a--;break}{i=!0,s=m,a=m;let e=A.split(" "),t=0;for(let s of e){let e=s.trim();e.length>0&&(2==++t?l=e:3===t&&(n=parseInt(e)))}}}else if(A.startsWith("property")){let e=A.match(/(\w+)\s+(\w+)\s+(\w+)/);if(e){let s=e[2],r=e[3];d.push(r);let i=t[r];u[r]=s;let a=en[s];void 0!==i&&(p.push(r),c.push(i),h[i]=a)}}if(A===el.HeaderEndToken){o=!0;break}i&&(r.push(A),a++)}let m=[],A=0;for(let e of d){let s=u[e];if(u.hasOwnProperty(e)){let s=t[e];void 0!==s&&(m[s]=A)}A+=eo[en[s]]}let f=this.decodeSphericalHarmonicsFromSectionHeader(d,t);return{headerLines:r,headerStartLine:s,headerEndLine:a,fieldTypes:h,fieldIds:c,fieldOffsets:m,bytesPerVertex:A,vertexCount:n,dataSizeBytes:A*n,endOfHeader:o,sectionName:l,sphericalHarmonicsDegree:f.degree,sphericalHarmonicsCoefficientsPerChannel:f.coefficientsPerChannel,sphericalHarmonicsDegree1Fields:f.degree1Fields,sphericalHarmonicsDegree2Fields:f.degree2Fields}}decodeSphericalHarmonicsFromSectionHeader(e,t){let s=0,r=0;for(let t of e)t.startsWith("f_rest")&&s++;let i=0;(r=s/3)>=3&&(i=1),r>=8&&(i=2);let a=[],n=[];for(let e=0;e<3;e++){if(i>=1)for(let s=0;s<3;s++)a.push(t["f_rest_"+(s+r*e)]);if(i>=2)for(let s=0;s<5;s++)n.push(t["f_rest_"+(s+r*e+3)])}return{degree:i,coefficientsPerChannel:r,degree1Fields:a,degree2Fields:n}}static getHeaderSectionNames(e){let t=[];for(let s of e)if(s.startsWith("element")){let e=s.split(" "),r=0;for(let s of e){let e=s.trim();e.length>0&&2==++r&&t.push(e)}}return t}static checkTextForEndHeader(e){return!!e.includes(el.HeaderEndToken)}static checkBufferForEndHeader(e,t,s,r){let i=new Uint8Array(e,Math.max(0,t-s),s),a=r.decode(i);return el.checkTextForEndHeader(a)}static extractHeaderFromBufferToText(e){let t=new TextDecoder,s=0,r="";for(;;){if(s+100>=e.byteLength)throw Error("End of file reached while searching for end of header");let i=new Uint8Array(e,s,100);if(r+=t.decode(i),s+=100,el.checkBufferForEndHeader(e,s,200,t))break}return r}readHeaderFromBuffer(e){let t=new TextDecoder,s=0,r="";for(;;){if(s+100>=e.byteLength)throw Error("End of file reached while searching for end of header");let i=new Uint8Array(e,s,100);if(r+=t.decode(i),s+=100,el.checkBufferForEndHeader(e,s,200,t))break}return r}static convertHeaderTextToLines(e){let t=e.split("\n"),s=[];for(let e=0;e<t.length;e++){let r=t[e].trim();if(s.push(r),r===el.HeaderEndToken)break}return s}static determineHeaderFormatFromHeaderText(e){let t=el.convertHeaderTextToLines(e),s=Z.INRIAV1;for(let e=0;e<t.length;e++){let r=t[e].trim();if(r.startsWith("element chunk")||r.match(/[A-Za-z]*packed_[A-Za-z]*/))s=Z.PlayCanvasCompressed;else if(r.startsWith("element codebook_centers"))s=Z.INRIAV2;else if(r===el.HeaderEndToken)break}return s}static determineHeaderFormatFromPlyBuffer(e){let t=el.extractHeaderFromBufferToText(e);return el.determineHeaderFormatFromHeaderText(t)}static readVertex(e,t,s,r,i,a,n=!0){let o=s*t.bytesPerVertex+r,l=t.fieldOffsets,c=t.fieldTypes;for(let t of i){let s=c[t];s===es?a[t]=e.getFloat32(o+l[t],!0):s===er?a[t]=e.getInt16(o+l[t],!0):s===ei?a[t]=e.getUint16(o+l[t],!0):s===ee?a[t]=e.getInt32(o+l[t],!0):s===et?a[t]=e.getUint32(o+l[t],!0):s===ea&&(n?a[t]=e.getUint8(o+l[t])/255:a[t]=e.getUint8(o+l[t]))}}}let ec=["scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3","x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","red","green","blue","f_rest_0"],[eh,ed,ep,eu,em,eA,ef,eg,eC,eS,ey,ex,ev,eI,eB,ew,eb,eT]=ec.map((e,t)=>t);class eD{constructor(){this.plyParserutils=new el}decodeHeaderLines(e){let t=0;e.forEach(e=>{e.includes("f_rest_")&&t++});let s=0;t>=45?s=45:t>=24?s=24:t>=9&&(s=9);let r=[...ec,...Array.from(Array(Math.max(s-1,0))).map((e,t)=>`f_rest_${t+1}`)],i=r.map((e,t)=>t),a=i.reduce((e,t)=>(e[r[t]]=t,e),{}),n=this.plyParserutils.decodeSectionHeader(e,a,0);return n.splatCount=n.vertexCount,n.bytesPerSplat=n.bytesPerVertex,n.fieldsToReadIndexes=i,n}decodeHeaderText(e){let t=el.convertHeaderTextToLines(e),s=this.decodeHeaderLines(t);return s.headerText=e,s.headerSizeBytes=e.indexOf(el.HeaderEndToken)+el.HeaderEndToken.length+1,s}decodeHeaderFromBuffer(e){let t=this.plyParserutils.readHeaderFromBuffer(e);return this.decodeHeaderText(t)}findSplatData(e,t){return new DataView(e,t.headerSizeBytes)}parseToUncompressedSplatBufferSection(e,t,s,r,i,a,n,o=0){o=Math.min(o,e.sphericalHarmonicsDegree);let l=U.CompressionLevels[0].SphericalHarmonicsDegrees[o].BytesPerSplat;for(let c=t;c<=s;c++){let t=eD.parseToUncompressedSplat(r,c,e,i,o),s=c*l+n;U.writeSplatDataToSectionBuffer(t,a,s,0,o)}}decodeSectionSplatData(e,t,s,r){let i=new T(r=Math.min(r,s.sphericalHarmonicsDegree));for(let a=0;a<t;a++){let t=eD.parseToUncompressedSplat(e,a,s,0,r);i.addSplat(t)}return i}static parseToUncompressedSplat=(function(){let e=[],t=new p._fP,s=T.OFFSET.X,r=T.OFFSET.Y,i=T.OFFSET.Z,a=T.OFFSET.SCALE0,n=T.OFFSET.SCALE1,o=T.OFFSET.SCALE2,l=T.OFFSET.ROTATION0,c=T.OFFSET.ROTATION1,h=T.OFFSET.ROTATION2,d=T.OFFSET.ROTATION3,u=T.OFFSET.FDC0,m=T.OFFSET.FDC1,A=T.OFFSET.FDC2,f=T.OFFSET.OPACITY,C=[];for(let e=0;e<45;e++)C[e]=T.OFFSET.FRC0+e;return function(p,S,y,x=0,v=0){v=Math.min(v,y.sphericalHarmonicsDegree),eD.readSplat(p,y,S,x,e);let I=T.createSplat(v);if(void 0!==e[eh]?(I[a]=Math.exp(e[eh]),I[n]=Math.exp(e[ed]),I[o]=Math.exp(e[ep])):(I[a]=.01,I[n]=.01,I[o]=.01),void 0!==e[ey]?(I[u]=(.5+.28209479177387814*e[ey])*255,I[m]=(.5+.28209479177387814*e[ex])*255,I[A]=(.5+.28209479177387814*e[ev])*255):void 0!==e[eB]?(I[u]=255*e[eB],I[m]=255*e[ew],I[A]=255*e[eb]):(I[u]=0,I[m]=0,I[A]=0),void 0!==e[eI]&&(I[f]=1/(1+Math.exp(-e[eI]))*255),I[u]=g(Math.floor(I[u]),0,255),I[m]=g(Math.floor(I[m]),0,255),I[A]=g(Math.floor(I[A]),0,255),I[f]=g(Math.floor(I[f]),0,255),v>=1&&void 0!==e[eT]){for(let t=0;t<9;t++)I[C[t]]=e[y.sphericalHarmonicsDegree1Fields[t]];if(v>=2)for(let t=0;t<15;t++)I[C[9+t]]=e[y.sphericalHarmonicsDegree2Fields[t]]}return t.set(e[eu],e[em],e[eA],e[ef]),t.normalize(),I[l]=t.x,I[c]=t.y,I[h]=t.z,I[d]=t.w,I[s]=e[eg],I[r]=e[eC],I[i]=e[eS],I}})();static readSplat(e,t,s,r,i){return el.readVertex(e,t,s,r,t.fieldsToReadIndexes,i,!0)}parseToUncompressedSplatArray(e,t=0){let s=this.decodeHeaderFromBuffer(e),r=s.splatCount,i=this.findSplatData(e,s);return this.decodeSectionSplatData(i,r,s,t)}}let eE=["features_dc","features_rest_0","features_rest_1","features_rest_2","features_rest_3","features_rest_4","features_rest_5","features_rest_6","features_rest_7","features_rest_8","features_rest_9","features_rest_10","features_rest_11","features_rest_12","features_rest_13","features_rest_14","opacity","scaling","rotation_re","rotation_im"],eM=eE.map((e,t)=>t),[eF,eP,eR,ek,eH,eL,e_]=[0,1,4,16,17,18,19],eO=["scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3","x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","red","green","blue","f_rest_0","f_rest_1","f_rest_2","f_rest_3","f_rest_4","f_rest_5","f_rest_6","f_rest_7","f_rest_8","f_rest_9","f_rest_10","f_rest_11","f_rest_12","f_rest_13","f_rest_14","f_rest_15","f_rest_16","f_rest_17","f_rest_18","f_rest_19","f_rest_20","f_rest_21","f_rest_22","f_rest_23","f_rest_24","f_rest_25","f_rest_26","f_rest_27","f_rest_28","f_rest_29","f_rest_30","f_rest_31","f_rest_32","f_rest_33","f_rest_34","f_rest_35","f_rest_36","f_rest_37","f_rest_38","f_rest_39","f_rest_40","f_rest_41","f_rest_42","f_rest_43","f_rest_44","f_rest_45"],ez=eO.map((e,t)=>t),[eU,eQ,eN,eV,eK,eG,ej,eq,eW,eY,eX,eJ,eZ,e$]=ez,e0=e=>{let t=(31744&e)>>10,s=1023&e;return(e>>15?-1:1)*(t?31===t?s?NaN:1/0:Math.pow(2,t-15)*(1+s/1024):s/1024*6103515625e-14)};class e1{constructor(){this.plyParserutils=new el}decodeSectionHeadersFromHeaderLines(e){let t;let s=ez.reduce((e,t)=>(e[eO[t]]=t,e),{}),r=eM.reduce((e,t)=>(e[eE[t]]=t,e),{}),i=el.getHeaderSectionNames(e);for(let e=0;e<i.length;e++)"codebook_centers"===i[e]&&(t=e);let a=0,n=!1,o=[],l=0;for(;!n;){let i;n=(i=l===t?this.plyParserutils.decodeSectionHeader(e,r,a):this.plyParserutils.decodeSectionHeader(e,s,a)).endOfHeader,a=i.headerEndLine+1,n||(i.splatCount=i.vertexCount,i.bytesPerSplat=i.bytesPerVertex),o.push(i),l++}return o}decodeSectionHeadersFromHeaderText(e){let t=el.convertHeaderTextToLines(e);return this.decodeSectionHeadersFromHeaderLines(t)}getSplatCountFromSectionHeaders(e){let t=0;for(let s of e)"codebook_centers"!==s.sectionName&&(t+=s.vertexCount);return t}decodeHeaderFromHeaderText(e){let t=e.indexOf(el.HeaderEndToken)+el.HeaderEndToken.length+1,s=this.decodeSectionHeadersFromHeaderText(e),r=this.getSplatCountFromSectionHeaders(s);return{headerSizeBytes:t,sectionHeaders:s,splatCount:r}}decodeHeaderFromBuffer(e){let t=this.plyParserutils.readHeaderFromBuffer(e);return this.decodeHeaderFromHeaderText(t)}findVertexData(e,t,s){let r=t.headerSizeBytes;for(let e=0;e<s&&e<t.sectionHeaders.length;e++)r+=t.sectionHeaders[e].dataSizeBytes;return new DataView(e,r,t.sectionHeaders[s].dataSizeBytes)}decodeCodeBook(e,t){let s=[],r=[];for(let i=0;i<t.vertexCount;i++)for(let a of(el.readVertex(e,t,i,0,eM,s),eM)){let e=eM[a],t=r[e];t||(r[e]=t=[]),t.push(s[a])}for(let e=0;e<r.length;e++){let t=r[e];for(let s=0;s<t.length;s++){let r=e0(t[s]);e===ek?t[s]=Math.round(1/(1+Math.exp(-r))*255):e===eF?t[s]=Math.round((.5+.28209479177387814*r)*255):e===eH?t[s]=Math.exp(r):t[s]=r}}return r}decodeSectionSplatData(e,t,s,r,i){let a=new T(i=Math.min(i,s.sphericalHarmonicsDegree));for(let n=0;n<t;n++){let t=e1.parseToUncompressedSplat(e,n,s,r,0,i);a.addSplat(t)}return a}static parseToUncompressedSplat=(function(){let e=[],t=new p._fP,s=T.OFFSET.X,r=T.OFFSET.Y,i=T.OFFSET.Z,a=T.OFFSET.SCALE0,n=T.OFFSET.SCALE1,o=T.OFFSET.SCALE2,l=T.OFFSET.ROTATION0,c=T.OFFSET.ROTATION1,h=T.OFFSET.ROTATION2,d=T.OFFSET.ROTATION3,u=T.OFFSET.FDC0,m=T.OFFSET.FDC1,A=T.OFFSET.FDC2,f=T.OFFSET.OPACITY,C=[];for(let e=0;e<45;e++)C[e]=T.OFFSET.FRC0+e;return function(p,S,y,x,v=0,I=0){I=Math.min(I,y.sphericalHarmonicsDegree),e1.readSplat(p,y,S,v,e);let B=T.createSplat(I);if(void 0!==e[eU]?(B[a]=x[eH][e[eU]],B[n]=x[eH][e[eQ]],B[o]=x[eH][e[eN]]):(B[a]=.01,B[n]=.01,B[o]=.01),void 0!==e[eX]?(B[u]=x[eF][e[eX]],B[m]=x[eF][e[eJ]],B[A]=x[eF][e[eZ]]):void 0!==e[eX]?(B[u]=255*e[eX],B[m]=255*e[eJ],B[A]=255*e[eZ]):(B[u]=0,B[m]=0,B[A]=0),void 0!==e[e$]&&(B[f]=x[ek][e[e$]]),B[u]=g(Math.floor(B[u]),0,255),B[m]=g(Math.floor(B[m]),0,255),B[A]=g(Math.floor(B[A]),0,255),B[f]=g(Math.floor(B[f]),0,255),I>=1&&y.sphericalHarmonicsDegree>=1){for(let t=0;t<9;t++){let s=x[eP+t%3];B[C[t]]=s[e[y.sphericalHarmonicsDegree1Fields[t]]]}if(I>=2&&y.sphericalHarmonicsDegree>=2)for(let t=0;t<15;t++){let s=x[eR+t%5];B[C[9+t]]=s[e[y.sphericalHarmonicsDegree2Fields[t]]]}}let w=x[eL][e[eV]],b=x[e_][e[eK]],D=x[e_][e[eG]],E=x[e_][e[ej]];return t.set(w,b,D,E),t.normalize(),B[l]=t.x,B[c]=t.y,B[h]=t.z,B[d]=t.w,B[s]=e0(e[eq]),B[r]=e0(e[eW]),B[i]=e0(e[eY]),B}})();static readSplat(e,t,s,r,i){return el.readVertex(e,t,s,r,ez,i,!1)}parseToUncompressedSplatArray(e,t=0){let s;let r=[],i=this.decodeHeaderFromBuffer(e,t);for(let t=0;t<i.sectionHeaders.length;t++){let r=i.sectionHeaders[t];if("codebook_centers"===r.sectionName){let a=this.findVertexData(e,i,t);s=this.decodeCodeBook(a,r)}}for(let a=0;a<i.sectionHeaders.length;a++){let n=i.sectionHeaders[a];if("codebook_centers"!==n.sectionName){let o=n.vertexCount,l=this.findVertexData(e,i,a),c=this.decodeSectionSplatData(l,o,n,s,t);r.push(c)}}let a=new T(t);for(let e of r)for(let t of e.splats)a.addSplat(t);return a}}class e2{static parseToUncompressedSplatArray(e,t=0){let s=el.determineHeaderFormatFromPlyBuffer(e);return s===Z.PlayCanvasCompressed?J.parseToUncompressedSplatArray(e):s===Z.INRIAV1?new eD().parseToUncompressedSplatArray(e,t):s===Z.INRIAV2?new e1().parseToUncompressedSplatArray(e,t):void 0}}class e4{constructor(e,t,s,r){this.sectionCount=e,this.sectionFilters=t,this.groupingParameters=s,this.partitionGenerator=r}partitionUncompressedSplatArray(e){let t,s,r;if(this.partitionGenerator){let i=this.partitionGenerator(e);t=i.groupingParameters,s=i.sectionCount,r=i.sectionFilters}else t=this.groupingParameters,s=this.sectionCount,r=this.sectionFilters;let i=[];for(let t=0;t<s;t++){let s=new T(e.sphericalHarmonicsDegree),a=r[t];for(let t=0;t<e.splatCount;t++)a(t)&&s.addSplatFromArray(e,t);i.push(s)}return{splatArrays:i,parameters:t}}static getStandardPartitioner(e=0,t=new p.Pa4,s=U.BucketBlockSize,r=U.BucketSize){return new e4(void 0,void 0,void 0,i=>{let a=T.OFFSET.X,n=T.OFFSET.Y,o=T.OFFSET.Z;e<=0&&(e=i.splatCount);let l=new p.Pa4,c=e=>{e.x=.5*Math.floor(e.x/.5),e.y=.5*Math.floor(e.y/.5),e.z=.5*Math.floor(e.z/.5)};i.splats.forEach(e=>{l.set(e[a],e[n],e[o]).sub(t),c(l),e.centerDist=l.lengthSq()}),i.splats.sort((e,t)=>e.centerDist>t.centerDist?1:-1);let h=[],d=[];e=Math.min(i.splatCount,e);let u=Math.ceil(i.splatCount/e),m=0;for(let t=0;t<u;t++){let t=m;h.push(s=>s>=t&&s<t+e),d.push({blocksSize:s,bucketSize:r}),m+=e}return{sectionCount:h.length,sectionFilters:h,groupingParameters:d}})}}class e3{constructor(e,t,s,r,i,a,n){this.splatPartitioner=e,this.alphaRemovalThreshold=t,this.compressionLevel=s,this.sectionSize=r,this.sceneCenter=i?new p.Pa4().copy(i):void 0,this.blockSize=a,this.bucketSize=n}generateFromUncompressedSplatArray(e){let t=this.splatPartitioner.partitionUncompressedSplatArray(e);return U.generateFromUncompressedSplatArrays(t.splatArrays,this.alphaRemovalThreshold,this.compressionLevel,this.sceneCenter,this.blockSize,this.bucketSize,t.parameters)}static getStandardGenerator(e=1,t=1,s=0,r=new p.Pa4,i=U.BucketBlockSize,a=U.BucketSize){return new e3(e4.getStandardPartitioner(s,r,i,a),e,t,s,r,i,a)}}let e5={Downloading:0,Processing:1,Done:2};function e8(e,t){let s=0;for(let t of e)s+=t.sizeBytes;(!t||t.byteLength<s)&&(t=new ArrayBuffer(s));let r=0;for(let s of e)new Uint8Array(t,r,s.sizeBytes).set(s.data),r+=s.sizeBytes;return t}class e9{static loadFromURL(e,t,s,r,i,a,n=0,o,l,c,h){let d,u,m,A;let g=D.ProgressiveLoadSectionSize,C=U.HeaderSizeBytes+U.SectionHeaderSizeBytes,S=0,y=0,x=!1,I=!1,B=!1,w=v(),b=0,T=0,E=0,M="",F=null,P=[],R=new TextDecoder,k=new eD;return f(e,(e,i,a)=>{let o=e>=100;if(s){if(a&&(P.push({data:a,sizeBytes:a.byteLength,startBytes:E,endBytes:E+a.byteLength}),E+=a.byteLength),x){if(B&&!I){let e=F.headerSizeBytes+F.chunkElement.storageSizeBytes;(A=e8(P,A)).byteLength>=e&&(J.readElementData(F.chunkElement,A,F.headerSizeBytes),b=e,T=e,I=!0)}}else if(M+=R.decode(a),el.checkTextForEndHeader(M)){let e=el.determineHeaderFormatFromHeaderText(M);if(e===Z.INRIAV1)S=(F=k.decodeHeaderText(M)).splatCount,I=!0,B=!1;else if(e===Z.PlayCanvasCompressed)S=(F=J.decodeHeaderText(M)).vertexElement.count,B=!0;else throw Error("PlyLoader.loadFromURL() -> Selected Ply format cannot be progressively loaded.");n=Math.min(n,F.sphericalHarmonicsDegree),u=new ArrayBuffer(C+U.CompressionLevels[0].SphericalHarmonicsDegrees[n].BytesPerSplat*S),U.writeHeaderToBuffer({versionMajor:U.CurrentMajorVersion,versionMinor:U.CurrentMinorVersion,maxSectionCount:1,sectionCount:1,maxSplatCount:S,splatCount:y,compressionLevel:0,sceneCenter:new p.Pa4},u),b=F.headerSizeBytes,T=F.headerSizeBytes,x=!0}if(x&&I){if(P.length>0&&(d=e8(P,d),E-b>g||o)){let e=E-T,t=Math.floor(e/F.bytesPerSplat),s=t*F.bytesPerSplat,i=e-s,a=y+t,l=T-P[0].startBytes,c=new DataView(d,l,s),h=U.CompressionLevels[0].SphericalHarmonicsDegrees[n],p=y*h.BytesPerSplat+C;if(B?J.parseToUncompressedSplatBufferSection(F.chunkElement,F.vertexElement,0,t-1,y,c,0,u,p):k.parseToUncompressedSplatBufferSection(F,0,t-1,c,0,u,p,n),y=a,m||(U.writeSectionHeaderToBuffer({maxSplatCount:S,splatCount:y,bucketSize:0,bucketCount:0,bucketBlockSize:0,compressionScaleRange:0,storageSizeBytes:0,fullBucketCount:0,partiallyFilledBucketCount:0,sphericalHarmonicsDegree:n},0,u,U.HeaderSizeBytes),m=new U(u,!1)),m.updateLoadedCounts(1,y),r(m,o),b+=g,T+=s,0===i)P=[];else{let e=[],t=0;for(let s=P.length-1;s>=0;s--){let r=P[s];if(t+=r.sizeBytes,e.unshift(r),t>=i)break}P=e}}o&&w.resolve(m)}}t&&t(e,i,e5.Downloading)},!s).then(e=>(t&&t(0,"0%",e5.Processing),(s?w.promise:e9.loadFromFileData(e,i,a,n,o,l,c,h)).then(e=>(t&&t(100,"100%",e5.Done),e))))}static loadFromFileData(e,t,s,r=0,i,a,n,o){return y(()=>e2.parseToUncompressedSplatArray(e,r)).then(e=>e3.getStandardGenerator(t,s,i,a,n,o).generateFromUncompressedSplatArray(e))}}class e6{static RowSizeBytes=32;static CenterSizeBytes=12;static ScaleSizeBytes=12;static RotationSizeBytes=4;static ColorSizeBytes=4;static parseToUncompressedSplatBufferSection(e,t,s,r,i,a){let n=U.CompressionLevels[0].BytesPerCenter,o=U.CompressionLevels[0].BytesPerScale,l=U.CompressionLevels[0].BytesPerRotation,c=U.CompressionLevels[0].SphericalHarmonicsDegrees[0].BytesPerSplat;for(let h=e;h<=t;h++){let e=h*e6.RowSizeBytes+r,t=new Float32Array(s,e,3),d=new Float32Array(s,e+e6.CenterSizeBytes,3),u=new Uint8Array(s,e+e6.CenterSizeBytes+e6.ScaleSizeBytes,4),m=new Uint8Array(s,e+e6.CenterSizeBytes+e6.ScaleSizeBytes+e6.RotationSizeBytes,4),A=new p._fP((m[1]-128)/128,(m[2]-128)/128,(m[3]-128)/128,(m[0]-128)/128);A.normalize();let f=h*c+a,g=new Float32Array(i,f,3),C=new Float32Array(i,f+n,3),S=new Float32Array(i,f+n+o,4),y=new Uint8Array(i,f+n+o+l,4);g[0]=t[0],g[1]=t[1],g[2]=t[2],C[0]=d[0],C[1]=d[1],C[2]=d[2],S[0]=A.w,S[1]=A.x,S[2]=A.y,S[3]=A.z,y[0]=u[0],y[1]=u[1],y[2]=u[2],y[3]=u[3]}}static parseStandardSplatToUncompressedSplatArray(e){let t=e.byteLength/e6.RowSizeBytes,s=new T;for(let r=0;r<t;r++){let t=r*e6.RowSizeBytes,i=new Float32Array(e,t,3),a=new Float32Array(e,t+e6.CenterSizeBytes,3),n=new Uint8Array(e,t+e6.CenterSizeBytes+e6.ScaleSizeBytes,4),o=new Uint8Array(e,t+e6.CenterSizeBytes+e6.ScaleSizeBytes+e6.ColorSizeBytes,4),l=new p._fP((o[1]-128)/128,(o[2]-128)/128,(o[3]-128)/128,(o[0]-128)/128);l.normalize(),s.addSplatFromComonents(i[0],i[1],i[2],a[0],a[1],a[2],l.w,l.x,l.y,l.z,n[0],n[1],n[2],n[3])}return s}}class e7{static loadFromURL(e,t,s,r,i,a,n,o,l,c,h){let d,u,m;let A=U.HeaderSizeBytes+U.SectionHeaderSizeBytes,g=D.ProgressiveLoadSectionSize,C=0,S=0,y=v(),x=0,I=0,B=[];return f(e,(e,i,a,n)=>{let o=e>=100;if(n||(s=!1),s){if(d||(C=n/e6.RowSizeBytes,d=new ArrayBuffer(n),u=new ArrayBuffer(A+U.CompressionLevels[0].SphericalHarmonicsDegrees[0].BytesPerSplat*C),U.writeHeaderToBuffer({versionMajor:U.CurrentMajorVersion,versionMinor:U.CurrentMinorVersion,maxSectionCount:1,sectionCount:1,maxSplatCount:C,splatCount:S,compressionLevel:0,sceneCenter:new p.Pa4},u)),a){B.push(a),new Uint8Array(d,I,a.byteLength).set(new Uint8Array(a));let e=(I+=a.byteLength)-x;if(e>g||o){let t=(o?e:g)/e6.RowSizeBytes,s=S+t;e6.parseToUncompressedSplatBufferSection(S,s-1,d,0,u,A),S=s,m||(U.writeSectionHeaderToBuffer({maxSplatCount:C,splatCount:S,bucketSize:0,bucketCount:0,bucketBlockSize:0,compressionScaleRange:0,storageSizeBytes:0,fullBucketCount:0,partiallyFilledBucketCount:0},0,u,U.HeaderSizeBytes),m=new U(u,!1)),m.updateLoadedCounts(1,S),r(m,o),x+=g}}o&&y.resolve(m)}return t&&t(e,i,e5.Downloading),s},!0).then(e=>(t&&t(0,"0%",e5.Processing),(s?y.promise:e7.loadFromFileData(e,i,a,n,o,l,c,h)).then(e=>(t&&t(100,"100%",e5.Done),e))))}static loadFromFileData(e,t,s,r,i,a,n,o){return y(()=>{let l=e6.parseStandardSplatToUncompressedSplatArray(e);return r?e3.getStandardGenerator(t,s,i,a,n,o).generateFromUncompressedSplatArray(l):U.generateFromUncompressedSplatArrays([l],t,0,new p.Pa4)})}}class te{static checkVersion(e){let t=U.CurrentMajorVersion,s=U.CurrentMinorVersion,r=U.parseHeader(e);if(r.versionMajor===t&&r.versionMinor>=s||r.versionMajor>t)return!0;throw Error(`KSplat version not supported: v${r.versionMajor}.${r.versionMinor}. Minimum required: v${t}.${s}`)}static loadFromURL(e,t,s,r){let i,a,n,o,l;let c=!1,h=!1,d=[],p=!1,u=!1,m=0,A=0,g=0,C=!1,S=!1,y=!1,x=[],I=v(),B=()=>{c||h||!(m>=U.HeaderSizeBytes)||(h=!0,new Blob(x).arrayBuffer().then(e=>{new Uint8Array(n=new ArrayBuffer(U.HeaderSizeBytes)).set(new Uint8Array(e,0,U.HeaderSizeBytes)),te.checkVersion(n),h=!1,c=!0,o=U.parseHeader(n),window.setTimeout(()=>{T()},1)}))},w=0,b=()=>{0===w&&(w++,window.setTimeout(()=>{w--,E()},1))},T=()=>{!u&&!p&&c&&m>=U.HeaderSizeBytes+U.SectionHeaderSizeBytes*o.maxSectionCount&&(u=!0,new Blob(x).arrayBuffer().then(e=>{u=!1,p=!0,new Uint8Array(l=new ArrayBuffer(o.maxSectionCount*U.SectionHeaderSizeBytes)).set(new Uint8Array(e,U.HeaderSizeBytes,o.maxSectionCount*U.SectionHeaderSizeBytes)),d=U.parseSectionHeaders(o,l,0,!1);let t=0;for(let e=0;e<o.maxSectionCount;e++)t+=d[e].storageSizeBytes;let s=U.HeaderSizeBytes+o.maxSectionCount*U.SectionHeaderSizeBytes+t;if(!i){i=new ArrayBuffer(s);let e=0;for(let t=0;t<x.length;t++){let s=x[t];new Uint8Array(i,e,s.byteLength).set(new Uint8Array(s)),e+=s.byteLength}}g=U.HeaderSizeBytes+U.SectionHeaderSizeBytes*o.maxSectionCount;for(let e=0;e<=d.length&&e<o.maxSectionCount;e++)g+=d[e].storageSizeBytes;b()}))},E=()=>{y||(y=!0,window.setTimeout(()=>{if(y=!1,p&&!S&&(C=m>=g,m-A>D.ProgressiveLoadSectionSize||C)){A+=D.ProgressiveLoadSectionSize,S=A>=g,a||(a=new U(i,!1));let e=U.HeaderSizeBytes+U.SectionHeaderSizeBytes*o.maxSectionCount,s=0,n=0,l=0;for(let t=0;t<o.maxSectionCount;t++){let r=d[t],i=e+(s+4*r.partiallyFilledBucketCount+r.bucketStorageSizeBytes*r.bucketCount);if(A>=i){n++;let e=Math.floor((A-i)/U.CompressionLevels[o.compressionLevel].SphericalHarmonicsDegrees[r.sphericalHarmonicsDegree].BytesPerSplat);l+=e=Math.min(e,r.maxSplatCount),a.updateLoadedCounts(n,l),a.updateSectionLoadedCounts(t,e)}else break;s+=r.storageSizeBytes}r(a,S);let c=A/g*100,h=c.toFixed(2)+"%";t&&t(c,h,e5.Downloading),S?I.resolve(a):E()}},D.ProgressiveLoadSectionDelayDuration))};return f(e,(e,r,a)=>{a&&(x.push(a),i&&new Uint8Array(i,m,a.byteLength).set(new Uint8Array(a)),m+=a.byteLength),s?(B(),T(),E()):t&&t(e,r,e5.Downloading)},!s).then(e=>(t&&t(0,"0%",e5.Processing),(s?I.promise:te.loadFromFileData(e)).then(e=>(t&&t(100,"100%",e5.Done),e))))}static loadFromFileData(e){return y(()=>(te.checkVersion(e),new U(e)))}static downloadFile=function(e,t){let s=new Blob([e.bufferData],{type:"application/octet-stream"});r||(r=document.createElement("a"),document.body.appendChild(r)),r.download=t,r.href=URL.createObjectURL(s),r.click()}}let tt={Splat:0,KSplat:1,Ply:2},ts=e=>e.endsWith(".ply")?tt.Ply:e.endsWith(".splat")?tt.Splat:e.endsWith(".ksplat")?tt.KSplat:null,tr={type:"change"},ti={type:"start"},ta={type:"end"},tn=new p.zHn,to=new p.JOQ,tl=Math.cos(70*p.M8C.DEG2RAD);class tc extends p.pBf{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new p.Pa4,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"KeyA",UP:"KeyW",RIGHT:"KeyD",BOTTOM:"KeyS"},this.mouseButtons={LEFT:p.RsA.ROTATE,MIDDLE:p.RsA.DOLLY,RIGHT:p.RsA.PAN},this.touches={ONE:p.QmN.ROTATE,TWO:p.QmN.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return n.phi},this.getAzimuthalAngle=function(){return n.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",q),this._domElementKeyEvents=e},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",q),this._domElementKeyEvents=null},this.saveState=function(){s.target0.copy(s.target),s.position0.copy(s.object.position),s.zoom0=s.object.zoom},this.reset=function(){s.target.copy(s.target0),s.object.position.copy(s.position0),s.object.zoom=s.zoom0,this.clearDampedRotation(),this.clearDampedPan(),s.object.updateProjectionMatrix(),s.dispatchEvent(tr),s.update(),i=r.NONE},this.clearDampedRotation=function(){o.theta=0,o.phi=0},this.clearDampedPan=function(){c.set(0,0,0)},this.update=function(){let t=new p.Pa4,h=new p._fP().setFromUnitVectors(e.up,new p.Pa4(0,1,0)),d=h.clone().invert(),u=new p.Pa4,m=new p._fP,A=new p.Pa4,f=2*Math.PI;return function(){h.setFromUnitVectors(e.up,new p.Pa4(0,1,0)),d.copy(h).invert();let g=s.object.position;t.copy(g).sub(s.target),t.applyQuaternion(h),n.setFromVector3(t),s.autoRotate&&i===r.NONE&&b(2*Math.PI/60/60*s.autoRotateSpeed),s.enableDamping?(n.theta+=o.theta*s.dampingFactor,n.phi+=o.phi*s.dampingFactor):(n.theta+=o.theta,n.phi+=o.phi);let C=s.minAzimuthAngle,S=s.maxAzimuthAngle;isFinite(C)&&isFinite(S)&&(C<-Math.PI?C+=f:C>Math.PI&&(C-=f),S<-Math.PI?S+=f:S>Math.PI&&(S-=f),C<=S?n.theta=Math.max(C,Math.min(S,n.theta)):n.theta=n.theta>(C+S)/2?Math.max(C,n.theta):Math.min(S,n.theta)),n.phi=Math.max(s.minPolarAngle,Math.min(s.maxPolarAngle,n.phi)),n.makeSafe(),!0===s.enableDamping?s.target.addScaledVector(c,s.dampingFactor):s.target.add(c),s.zoomToCursor&&v||s.object.isOrthographicCamera?n.radius=k(n.radius):n.radius=k(n.radius*l),t.setFromSpherical(n),t.applyQuaternion(d),g.copy(s.target).add(t),s.object.lookAt(s.target),!0===s.enableDamping?(o.theta*=1-s.dampingFactor,o.phi*=1-s.dampingFactor,c.multiplyScalar(1-s.dampingFactor)):(o.set(0,0,0),c.set(0,0,0));let I=!1;if(s.zoomToCursor&&v){let r=null;if(s.object.isPerspectiveCamera){let e=t.length();r=k(e*l);let i=e-r;s.object.position.addScaledVector(y,i),s.object.updateMatrixWorld()}else if(s.object.isOrthographicCamera){let e=new p.Pa4(x.x,x.y,0);e.unproject(s.object),s.object.zoom=Math.max(s.minZoom,Math.min(s.maxZoom,s.object.zoom/l)),s.object.updateProjectionMatrix(),I=!0;let i=new p.Pa4(x.x,x.y,0);i.unproject(s.object),s.object.position.sub(i).add(e),s.object.updateMatrixWorld(),r=t.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),s.zoomToCursor=!1;null!==r&&(this.screenSpacePanning?s.target.set(0,0,-1).transformDirection(s.object.matrix).multiplyScalar(r).add(s.object.position):(tn.origin.copy(s.object.position),tn.direction.set(0,0,-1).transformDirection(s.object.matrix),Math.abs(s.object.up.dot(tn.direction))<tl?e.lookAt(s.target):(to.setFromNormalAndCoplanarPoint(s.object.up,s.target),tn.intersectPlane(to,s.target))))}else s.object.isOrthographicCamera&&(s.object.zoom=Math.max(s.minZoom,Math.min(s.maxZoom,s.object.zoom/l)),s.object.updateProjectionMatrix(),I=!0);return l=1,v=!1,!!(I||u.distanceToSquared(s.object.position)>a||8*(1-m.dot(s.object.quaternion))>a||A.distanceToSquared(s.target)>0)&&(s.dispatchEvent(tr),u.copy(s.object.position),m.copy(s.object.quaternion),A.copy(s.target),I=!1,!0)}}(),this.dispose=function(){s.domElement.removeEventListener("contextmenu",W),s.domElement.removeEventListener("pointerdown",V),s.domElement.removeEventListener("pointercancel",G),s.domElement.removeEventListener("wheel",j),s.domElement.removeEventListener("pointermove",K),s.domElement.removeEventListener("pointerup",G),null!==s._domElementKeyEvents&&(s._domElementKeyEvents.removeEventListener("keydown",q),s._domElementKeyEvents=null)};let s=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},i=r.NONE,a=1e-6,n=new p.$V,o=new p.$V,l=1,c=new p.Pa4,h=new p.FM8,d=new p.FM8,u=new p.FM8,m=new p.FM8,A=new p.FM8,f=new p.FM8,g=new p.FM8,C=new p.FM8,S=new p.FM8,y=new p.Pa4,x=new p.FM8,v=!1,I=[],B={};function w(){return Math.pow(.95,s.zoomSpeed)}function b(e){o.theta-=e}function T(e){o.phi-=e}let D=function(){let e=new p.Pa4;return function(t,s){e.setFromMatrixColumn(s,0),e.multiplyScalar(-t),c.add(e)}}(),E=function(){let e=new p.Pa4;return function(t,r){!0===s.screenSpacePanning?e.setFromMatrixColumn(r,1):(e.setFromMatrixColumn(r,0),e.crossVectors(s.object.up,e)),e.multiplyScalar(t),c.add(e)}}(),M=function(){let e=new p.Pa4;return function(t,r){let i=s.domElement;if(s.object.isPerspectiveCamera){let a=s.object.position;e.copy(a).sub(s.target);let n=e.length();D(2*t*(n*=Math.tan(s.object.fov/2*Math.PI/180))/i.clientHeight,s.object.matrix),E(2*r*n/i.clientHeight,s.object.matrix)}else s.object.isOrthographicCamera?(D(t*(s.object.right-s.object.left)/s.object.zoom/i.clientWidth,s.object.matrix),E(r*(s.object.top-s.object.bottom)/s.object.zoom/i.clientHeight,s.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),s.enablePan=!1)}}();function F(e){s.object.isPerspectiveCamera||s.object.isOrthographicCamera?l/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),s.enableZoom=!1)}function P(e){s.object.isPerspectiveCamera||s.object.isOrthographicCamera?l*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),s.enableZoom=!1)}function R(t){if(!s.zoomToCursor)return;v=!0;let r=s.domElement.getBoundingClientRect(),i=t.clientX-r.left,a=t.clientY-r.top,n=r.width,o=r.height;x.x=i/n*2-1,x.y=-(a/o*2)+1,y.set(x.x,x.y,1).unproject(e).sub(e.position).normalize()}function k(e){return Math.max(s.minDistance,Math.min(s.maxDistance,e))}function H(e){h.set(e.clientX,e.clientY)}function L(e){m.set(e.clientX,e.clientY)}function _(){if(1===I.length)h.set(I[0].pageX,I[0].pageY);else{let e=.5*(I[0].pageX+I[1].pageX),t=.5*(I[0].pageY+I[1].pageY);h.set(e,t)}}function O(){if(1===I.length)m.set(I[0].pageX,I[0].pageY);else{let e=.5*(I[0].pageX+I[1].pageX),t=.5*(I[0].pageY+I[1].pageY);m.set(e,t)}}function z(){let e=I[0].pageX-I[1].pageX,t=I[0].pageY-I[1].pageY;g.set(0,Math.sqrt(e*e+t*t))}function U(e){if(1==I.length)d.set(e.pageX,e.pageY);else{let t=X(e),s=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);d.set(s,r)}u.subVectors(d,h).multiplyScalar(s.rotateSpeed);let t=s.domElement;b(2*Math.PI*u.x/t.clientHeight),T(2*Math.PI*u.y/t.clientHeight),h.copy(d)}function Q(e){if(1===I.length)A.set(e.pageX,e.pageY);else{let t=X(e),s=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);A.set(s,r)}f.subVectors(A,m).multiplyScalar(s.panSpeed),M(f.x,f.y),m.copy(A)}function N(e){let t=X(e),r=e.pageX-t.x,i=e.pageY-t.y;C.set(0,Math.sqrt(r*r+i*i)),S.set(0,Math.pow(C.y/g.y,s.zoomSpeed)),F(S.y),g.copy(C)}function V(e){!1!==s.enabled&&(0===I.length&&(s.domElement.setPointerCapture(e.pointerId),s.domElement.addEventListener("pointermove",K),s.domElement.addEventListener("pointerup",G)),I.push(e),"touch"===e.pointerType?function(e){switch(Y(e),I.length){case 1:switch(s.touches.ONE){case p.QmN.ROTATE:if(!1===s.enableRotate)return;_(),i=r.TOUCH_ROTATE;break;case p.QmN.PAN:if(!1===s.enablePan)return;O(),i=r.TOUCH_PAN;break;default:i=r.NONE}break;case 2:switch(s.touches.TWO){case p.QmN.DOLLY_PAN:if(!1===s.enableZoom&&!1===s.enablePan)return;s.enableZoom&&z(),s.enablePan&&O(),i=r.TOUCH_DOLLY_PAN;break;case p.QmN.DOLLY_ROTATE:if(!1===s.enableZoom&&!1===s.enableRotate)return;s.enableZoom&&z(),s.enableRotate&&_(),i=r.TOUCH_DOLLY_ROTATE;break;default:i=r.NONE}break;default:i=r.NONE}i!==r.NONE&&s.dispatchEvent(ti)}(e):function(e){let t;switch(e.button){case 0:t=s.mouseButtons.LEFT;break;case 1:t=s.mouseButtons.MIDDLE;break;case 2:t=s.mouseButtons.RIGHT;break;default:t=-1}switch(t){case p.RsA.DOLLY:if(!1===s.enableZoom)return;R(e),g.set(e.clientX,e.clientY),i=r.DOLLY;break;case p.RsA.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===s.enablePan)return;L(e),i=r.PAN}else{if(!1===s.enableRotate)return;H(e),i=r.ROTATE}break;case p.RsA.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===s.enableRotate)return;H(e),i=r.ROTATE}else{if(!1===s.enablePan)return;L(e),i=r.PAN}break;default:i=r.NONE}i!==r.NONE&&s.dispatchEvent(ti)}(e))}function K(e){!1!==s.enabled&&("touch"===e.pointerType?function(e){switch(Y(e),i){case r.TOUCH_ROTATE:if(!1===s.enableRotate)return;U(e),s.update();break;case r.TOUCH_PAN:if(!1===s.enablePan)return;Q(e),s.update();break;case r.TOUCH_DOLLY_PAN:if(!1===s.enableZoom&&!1===s.enablePan)return;s.enableZoom&&N(e),s.enablePan&&Q(e),s.update();break;case r.TOUCH_DOLLY_ROTATE:if(!1===s.enableZoom&&!1===s.enableRotate)return;s.enableZoom&&N(e),s.enableRotate&&U(e),s.update();break;default:i=r.NONE}}(e):function(e){switch(i){case r.ROTATE:if(!1===s.enableRotate)return;!function(e){d.set(e.clientX,e.clientY),u.subVectors(d,h).multiplyScalar(s.rotateSpeed);let t=s.domElement;b(2*Math.PI*u.x/t.clientHeight),T(2*Math.PI*u.y/t.clientHeight),h.copy(d),s.update()}(e);break;case r.DOLLY:if(!1===s.enableZoom)return;C.set(e.clientX,e.clientY),S.subVectors(C,g),S.y>0?F(w()):S.y<0&&P(w()),g.copy(C),s.update();break;case r.PAN:if(!1===s.enablePan)return;A.set(e.clientX,e.clientY),f.subVectors(A,m).multiplyScalar(s.panSpeed),M(f.x,f.y),m.copy(A),s.update()}}(e))}function G(e){(function(e){delete B[e.pointerId];for(let t=0;t<I.length;t++)if(I[t].pointerId==e.pointerId){I.splice(t,1);return}})(e),0===I.length&&(s.domElement.releasePointerCapture(e.pointerId),s.domElement.removeEventListener("pointermove",K),s.domElement.removeEventListener("pointerup",G)),s.dispatchEvent(ta),i=r.NONE}function j(e){!1!==s.enabled&&!1!==s.enableZoom&&i===r.NONE&&(e.preventDefault(),s.dispatchEvent(ti),R(e),e.deltaY<0?P(w()):e.deltaY>0&&F(w()),s.update(),s.dispatchEvent(ta))}function q(e){!1!==s.enabled&&!1!==s.enablePan&&function(e){let t=!1;switch(e.code){case s.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?T(2*Math.PI*s.rotateSpeed/s.domElement.clientHeight):M(0,s.keyPanSpeed),t=!0;break;case s.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?T(-2*Math.PI*s.rotateSpeed/s.domElement.clientHeight):M(0,-s.keyPanSpeed),t=!0;break;case s.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?b(2*Math.PI*s.rotateSpeed/s.domElement.clientHeight):M(s.keyPanSpeed,0),t=!0;break;case s.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?b(-2*Math.PI*s.rotateSpeed/s.domElement.clientHeight):M(-s.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),s.update())}(e)}function W(e){!1!==s.enabled&&e.preventDefault()}function Y(e){let t=B[e.pointerId];void 0===t&&(t=new p.FM8,B[e.pointerId]=t),t.set(e.pageX,e.pageY)}function X(e){return B[(e.pointerId===I[0].pointerId?I[1]:I[0]).pointerId]}s.domElement.addEventListener("contextmenu",W),s.domElement.addEventListener("pointerdown",V),s.domElement.addEventListener("pointercancel",G),s.domElement.addEventListener("wheel",j,{passive:!1}),this.update()}}let th=(e,t,s,r,i)=>{let a=performance.now(),n="none"===e.style.display?0:parseFloat(e.style.opacity);isNaN(n)&&(n=1);let o=window.setInterval(()=>{let l;let c=Math.min((performance.now()-a)/r,1);c>.999&&(c=1),t?(l=(1-c)*n)<1e-4&&(l=0):l=(1-n)*c+n,l>0?(e.style.display=s,e.style.opacity=l):e.style.display="none",c>=1&&(i&&i(),window.clearInterval(o))},16);return o};class td{static elementIDGen=0;constructor(e,t){this.taskIDGen=0,this.elementID=td.elementIDGen++,this.tasks=[],this.message=e||"Loading...",this.container=t||document.body,this.spinnerContainerOuter=document.createElement("div"),this.spinnerContainerOuter.className=`spinnerOuterContainer${this.elementID}`,this.spinnerContainerOuter.style.display="none",this.spinnerContainerPrimary=document.createElement("div"),this.spinnerContainerPrimary.className=`spinnerContainerPrimary${this.elementID}`,this.spinnerPrimary=document.createElement("div"),this.spinnerPrimary.classList.add(`spinner${this.elementID}`,`spinnerPrimary${this.elementID}`),this.messageContainerPrimary=document.createElement("div"),this.messageContainerPrimary.classList.add(`messageContainer${this.elementID}`,`messageContainerPrimary${this.elementID}`),this.messageContainerPrimary.innerHTML=this.message,this.spinnerContainerMin=document.createElement("div"),this.spinnerContainerMin.className=`spinnerContainerMin${this.elementID}`,this.spinnerMin=document.createElement("div"),this.spinnerMin.classList.add(`spinner${this.elementID}`,`spinnerMin${this.elementID}`),this.messageContainerMin=document.createElement("div"),this.messageContainerMin.classList.add(`messageContainer${this.elementID}`,`messageContainerMin${this.elementID}`),this.messageContainerMin.innerHTML=this.message,this.spinnerContainerPrimary.appendChild(this.spinnerPrimary),this.spinnerContainerPrimary.appendChild(this.messageContainerPrimary),this.spinnerContainerOuter.appendChild(this.spinnerContainerPrimary),this.spinnerContainerMin.appendChild(this.spinnerMin),this.spinnerContainerMin.appendChild(this.messageContainerMin),this.spinnerContainerOuter.appendChild(this.spinnerContainerMin);let s=document.createElement("style");s.innerHTML=`

            .spinnerOuterContainer${this.elementID} {
                width: 100%;
                height: 100%;
                margin: 0;
                top: 0;
                left: 0;
                position: absolute;
                pointer-events: none;
            }

            .messageContainer${this.elementID} {
                height: 20px;
                font-family: arial;
                font-size: 12pt;
                color: #ffffff;
                text-align: center;
                vertical-align: middle;
            }

            .spinner${this.elementID} {
                padding: 15px;
                background: #07e8d6;
                z-index:99999;
            
                aspect-ratio: 1;
                border-radius: 50%;
                --_m: 
                    conic-gradient(#0000,#000),
                    linear-gradient(#000 0 0) content-box;
                -webkit-mask: var(--_m);
                    mask: var(--_m);
                -webkit-mask-composite: source-out;
                    mask-composite: subtract;
                box-sizing: border-box;
                animation: load 1s linear infinite;
            }

            .spinnerContainerPrimary${this.elementID} {
                z-index:99999;
                background-color: rgba(128, 128, 128, 0.75);
                border: #666666 1px solid;
                border-radius: 5px;
                padding-top: 20px;
                padding-bottom: 10px;
                margin: 0;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-80px, -80px);
                width: 180px;
                pointer-events: auto;
            }

            .spinnerPrimary${this.elementID} {
                width: 120px;
                margin-left: 30px;
            }

            .messageContainerPrimary${this.elementID} {
                padding-top: 15px;
            }

            .spinnerContainerMin${this.elementID} {
                z-index:99999;
                background-color: rgba(128, 128, 128, 0.75);
                border: #666666 1px solid;
                border-radius: 5px;
                padding-top: 20px;
                padding-bottom: 15px;
                margin: 0;
                position: absolute;
                bottom: 50px;
                left: 50%;
                transform: translate(-50%, 0);
                display: flex;
                flex-direction: left;
                pointer-events: auto;
                min-width: 250px;
            }

            .messageContainerMin${this.elementID} {
                margin-right: 15px;
            }

            .spinnerMin${this.elementID} {
                width: 50px;
                height: 50px;
                margin-left: 15px;
                margin-right: 25px;
            }

            .messageContainerMin${this.elementID} {
                padding-top: 15px;
            }
            
            @keyframes load {
                to{transform: rotate(1turn)}
            }

        `,this.spinnerContainerOuter.appendChild(s),this.container.appendChild(this.spinnerContainerOuter),this.setMinimized(!1,!0),this.fadeTransitions=[]}addTask(e){let t={message:e,id:this.taskIDGen++};return this.tasks.push(t),this.update(),t.id}removeTask(e){let t=0;for(let s of this.tasks){if(s.id===e){this.tasks.splice(t,1);break}t++}this.update()}removeAllTasks(){this.tasks=[],this.update()}setMessageForTask(e,t){for(let s of this.tasks)if(s.id===e){s.message=t;break}this.update()}update(){this.tasks.length>0?(this.show(),this.setMessage(this.tasks[this.tasks.length-1].message)):this.hide()}show(){this.spinnerContainerOuter.style.display="block",this.visible=!0}hide(){this.spinnerContainerOuter.style.display="none",this.visible=!1}setContainer(e){this.container&&this.spinnerContainerOuter.parentElement===this.container&&this.container.removeChild(this.spinnerContainerOuter),e&&(this.container=e,this.container.appendChild(this.spinnerContainerOuter),this.spinnerContainerOuter.style.zIndex=this.container.style.zIndex+1)}setMinimized(e,t){let s=(e,t,s,r,i)=>{s?e.style.display=t?r:"none":this.fadeTransitions[i]=th(e,!t,r,500,()=>{this.fadeTransitions[i]=null})};s(this.spinnerContainerPrimary,!e,t,"block",0),s(this.spinnerContainerMin,e,t,"flex",1),this.minimized=e}setMessage(e){this.messageContainerPrimary.innerHTML=e,this.messageContainerMin.innerHTML=e}}class tp{constructor(e){this.idGen=0,this.tasks=[],this.container=e||document.body,this.progressBarContainerOuter=document.createElement("div"),this.progressBarContainerOuter.className="progressBarOuterContainer",this.progressBarContainerOuter.style.display="none",this.progressBarBox=document.createElement("div"),this.progressBarBox.className="progressBarBox",this.progressBarBackground=document.createElement("div"),this.progressBarBackground.className="progressBarBackground",this.progressBar=document.createElement("div"),this.progressBar.className="progressBar",this.progressBarBackground.appendChild(this.progressBar),this.progressBarBox.appendChild(this.progressBarBackground),this.progressBarContainerOuter.appendChild(this.progressBarBox);let t=document.createElement("style");t.innerHTML=`

            .progressBarOuterContainer {
                width: 100%;
                height: 100%;
                margin: 0;
                top: 0;
                left: 0;
                position: absolute;
                pointer-events: none;
            }

            .progressBarBox {
                z-index:99999;
                padding: 7px 9px 5px 7px;
                background-color: rgba(190, 190, 190, 0.75);
                border: #555555 1px solid;
                border-radius: 15px;
                margin: 0;
                position: absolute;
                bottom: 50px;
                left: 50%;
                transform: translate(-50%, 0);
                width: 180px;
                height: 30px;
                pointer-events: auto;
            }

            .progressBarBackground {
                width: 100%;
                height: 25px;
                border-radius:10px;
                background-color: rgba(128, 128, 128, 0.75);
                border: #444444 1px solid;
                box-shadow: inset 0 0 10px #333333;
            }

            .progressBar {
                height: 25px;
                width: 0px;
                border-radius:10px;
                background-color: rgba(0, 200, 0, 0.75);
                box-shadow: inset 0 0 10px #003300;
            }

        `,this.progressBarContainerOuter.appendChild(t),this.container.appendChild(this.progressBarContainerOuter)}show(){this.progressBarContainerOuter.style.display="block"}hide(){this.progressBarContainerOuter.style.display="none"}setProgress(e){this.progressBar.style.width=e+"%"}setContainer(e){this.container&&this.progressBarContainerOuter.parentElement===this.container&&this.container.removeChild(this.progressBarContainerOuter),e&&(this.container=e,this.container.appendChild(this.progressBarContainerOuter),this.progressBarContainerOuter.style.zIndex=this.container.style.zIndex+1)}}class tu{constructor(e){this.container=e||document.body,this.infoCells={},this.infoPanelContainer=document.createElement("div");let t=document.createElement("style");t.innerHTML=`

            .infoPanel {
                width: 430px;
                padding: 10px;
                background-color: rgba(50, 50, 50, 0.85);
                border: #555555 2px solid;
                color: #dddddd;
                border-radius: 10px;
                z-index: 9999;
                font-family: arial;
                font-size: 11pt;
                text-align: left;
                margin: 0;
                top: 10px;
                left:10px;
                position: absolute;
                pointer-events: auto;
            }

            .info-panel-cell {
                margin-bottom: 5px;
                padding-bottom: 2px;
            }

            .label-cell {
                font-weight: bold;
                font-size: 12pt;
                width: 140px;
            }

        `,this.infoPanelContainer.append(t),this.infoPanel=document.createElement("div"),this.infoPanel.className="infoPanel";let s=document.createElement("div");for(let e of(s.style.display="table",[["Camera position","cameraPosition"],["Camera look-at","cameraLookAt"],["Camera up","cameraUp"],["Camera mode","orthographicCamera"],["Cursor position","cursorPosition"],["FPS","fps"],["Rendering:","renderSplatCount"],["Sort time","sortTime"],["Render window","renderWindow"],["Focal adjustment","focalAdjustment"],["Splat scale","splatScale"],["Point cloud mode","pointCloudMode"]])){let t=document.createElement("div");t.style.display="table-row",t.className="info-panel-row";let r=document.createElement("div");r.style.display="table-cell",r.innerHTML=`${e[0]}: `,r.classList.add("info-panel-cell","label-cell");let i=document.createElement("div");i.style.display="table-cell",i.style.width="10px",i.innerHTML=" ",i.className="info-panel-cell";let a=document.createElement("div");a.style.display="table-cell",a.innerHTML="",a.className="info-panel-cell",this.infoCells[e[1]]=a,t.appendChild(r),t.appendChild(i),t.appendChild(a),s.appendChild(t)}this.infoPanel.appendChild(s),this.infoPanelContainer.append(this.infoPanel),this.infoPanelContainer.style.display="none",this.container.appendChild(this.infoPanelContainer),this.visible=!1}update=function(e,t,s,r,i,a,n,o,l,c,h,d,p,u){let m=`${t.x.toFixed(5)}, ${t.y.toFixed(5)}, ${t.z.toFixed(5)}`;if(this.infoCells.cameraPosition.innerHTML!==m&&(this.infoCells.cameraPosition.innerHTML=m),s){let e=`${s.x.toFixed(5)}, ${s.y.toFixed(5)}, ${s.z.toFixed(5)}`;this.infoCells.cameraLookAt.innerHTML!==e&&(this.infoCells.cameraLookAt.innerHTML=e)}let A=`${r.x.toFixed(5)}, ${r.y.toFixed(5)}, ${r.z.toFixed(5)}`;if(this.infoCells.cameraUp.innerHTML!==A&&(this.infoCells.cameraUp.innerHTML=A),this.infoCells.orthographicCamera.innerHTML=i?"Orthographic":"Perspective",a){let e=`${a.x.toFixed(5)}, ${a.y.toFixed(5)}, ${a.z.toFixed(5)}`;this.infoCells.cursorPosition.innerHTML=e}else this.infoCells.cursorPosition.innerHTML="N/A";this.infoCells.fps.innerHTML=n,this.infoCells.renderWindow.innerHTML=`${e.x} x ${e.y}`,this.infoCells.renderSplatCount.innerHTML=`${l} splats out of ${o} (${c.toFixed(2)}%)`,this.infoCells.sortTime.innerHTML=`${h.toFixed(3)} ms`,this.infoCells.focalAdjustment.innerHTML=`${d.toFixed(3)}`,this.infoCells.splatScale.innerHTML=`${p.toFixed(3)}`,this.infoCells.pointCloudMode.innerHTML=`${u}`};setContainer(e){this.container&&this.infoPanelContainer.parentElement===this.container&&this.container.removeChild(this.infoPanelContainer),e&&(this.container=e,this.container.appendChild(this.infoPanelContainer),this.infoPanelContainer.style.zIndex=this.container.style.zIndex+1)}show(){this.infoPanelContainer.style.display="block",this.visible=!0}hide(){this.infoPanelContainer.style.display="none",this.visible=!1}}class tm extends p.Tme{constructor(e=new p.Pa4(0,0,1),t=new p.Pa4(0,0,0),s=1,r=.1,i=16776960,a=.2*s,n=.2*a){super(),this.type="ArrowHelper";let o=new p.fHI(r,r,s,32);o.translate(0,s/2,0);let l=new p.fHI(0,n,a,32);l.translate(0,s,0),this.position.copy(t),this.line=new p.Kj0(o,new p.vBJ({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new p.Kj0(l,new p.vBJ({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{_axis.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(_axis,t)}}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class tA{constructor(e){this.threeScene=e,this.splatRenderTarget=null,this.renderTargetCopyQuad=null,this.renderTargetCopyCamera=null,this.meshCursor=null,this.focusMarker=null,this.controlPlane=null,this.debugRoot=null,this.secondaryDebugRoot=null}updateSplatRenderTargetForRenderDimensions(e,t){this.destroySplatRendertarget(),this.splatRenderTarget=new p.dd2(e,t,{format:p.wk1,stencilBuffer:!1,depthBuffer:!0}),this.splatRenderTarget.depthTexture=new p.$YQ(e,t),this.splatRenderTarget.depthTexture.format=p.qkB,this.splatRenderTarget.depthTexture.type=p.JQ4}destroySplatRendertarget(){this.splatRenderTarget&&(this.splatRenderTarget=null)}setupRenderTargetCopyObjects(){let e=new p.jyz({vertexShader:`
                varying vec2 vUv;
                void main() {
                    vUv = uv;
                    gl_Position = vec4( position.xy, 0.0, 1.0 );    
                }
            `,fragmentShader:`
                #include <common>
                #include <packing>
                varying vec2 vUv;
                uniform sampler2D sourceColorTexture;
                uniform sampler2D sourceDepthTexture;
                void main() {
                    vec4 color = texture2D(sourceColorTexture, vUv);
                    float fragDepth = texture2D(sourceDepthTexture, vUv).x;
                    gl_FragDepth = fragDepth;
                    gl_FragColor = vec4(color.rgb, color.a * 2.0);
              }
            `,uniforms:{sourceColorTexture:{type:"t",value:null},sourceDepthTexture:{type:"t",value:null}},depthWrite:!1,depthTest:!1,transparent:!0,blending:p.Xaj,blendSrc:p.k74,blendSrcAlpha:p.k74,blendDst:p.LgZ,blendDstAlpha:p.LgZ});e.extensions.fragDepth=!0,this.renderTargetCopyQuad=new p.Kj0(new p._12(2,2),e),this.renderTargetCopyCamera=new p.iKG(-1,1,1,-1,0,1)}destroyRenderTargetCopyObjects(){this.renderTargetCopyQuad&&(S(this.renderTargetCopyQuad),this.renderTargetCopyQuad=null)}setupMeshCursor(){if(!this.meshCursor){let e=new p.b_z(.5,1.5,32),t=new p.vBJ({color:16777215}),s=new p.Kj0(e,t);s.rotation.set(0,0,Math.PI),s.position.set(0,1,0);let r=new p.Kj0(e,t);r.position.set(0,-1,0);let i=new p.Kj0(e,t);i.rotation.set(0,0,Math.PI/2),i.position.set(1,0,0);let a=new p.Kj0(e,t);a.rotation.set(0,0,-Math.PI/2),a.position.set(-1,0,0),this.meshCursor=new p.Tme,this.meshCursor.add(s),this.meshCursor.add(r),this.meshCursor.add(i),this.meshCursor.add(a),this.meshCursor.scale.set(.1,.1,.1),this.threeScene.add(this.meshCursor),this.meshCursor.visible=!1}}destroyMeshCursor(){this.meshCursor&&(S(this.meshCursor),this.threeScene.remove(this.meshCursor),this.meshCursor=null)}setMeshCursorVisibility(e){this.meshCursor.visible=e}getMeschCursorVisibility(){return this.meshCursor.visible}setMeshCursorPosition(e){this.meshCursor.position.copy(e)}positionAndOrientMeshCursor(e,t){this.meshCursor.position.copy(e),this.meshCursor.up.copy(t.up),this.meshCursor.lookAt(t.position)}setupFocusMarker(){if(!this.focusMarker){let e=new p.xo$(.5,32,32),t=tA.buildFocusMarkerMaterial();t.depthTest=!1,t.depthWrite=!1,t.transparent=!0,this.focusMarker=new p.Kj0(e,t)}}destroyFocusMarker(){this.focusMarker&&(S(this.focusMarker),this.focusMarker=null)}updateFocusMarker=(function(){let e=new p.Pa4,t=new p.yGw,s=new p.Pa4;return function(r,i,a){t.copy(i.matrixWorld).invert(),e.copy(r).applyMatrix4(t),e.normalize().multiplyScalar(10),e.applyMatrix4(i.matrixWorld),s.copy(i.position).sub(r);let n=s.length();this.focusMarker.position.copy(r),this.focusMarker.scale.set(n,n,n),this.focusMarker.material.uniforms.realFocusPosition.value.copy(r),this.focusMarker.material.uniforms.viewport.value.copy(a),this.focusMarker.material.uniformsNeedUpdate=!0}})();setFocusMarkerVisibility(e){this.focusMarker.visible=e}setFocusMarkerOpacity(e){this.focusMarker.material.uniforms.opacity.value=e,this.focusMarker.material.uniformsNeedUpdate=!0}getFocusMarkerOpacity(){return this.focusMarker.material.uniforms.opacity.value}setupControlPlane(){if(!this.controlPlane){let e=new p._12(1,1);e.rotateX(-Math.PI/2);let t=new p.vBJ({color:16777215});t.transparent=!0,t.opacity=.6,t.depthTest=!1,t.depthWrite=!1,t.side=p.ehD;let s=new p.Kj0(e,t),r=new p.Pa4(0,1,0);r.normalize();let i=new tm(r,new p.Pa4(0,0,0),.5,.01,56576,.1,.03);this.controlPlane=new p.Tme,this.controlPlane.add(s),this.controlPlane.add(i)}}destroyControlPlane(){this.controlPlane&&(S(this.controlPlane),this.controlPlane=null)}setControlPlaneVisibility(e){this.controlPlane.visible=e}positionAndOrientControlPlane=(function(){let e=new p._fP,t=new p.Pa4(0,1,0);return function(s,r){e.setFromUnitVectors(t,r),this.controlPlane.position.copy(s),this.controlPlane.quaternion.copy(e)}})();addDebugMeshes(){this.debugRoot=this.createDebugMeshes(),this.secondaryDebugRoot=this.createSecondaryDebugMeshes(),this.threeScene.add(this.debugRoot),this.threeScene.add(this.secondaryDebugRoot)}destroyDebugMeshes(){for(let e of[this.debugRoot,this.secondaryDebugRoot])e&&(S(e),this.threeScene.remove(e));this.debugRoot=null,this.secondaryDebugRoot=null}createDebugMeshes(e){let t=new p.xo$(1,32,32),s=new p.Tme,r=(r,i)=>{let a=new p.Kj0(t,tA.buildDebugMaterial(r));a.renderOrder=e,s.add(a),a.position.fromArray(i)};return r(16711680,[-50,0,0]),r(16711680,[50,0,0]),r(65280,[0,0,-50]),r(65280,[0,0,50]),r(16755200,[5,0,5]),s}createSecondaryDebugMeshes(e){let t=new p.DvJ(3,3,3),s=new p.Tme,r=r=>{let i=new p.Kj0(t,tA.buildDebugMaterial(12303291));i.renderOrder=e,s.add(i),i.position.fromArray(r)};return r([-10,0,-10]),r([-10,0,10]),r([10,0,-10]),r([10,0,10]),s}static buildDebugMaterial(e){let t=`
            #include <common>
            varying float ndcDepth;

            void main() {
                gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position.xyz, 1.0);
                ndcDepth = gl_Position.z / gl_Position.w;
                gl_Position.x = gl_Position.x / gl_Position.w;
                gl_Position.y = gl_Position.y / gl_Position.w;
                gl_Position.z = 0.0;
                gl_Position.w = 1.0;
    
            }
        `,s=`
            #include <common>
            uniform vec3 color;
            varying float ndcDepth;
            void main() {
                gl_FragDepth = (ndcDepth + 1.0) / 2.0;
                gl_FragColor = vec4(color.rgb, 0.0);
            }
        `,r={color:{type:"v3",value:new p.Ilk(e)}},i=new p.jyz({uniforms:r,vertexShader:t,fragmentShader:s,transparent:!1,depthTest:!0,depthWrite:!0,side:p.Wl3});return i.extensions.fragDepth=!0,i}static buildFocusMarkerMaterial(e){let t=`
            #include <common>

            uniform vec2 viewport;
            uniform vec3 realFocusPosition;

            varying vec4 ndcPosition;
            varying vec4 ndcCenter;
            varying vec4 ndcFocusPosition;

            void main() {
                float radius = 0.01;

                vec4 viewPosition = modelViewMatrix * vec4(position.xyz, 1.0);
                vec4 viewCenter = modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0);

                vec4 viewFocusPosition = modelViewMatrix * vec4(realFocusPosition, 1.0);

                ndcPosition = projectionMatrix * viewPosition;
                ndcPosition = ndcPosition * vec4(1.0 / ndcPosition.w);
                ndcCenter = projectionMatrix * viewCenter;
                ndcCenter = ndcCenter * vec4(1.0 / ndcCenter.w);

                ndcFocusPosition = projectionMatrix * viewFocusPosition;
                ndcFocusPosition = ndcFocusPosition * vec4(1.0 / ndcFocusPosition.w);

                gl_Position = projectionMatrix * viewPosition;

            }
        `,s=`
            #include <common>
            uniform vec3 color;
            uniform vec2 viewport;
            uniform float opacity;

            varying vec4 ndcPosition;
            varying vec4 ndcCenter;
            varying vec4 ndcFocusPosition;

            void main() {
                vec2 screenPosition = vec2(ndcPosition) * viewport;
                vec2 screenCenter = vec2(ndcCenter) * viewport;

                vec2 screenVec = screenPosition - screenCenter;

                float projectedRadius = length(screenVec);

                float lineWidth = 0.0005 * viewport.y;
                float aaRange = 0.0025 * viewport.y;
                float radius = 0.06 * viewport.y;
                float radDiff = abs(projectedRadius - radius) - lineWidth;
                float alpha = 1.0 - clamp(radDiff / 5.0, 0.0, 1.0); 

                gl_FragColor = vec4(color.rgb, alpha * opacity);
            }
        `,r={color:{type:"v3",value:new p.Ilk(e)},realFocusPosition:{type:"v3",value:new p.Pa4},viewport:{type:"v2",value:new p.FM8},opacity:{value:0}};return new p.jyz({uniforms:r,vertexShader:t,fragmentShader:s,transparent:!0,depthTest:!1,depthWrite:!1,side:p.Wl3})}dispose(){this.destroyMeshCursor(),this.destroyFocusMarker(),this.destroyDebugMeshes(),this.destroyControlPlane(),this.destroyRenderTargetCopyObjects(),this.destroySplatRendertarget()}}let tf=new p.Pa4(1,0,0),tg=new p.Pa4(0,1,0),tC=new p.Pa4(0,0,1);class tS{constructor(e=new p.Pa4,t=new p.Pa4){this.origin=new p.Pa4,this.direction=new p.Pa4,this.setParameters(e,t)}setParameters(e,t){this.origin.copy(e),this.direction.copy(t).normalize()}boxContainsPoint(e,t,s){return!(t.x<e.min.x-s)&&!(t.x>e.max.x+s)&&!(t.y<e.min.y-s)&&!(t.y>e.max.y+s)&&!(t.z<e.min.z-s)&&!(t.z>e.max.z+s)}intersectBox=(function(){let e=new p.Pa4,t=[],s=[],r=[];return function(i,a){if(s[0]=this.origin.x,s[1]=this.origin.y,s[2]=this.origin.z,r[0]=this.direction.x,r[1]=this.direction.y,r[2]=this.direction.z,this.boxContainsPoint(i,this.origin,1e-4))return a&&(a.origin.copy(this.origin),a.normal.set(0,0,0),a.distance=-1),!0;for(let n=0;n<3;n++){if(0==r[n])continue;let o=0==n?tf:1==n?tg:tC,l=r[n]<0?i.max:i.min,c=-Math.sign(r[n]);t[0]=0==n?l.x:1==n?l.y:l.z;let h=t[0]-s[n];if(h*c<0){let l=(n+1)%3,d=(n+2)%3;if(t[2]=r[l]/r[n]*h+s[l],t[1]=r[d]/r[n]*h+s[d],e.set(t[n],t[d],t[l]),this.boxContainsPoint(i,e,1e-4))return a&&(a.origin.copy(e),a.normal.copy(o).multiplyScalar(c),a.distance=e.sub(this.origin).length()),!0}}return!1}})();intersectSphere=(function(){let e=new p.Pa4;return function(t,s,r){e.copy(t).sub(this.origin);let i=e.dot(this.direction),a=e.dot(e)-i*i,n=s*s;if(a>n)return!1;let o=Math.sqrt(n-a),l=i-o,c=i+o;if(c<0)return!1;let h=l<0?c:l;return r&&(r.origin.copy(this.origin).addScaledVector(this.direction,h),r.normal.copy(r.origin).sub(t).normalize(),r.distance=h),!0}})()}class ty{constructor(){this.origin=new p.Pa4,this.normal=new p.Pa4,this.distance=0,this.splatIndex=0}set(e,t,s,r){this.origin.copy(e),this.normal.copy(t),this.distance=s,this.splatIndex=r}clone(){let e=new ty;return e.origin.copy(this.origin),e.normal.copy(this.normal),e.distance=this.distance,e.splatIndex=this.splatIndex,e}}let tx={ThreeD:0,TwoD:1};class tv{constructor(e,t,s=!1){this.ray=new tS(e,t),this.raycastAgainstTrueSplatEllipsoid=s}setFromCameraAndScreenPosition=(function(){let e=new p.FM8;return function(t,s,r){if(e.x=s.x/r.x*2-1,e.y=(r.y-s.y)/r.y*2-1,t.isPerspectiveCamera)this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t;else if(t.isOrthographicCamera)this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t;else throw Error("Raycaster::setFromCameraAndScreenPosition() -> Unsupported camera type")}})();intersectSplatMesh=(function(){let e=new p.yGw,t=new p.yGw,s=new p.yGw,r=new tS,i=new p.Pa4;return function(a,n=[]){let o=a.getSplatTree();if(o){for(let l=0;l<o.subTrees.length;l++){let c=o.subTrees[l];t.copy(a.matrixWorld),a.dynamicMode&&(a.getSceneTransform(l,s),t.multiply(s)),e.copy(t).invert(),r.origin.copy(this.ray.origin).applyMatrix4(e),r.direction.copy(this.ray.origin).add(this.ray.direction),r.direction.applyMatrix4(e).sub(r.origin).normalize();let h=[];c.rootNode&&this.castRayAtSplatTreeNode(r,o,c.rootNode,h),h.forEach(e=>{e.origin.applyMatrix4(t),e.normal.applyMatrix4(t).normalize(),e.distance=i.copy(e.origin).sub(this.ray.origin).length()}),n.push(...h)}return n.sort((e,t)=>e.distance>t.distance?1:-1),n}}})();castRayAtSplatTreeNode=(function(){let e=new p.Ltg,t=new p.Pa4,s=new p.Pa4,r=new p._fP,i=new ty,a=new p.Pa4(0,0,0),n=new p.yGw,o=new p.yGw,l=new p.yGw,c=new p.yGw,h=new p.yGw,d=new tS;return function(p,u,m,A=[]){if(p.intersectBox(m.boundingBox)){if(m.data&&m.data.indexes&&m.data.indexes.length>0)for(let f=0;f<m.data.indexes.length;f++){let g=m.data.indexes[f],C=u.splatMesh.getSceneIndexForSplat(g);if(u.splatMesh.getScene(C).visible){if(u.splatMesh.getSplatColor(g,e),u.splatMesh.getSplatCenter(g,t),u.splatMesh.getSplatScaleAndRotation(g,s,r),s.x<=1e-7||s.y<=1e-7||u.splatMesh.splatRenderMode===tx.ThreeD&&s.z<=1e-7)continue;if(this.raycastAgainstTrueSplatEllipsoid){o.makeScale(s.x,s.y,s.z),l.makeRotationFromQuaternion(r);let u=2*Math.log10(e.w);if(n.makeScale(u,u,u),h.copy(n).multiply(l).multiply(o),c.copy(h).invert(),d.origin.copy(p.origin).sub(t).applyMatrix4(c),d.direction.copy(p.origin).add(p.direction).sub(t),d.direction.applyMatrix4(c).sub(d.origin).normalize(),d.intersectSphere(a,1,i)){let e=i.clone();e.splatIndex=g,e.origin.applyMatrix4(h).add(t),A.push(e)}}else{let e=s.x+s.y,r=2;if(u.splatMesh.splatRenderMode===tx.ThreeD&&(e+=s.z,r=3),e/=r,p.intersectSphere(t,e,i)){let e=i.clone();e.splatIndex=g,A.push(e)}}}}if(m.children&&m.children.length>0)for(let e of m.children)this.castRayAtSplatTreeNode(p,u,e,A);return A}}})()}class tI{static buildVertexShaderBase(e=!1,t=!1,s=0,r=""){let i=`
        precision highp float;
        #include <common>

        attribute uint splatIndex;
        uniform highp usampler2D centersColorsTexture;
        uniform highp sampler2D sphericalHarmonicsTexture;
        uniform highp sampler2D sphericalHarmonicsTextureR;
        uniform highp sampler2D sphericalHarmonicsTextureG;
        uniform highp sampler2D sphericalHarmonicsTextureB;

        uniform highp usampler2D sceneIndexesTexture;
        uniform vec2 sceneIndexesTextureSize;
        uniform int sceneCount;
    `;return t&&(i+=`
            uniform float sceneOpacity[${D.MaxScenes}];
            uniform int sceneVisibility[${D.MaxScenes}];
        `),e&&(i+=`
            uniform highp mat4 transforms[${D.MaxScenes}];
        `),i+=`
        ${r}
        uniform vec2 focal;
        uniform float orthoZoom;
        uniform int orthographicMode;
        uniform int pointCloudModeEnabled;
        uniform float inverseFocalAdjustment;
        uniform vec2 viewport;
        uniform vec2 basisViewport;
        uniform vec2 centersColorsTextureSize;
        uniform int sphericalHarmonicsDegree;
        uniform vec2 sphericalHarmonicsTextureSize;
        uniform int sphericalHarmonics8BitMode;
        uniform int sphericalHarmonicsMultiTextureMode;
        uniform float visibleRegionRadius;
        uniform float visibleRegionFadeStartRadius;
        uniform float firstRenderTime;
        uniform float currentTime;
        uniform int fadeInComplete;
        uniform vec3 sceneCenter;
        uniform float splatScale;
        uniform float sphericalHarmonics8BitCompressionRangeMin[${D.MaxScenes}];
        uniform float sphericalHarmonics8BitCompressionRangeMax[${D.MaxScenes}];

        varying vec4 vColor;
        varying vec2 vUv;
        varying vec2 vPosition;

        mat3 quaternionToRotationMatrix(float x, float y, float z, float w) {
            float s = 1.0 / sqrt(w * w + x * x + y * y + z * z);
        
            return mat3(
                1. - 2. * (y * y + z * z),
                2. * (x * y + w * z),
                2. * (x * z - w * y),
                2. * (x * y - w * z),
                1. - 2. * (x * x + z * z),
                2. * (y * z + w * x),
                2. * (x * z + w * y),
                2. * (y * z - w * x),
                1. - 2. * (x * x + y * y)
            );
        }

        const float sqrt8 = sqrt(8.0);
        const float minAlpha = 1.0 / 255.0;

        const vec4 encodeNorm4 = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0);
        const uvec4 mask4 = uvec4(uint(0x000000FF), uint(0x0000FF00), uint(0x00FF0000), uint(0xFF000000));
        const uvec4 shift4 = uvec4(0, 8, 16, 24);
        vec4 uintToRGBAVec (uint u) {
           uvec4 urgba = mask4 & u;
           urgba = urgba >> shift4;
           vec4 rgba = vec4(urgba) * encodeNorm4;
           return rgba;
        }

        vec2 getDataUV(in int stride, in int offset, in vec2 dimensions) {
            vec2 samplerUV = vec2(0.0, 0.0);
            float d = float(splatIndex * uint(stride) + uint(offset)) / dimensions.x;
            samplerUV.y = float(floor(d)) / dimensions.y;
            samplerUV.x = fract(d);
            return samplerUV;
        }

        vec2 getDataUVF(in uint sIndex, in float stride, in uint offset, in vec2 dimensions) {
            vec2 samplerUV = vec2(0.0, 0.0);
            float d = float(uint(float(sIndex) * stride) + offset) / dimensions.x;
            samplerUV.y = float(floor(d)) / dimensions.y;
            samplerUV.x = fract(d);
            return samplerUV;
        }

        const float SH_C1 = 0.4886025119029199f;
        const float[5] SH_C2 = float[](1.0925484, -1.0925484, 0.3153916, -1.0925484, 0.5462742);

        void main () {

            uint oddOffset = splatIndex & uint(0x00000001);
            uint doubleOddOffset = oddOffset * uint(2);
            bool isEven = oddOffset == uint(0);
            uint nearestEvenIndex = splatIndex - oddOffset;
            float fOddOffset = float(oddOffset);

            uvec4 sampledCenterColor = texture(centersColorsTexture, getDataUV(1, 0, centersColorsTextureSize));
            vec3 splatCenter = uintBitsToFloat(uvec3(sampledCenterColor.gba));

            uint sceneIndex = uint(0);
            if (sceneCount > 1) {
                sceneIndex = texture(sceneIndexesTexture, getDataUV(1, 0, sceneIndexesTextureSize)).r;
            }
            `,t&&(i+=`
                float splatOpacityFromScene = sceneOpacity[sceneIndex];
                int sceneVisible = sceneVisibility[sceneIndex];
                if (splatOpacityFromScene <= 0.01 || sceneVisible == 0) {
                    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);
                    return;
                }
            `),e?i+=`
                mat4 transform = transforms[sceneIndex];
                mat4 transformModelViewMatrix = modelViewMatrix * transform;
            `:i+="mat4 transformModelViewMatrix = modelViewMatrix;",i+=`
            float sh8BitCompressionRangeMinForScene = sphericalHarmonics8BitCompressionRangeMin[sceneIndex];
            float sh8BitCompressionRangeMaxForScene = sphericalHarmonics8BitCompressionRangeMax[sceneIndex];
            float sh8BitCompressionRangeForScene = sh8BitCompressionRangeMaxForScene - sh8BitCompressionRangeMinForScene;
            float sh8BitCompressionHalfRangeForScene = sh8BitCompressionRangeForScene / 2.0;
            vec3 vec8BitSHShift = vec3(sh8BitCompressionRangeMinForScene);

            vec4 viewCenter = transformModelViewMatrix * vec4(splatCenter, 1.0);

            vec4 clipCenter = projectionMatrix * viewCenter;

            float clip = 1.2 * clipCenter.w;
            if (clipCenter.z < -clip || clipCenter.x < -clip || clipCenter.x > clip || clipCenter.y < -clip || clipCenter.y > clip) {
                gl_Position = vec4(0.0, 0.0, 2.0, 1.0);
                return;
            }

            vec3 ndcCenter = clipCenter.xyz / clipCenter.w;

            vPosition = position.xy;
            vColor = uintToRGBAVec(sampledCenterColor.r);
        `,s>=1&&(i+=`   
            if (sphericalHarmonicsDegree >= 1) {
            `,e?i+=`
                    vec3 worldViewDir = normalize(splatCenter - vec3(inverse(transform) * vec4(cameraPosition, 1.0)));
                `:i+=`
                    vec3 worldViewDir = normalize(splatCenter - cameraPosition);
                `,i+=`
                vec3 sh1;
                vec3 sh2;
                vec3 sh3;
            `,s>=2&&(i+=`
                    vec3 sh4;
                    vec3 sh5;
                    vec3 sh6;
                    vec3 sh7;
                    vec3 sh8;
                `),1===s?i+=`
                    if (sphericalHarmonicsMultiTextureMode == 0) {
                        vec2 shUV = getDataUVF(nearestEvenIndex, 2.5, doubleOddOffset, sphericalHarmonicsTextureSize);
                        vec4 sampledSH0123 = texture(sphericalHarmonicsTexture, shUV);
                        shUV = getDataUVF(nearestEvenIndex, 2.5, doubleOddOffset + uint(1), sphericalHarmonicsTextureSize);
                        vec4 sampledSH4567 = texture(sphericalHarmonicsTexture, shUV);
                        shUV = getDataUVF(nearestEvenIndex, 2.5, doubleOddOffset + uint(2), sphericalHarmonicsTextureSize);
                        vec4 sampledSH891011 = texture(sphericalHarmonicsTexture, shUV);
                        sh1 = vec3(sampledSH0123.rgb) * (1.0 - fOddOffset) + vec3(sampledSH0123.ba, sampledSH4567.r) * fOddOffset;
                        sh2 = vec3(sampledSH0123.a, sampledSH4567.rg) * (1.0 - fOddOffset) + vec3(sampledSH4567.gba) * fOddOffset;
                        sh3 = vec3(sampledSH4567.ba, sampledSH891011.r) * (1.0 - fOddOffset) + vec3(sampledSH891011.rgb) * fOddOffset;
                    } else {
                        vec2 sampledSH01R = texture(sphericalHarmonicsTextureR, getDataUV(2, 0, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH23R = texture(sphericalHarmonicsTextureR, getDataUV(2, 1, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH01G = texture(sphericalHarmonicsTextureG, getDataUV(2, 0, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH23G = texture(sphericalHarmonicsTextureG, getDataUV(2, 1, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH01B = texture(sphericalHarmonicsTextureB, getDataUV(2, 0, sphericalHarmonicsTextureSize)).rg;
                        vec2 sampledSH23B = texture(sphericalHarmonicsTextureB, getDataUV(2, 1, sphericalHarmonicsTextureSize)).rg;
                        sh1 = vec3(sampledSH01R.rg, sampledSH23R.r);
                        sh2 = vec3(sampledSH01G.rg, sampledSH23G.r);
                        sh3 = vec3(sampledSH01B.rg, sampledSH23B.r);
                    }
                `:2===s&&(i+=`
                    vec4 sampledSH0123;
                    vec4 sampledSH4567;
                    vec4 sampledSH891011;

                    vec4 sampledSH0123R;
                    vec4 sampledSH0123G;
                    vec4 sampledSH0123B;

                    if (sphericalHarmonicsMultiTextureMode == 0) {
                        sampledSH0123 = texture(sphericalHarmonicsTexture, getDataUV(6, 0, sphericalHarmonicsTextureSize));
                        sampledSH4567 = texture(sphericalHarmonicsTexture, getDataUV(6, 1, sphericalHarmonicsTextureSize));
                        sampledSH891011 = texture(sphericalHarmonicsTexture, getDataUV(6, 2, sphericalHarmonicsTextureSize));
                        sh1 = sampledSH0123.rgb;
                        sh2 = vec3(sampledSH0123.a, sampledSH4567.rg);
                        sh3 = vec3(sampledSH4567.ba, sampledSH891011.r);
                    } else {
                        sampledSH0123R = texture(sphericalHarmonicsTextureR, getDataUV(2, 0, sphericalHarmonicsTextureSize));
                        sampledSH0123G = texture(sphericalHarmonicsTextureG, getDataUV(2, 0, sphericalHarmonicsTextureSize));
                        sampledSH0123B = texture(sphericalHarmonicsTextureB, getDataUV(2, 0, sphericalHarmonicsTextureSize));
                        sh1 = vec3(sampledSH0123R.rgb);
                        sh2 = vec3(sampledSH0123G.rgb);
                        sh3 = vec3(sampledSH0123B.rgb);
                    }
                `),i+=`
                    if (sphericalHarmonics8BitMode == 1) {
                        sh1 = sh1 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                        sh2 = sh2 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                        sh3 = sh3 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                    }
                    float x = worldViewDir.x;
                    float y = worldViewDir.y;
                    float z = worldViewDir.z;
                    vColor.rgb += SH_C1 * (-sh1 * y + sh2 * z - sh3 * x);
            `,s>=2&&(i+=`
                    if (sphericalHarmonicsDegree >= 2) {
                        float xx = x * x;
                        float yy = y * y;
                        float zz = z * z;
                        float xy = x * y;
                        float yz = y * z;
                        float xz = x * z;
                `,2===s&&(i+=`
                        if (sphericalHarmonicsMultiTextureMode == 0) {
                            vec4 sampledSH12131415 = texture(sphericalHarmonicsTexture, getDataUV(6, 3, sphericalHarmonicsTextureSize));
                            vec4 sampledSH16171819 = texture(sphericalHarmonicsTexture, getDataUV(6, 4, sphericalHarmonicsTextureSize));
                            vec4 sampledSH20212223 = texture(sphericalHarmonicsTexture, getDataUV(6, 5, sphericalHarmonicsTextureSize));
                            sh4 = sampledSH891011.gba;
                            sh5 = sampledSH12131415.rgb;
                            sh6 = vec3(sampledSH12131415.a, sampledSH16171819.rg);
                            sh7 = vec3(sampledSH16171819.ba, sampledSH20212223.r);
                            sh8 = sampledSH20212223.gba;
                        } else {
                            vec4 sampledSH4567R = texture(sphericalHarmonicsTextureR, getDataUV(2, 1, sphericalHarmonicsTextureSize));
                            vec4 sampledSH4567G = texture(sphericalHarmonicsTextureG, getDataUV(2, 1, sphericalHarmonicsTextureSize));
                            vec4 sampledSH4567B = texture(sphericalHarmonicsTextureB, getDataUV(2, 1, sphericalHarmonicsTextureSize));
                            sh4 = vec3(sampledSH0123R.a, sampledSH4567R.rg);
                            sh5 = vec3(sampledSH4567R.ba, sampledSH0123G.a);
                            sh6 = vec3(sampledSH4567G.rgb);
                            sh7 = vec3(sampledSH4567G.a, sampledSH0123B.a, sampledSH4567B.r);
                            sh8 = vec3(sampledSH4567B.gba);
                        }
                    `),i+=`
                        if (sphericalHarmonics8BitMode == 1) {
                            sh4 = sh4 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh5 = sh5 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh6 = sh6 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh7 = sh7 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                            sh8 = sh8 * sh8BitCompressionRangeForScene + vec8BitSHShift;
                        }

                        vColor.rgb +=
                            (SH_C2[0] * xy) * sh4 +
                            (SH_C2[1] * yz) * sh5 +
                            (SH_C2[2] * (2.0 * zz - xx - yy)) * sh6 +
                            (SH_C2[3] * xz) * sh7 +
                            (SH_C2[4] * (xx - yy)) * sh8;
                    }
                `),i+=`

                vColor.rgb = clamp(vColor.rgb, vec3(0.), vec3(1.));

            }

            `),i}static getVertexShaderFadeIn(){return`
            if (fadeInComplete == 0) {
                float opacityAdjust = 1.0;
                float centerDist = length(splatCenter - sceneCenter);
                float renderTime = max(currentTime - firstRenderTime, 0.0);

                float fadeDistance = 0.75;
                float distanceLoadFadeInFactor = step(visibleRegionFadeStartRadius, centerDist);
                distanceLoadFadeInFactor = (1.0 - distanceLoadFadeInFactor) +
                                        (1.0 - clamp((centerDist - visibleRegionFadeStartRadius) / fadeDistance, 0.0, 1.0)) *
                                        distanceLoadFadeInFactor;
                opacityAdjust *= distanceLoadFadeInFactor;
                vColor.a *= opacityAdjust;
            }
        `}static getUniforms(e=!1,t=!1,s=0,r=1,i=!1){let a={sceneCenter:{type:"v3",value:new p.Pa4},fadeInComplete:{type:"i",value:0},orthographicMode:{type:"i",value:0},visibleRegionFadeStartRadius:{type:"f",value:0},visibleRegionRadius:{type:"f",value:0},currentTime:{type:"f",value:0},firstRenderTime:{type:"f",value:0},centersColorsTexture:{type:"t",value:null},sphericalHarmonicsTexture:{type:"t",value:null},sphericalHarmonicsTextureR:{type:"t",value:null},sphericalHarmonicsTextureG:{type:"t",value:null},sphericalHarmonicsTextureB:{type:"t",value:null},sphericalHarmonics8BitCompressionRangeMin:{type:"f",value:[]},sphericalHarmonics8BitCompressionRangeMax:{type:"f",value:[]},focal:{type:"v2",value:new p.FM8},orthoZoom:{type:"f",value:1},inverseFocalAdjustment:{type:"f",value:1},viewport:{type:"v2",value:new p.FM8},basisViewport:{type:"v2",value:new p.FM8},debugColor:{type:"v3",value:new p.Ilk},centersColorsTextureSize:{type:"v2",value:new p.FM8(1024,1024)},sphericalHarmonicsDegree:{type:"i",value:s},sphericalHarmonicsTextureSize:{type:"v2",value:new p.FM8(1024,1024)},sphericalHarmonics8BitMode:{type:"i",value:0},sphericalHarmonicsMultiTextureMode:{type:"i",value:0},splatScale:{type:"f",value:r},pointCloudModeEnabled:{type:"i",value:i?1:0},sceneIndexesTexture:{type:"t",value:null},sceneIndexesTextureSize:{type:"v2",value:new p.FM8(1024,1024)},sceneCount:{type:"i",value:1}};for(let e=0;e<D.MaxScenes;e++)a.sphericalHarmonics8BitCompressionRangeMin.value.push(-D.SphericalHarmonics8BitCompressionRange/2),a.sphericalHarmonics8BitCompressionRangeMax.value.push(D.SphericalHarmonics8BitCompressionRange/2);if(t){let e=[];for(let t=0;t<D.MaxScenes;t++)e.push(1);a.sceneOpacity={type:"f",value:e};let t=[];for(let e=0;e<D.MaxScenes;e++)t.push(1);a.sceneVisibility={type:"i",value:t}}if(e){let e=[];for(let t=0;t<D.MaxScenes;t++)e.push(new p.yGw);a.transforms={type:"mat4",value:e}}return a}}class tB{static build(e=!1,t=!1,s=!1,r=2048,i=1,a=!1,n=0){let o=`
            uniform vec2 covariancesTextureSize;
            uniform highp sampler2D covariancesTexture;
            uniform highp usampler2D covariancesTextureHalfFloat;
            uniform int covariancesAreHalfFloat;

            void fromCovarianceHalfFloatV4(uvec4 val, out vec4 first, out vec4 second) {
                vec2 r = unpackHalf2x16(val.r);
                vec2 g = unpackHalf2x16(val.g);
                vec2 b = unpackHalf2x16(val.b);

                first = vec4(r.x, r.y, g.x, g.y);
                second = vec4(b.x, b.y, 0.0, 0.0);
            }
        `,l=tI.buildVertexShaderBase(e,t,n,o);l+=tB.buildVertexShaderProjection(s,t,r);let c=tB.buildFragmentShader(),h=tI.getUniforms(e,t,n,i,a);return h.covariancesTextureSize={type:"v2",value:new p.FM8(1024,1024)},h.covariancesTexture={type:"t",value:null},h.covariancesTextureHalfFloat={type:"t",value:null},h.covariancesAreHalfFloat={type:"i",value:0},new p.jyz({uniforms:h,vertexShader:l,fragmentShader:c,transparent:!0,alphaTest:1,blending:p.bdR,depthTest:!0,depthWrite:!1,side:p.ehD})}static buildVertexShaderProjection(e,t,s){let r=`

            vec4 sampledCovarianceA;
            vec4 sampledCovarianceB;
            vec3 cov3D_M11_M12_M13;
            vec3 cov3D_M22_M23_M33;
            if (covariancesAreHalfFloat == 0) {
                sampledCovarianceA = texture(covariancesTexture, getDataUVF(nearestEvenIndex, 1.5, oddOffset,
                                                                            covariancesTextureSize));
                sampledCovarianceB = texture(covariancesTexture, getDataUVF(nearestEvenIndex, 1.5, oddOffset + uint(1),
                                                                            covariancesTextureSize));

                cov3D_M11_M12_M13 = vec3(sampledCovarianceA.rgb) * (1.0 - fOddOffset) +
                                    vec3(sampledCovarianceA.ba, sampledCovarianceB.r) * fOddOffset;
                cov3D_M22_M23_M33 = vec3(sampledCovarianceA.a, sampledCovarianceB.rg) * (1.0 - fOddOffset) +
                                    vec3(sampledCovarianceB.gba) * fOddOffset;
            } else {
                uvec4 sampledCovarianceU = texture(covariancesTextureHalfFloat, getDataUV(1, 0, covariancesTextureSize));
                fromCovarianceHalfFloatV4(sampledCovarianceU, sampledCovarianceA, sampledCovarianceB);
                cov3D_M11_M12_M13 = sampledCovarianceA.rgb;
                cov3D_M22_M23_M33 = vec3(sampledCovarianceA.a, sampledCovarianceB.rg);
            }
        
            // Construct the 3D covariance matrix
            mat3 Vrk = mat3(
                cov3D_M11_M12_M13.x, cov3D_M11_M12_M13.y, cov3D_M11_M12_M13.z,
                cov3D_M11_M12_M13.y, cov3D_M22_M23_M33.x, cov3D_M22_M23_M33.y,
                cov3D_M11_M12_M13.z, cov3D_M22_M23_M33.y, cov3D_M22_M23_M33.z
            );

            mat3 J;
            if (orthographicMode == 1) {
                // Since the projection is linear, we don't need an approximation
                J = transpose(mat3(orthoZoom, 0.0, 0.0,
                                0.0, orthoZoom, 0.0,
                                0.0, 0.0, 0.0));
            } else {
                // Construct the Jacobian of the affine approximation of the projection matrix. It will be used to transform the
                // 3D covariance matrix instead of using the actual projection matrix because that transformation would
                // require a non-linear component (perspective division) which would yield a non-gaussian result.
                float s = 1.0 / (viewCenter.z * viewCenter.z);
                J = mat3(
                    focal.x / viewCenter.z, 0., -(focal.x * viewCenter.x) * s,
                    0., focal.y / viewCenter.z, -(focal.y * viewCenter.y) * s,
                    0., 0., 0.
                );
            }

            // Concatenate the projection approximation with the model-view transformation
            mat3 W = transpose(mat3(transformModelViewMatrix));
            mat3 T = W * J;

            // Transform the 3D covariance matrix (Vrk) to compute the 2D covariance matrix
            mat3 cov2Dm = transpose(T) * Vrk * T;
            `;return e?r+=`
                float detOrig = cov2Dm[0][0] * cov2Dm[1][1] - cov2Dm[0][1] * cov2Dm[0][1];
                cov2Dm[0][0] += 0.3;
                cov2Dm[1][1] += 0.3;
                float detBlur = cov2Dm[0][0] * cov2Dm[1][1] - cov2Dm[0][1] * cov2Dm[0][1];
                vColor.a *= sqrt(max(detOrig / detBlur, 0.0));
                if (vColor.a < minAlpha) return;
            `:r+=`
                cov2Dm[0][0] += 0.3;
                cov2Dm[1][1] += 0.3;
            `,r+=`

            // We are interested in the upper-left 2x2 portion of the projected 3D covariance matrix because
            // we only care about the X and Y values. We want the X-diagonal, cov2Dm[0][0],
            // the Y-diagonal, cov2Dm[1][1], and the correlation between the two cov2Dm[0][1]. We don't
            // need cov2Dm[1][0] because it is a symetric matrix.
            vec3 cov2Dv = vec3(cov2Dm[0][0], cov2Dm[0][1], cov2Dm[1][1]);

            // We now need to solve for the eigen-values and eigen vectors of the 2D covariance matrix
            // so that we can determine the 2D basis for the splat. This is done using the method described
            // here: https://people.math.harvard.edu/~knill/teaching/math21b2004/exhibits/2dmatrices/index.html
            // After calculating the eigen-values and eigen-vectors, we calculate the basis for rendering the splat
            // by normalizing the eigen-vectors and then multiplying them by (sqrt(8) * sqrt(eigen-value)), which is
            // equal to scaling them by sqrt(8) standard deviations.
            //
            // This is a different approach than in the original work at INRIA. In that work they compute the
            // max extents of the projected splat in screen space to form a screen-space aligned bounding rectangle
            // which forms the geometry that is actually rasterized. The dimensions of that bounding box are 3.0
            // times the square root of the maximum eigen-value, or 3 standard deviations. They then use the inverse
            // 2D covariance matrix (called 'conic') in the CUDA rendering thread to determine fragment opacity by
            // calculating the full gaussian: exp(-0.5 * (X - mean) * conic * (X - mean)) * splat opacity
            float a = cov2Dv.x;
            float d = cov2Dv.z;
            float b = cov2Dv.y;
            float D = a * d - b * b;
            float trace = a + d;
            float traceOver2 = 0.5 * trace;
            float term2 = sqrt(max(0.1f, traceOver2 * traceOver2 - D));
            float eigenValue1 = traceOver2 + term2;
            float eigenValue2 = traceOver2 - term2;

            if (pointCloudModeEnabled == 1) {
                eigenValue1 = eigenValue2 = 0.2;
            }

            if (eigenValue2 <= 0.0) return;

            vec2 eigenVector1 = normalize(vec2(b, eigenValue1 - a));
            // since the eigen vectors are orthogonal, we derive the second one from the first
            vec2 eigenVector2 = vec2(eigenVector1.y, -eigenVector1.x);

            // We use sqrt(8) standard deviations instead of 3 to eliminate more of the splat with a very low opacity.
            vec2 basisVector1 = eigenVector1 * splatScale * min(sqrt8 * sqrt(eigenValue1), ${parseInt(s)}.0);
            vec2 basisVector2 = eigenVector2 * splatScale * min(sqrt8 * sqrt(eigenValue2), ${parseInt(s)}.0);
            `,t&&(r+=`
                vColor.a *= splatOpacityFromScene;
            `),r+=`
            vec2 ndcOffset = vec2(vPosition.x * basisVector1 + vPosition.y * basisVector2) *
                             basisViewport * 2.0 * inverseFocalAdjustment;

            vec4 quadPos = vec4(ndcCenter.xy + ndcOffset, ndcCenter.z, 1.0);
            gl_Position = quadPos;

            // Scale the position data we send to the fragment shader
            vPosition *= sqrt8;
        `+tI.getVertexShaderFadeIn()+"}"}static buildFragmentShader(){return`
            precision highp float;
            #include <common>
 
            uniform vec3 debugColor;

            varying vec4 vColor;
            varying vec2 vUv;
            varying vec2 vPosition;
        
            void main () {
                // Compute the positional squared distance from the center of the splat to the current fragment.
                float A = dot(vPosition, vPosition);
                // Since the positional data in vPosition has been scaled by sqrt(8), the squared result will be
                // scaled by a factor of 8. If the squared result is larger than 8, it means it is outside the ellipse
                // defined by the rectangle formed by vPosition. It also means it's farther
                // away than sqrt(8) standard deviations from the mean.
                if (A > 8.0) discard;
                vec3 color = vColor.rgb;

                // Since the rendered splat is scaled by sqrt(8), the inverse covariance matrix that is part of
                // the gaussian formula becomes the identity matrix. We're then left with (X - mean) * (X - mean),
                // and since 'mean' is zero, we have X * X, which is the same as A:
                float opacity = exp(-0.5 * A) * vColor.a;

                gl_FragColor = vec4(color.rgb, opacity);
            }
        `}}class tw{static build(e=!1,t=!1,s=1,r=!1,i=0){let a=`
            uniform vec2 scaleRotationsTextureSize;
            uniform highp sampler2D scaleRotationsTexture;
            varying mat3 vT;
            varying vec2 vQuadCenter;
            varying vec2 vFragCoord;
        `,n=tI.buildVertexShaderBase(e,t,i,a);n+=tw.buildVertexShaderProjection();let o=tw.buildFragmentShader(),l=tI.getUniforms(e,t,i,s,r);return l.scaleRotationsTexture={type:"t",value:null},l.scaleRotationsTextureSize={type:"v2",value:new p.FM8(1024,1024)},new p.jyz({uniforms:l,vertexShader:n,fragmentShader:o,transparent:!0,alphaTest:1,blending:p.bdR,depthTest:!0,depthWrite:!1,side:p.ehD})}static buildVertexShaderProjection(){let e=`
            vec3 T0 = vec3(T[0][0], T[0][1], T[0][2]);
            vec3 T1 = vec3(T[1][0], T[1][1], T[1][2]);
            vec3 T3 = vec3(T[2][0], T[2][1], T[2][2]);

            vec3 tempPoint = vec3(1.0, 1.0, -1.0);
            float distance = (T3.x * T3.x * tempPoint.x) + (T3.y * T3.y * tempPoint.y) + (T3.z * T3.z * tempPoint.z);
            vec3 f = (1.0 / distance) * tempPoint;
            if (abs(distance) < 0.00001) return;

            float pointImageX = (T0.x * T3.x * f.x) + (T0.y * T3.y * f.y) + (T0.z * T3.z * f.z);
            float pointImageY = (T1.x * T3.x * f.x) + (T1.y * T3.y * f.y) + (T1.z * T3.z * f.z);
            vec2 pointImage = vec2(pointImageX, pointImageY);

            float tempX = (T0.x * T0.x * f.x) + (T0.y * T0.y * f.y) + (T0.z * T0.z * f.z);
            float tempY = (T1.x * T1.x * f.x) + (T1.y * T1.y * f.y) + (T1.z * T1.z * f.z);
            vec2 temp = vec2(tempX, tempY);

            vec2 halfExtend = pointImage * pointImage - temp;
            vec2 extent = sqrt(max(vec2(0.0001), halfExtend));
            float radius = max(extent.x, extent.y);

            vec2 ndcOffset = ((position.xy * radius * 3.0) * basisViewport * 2.0);

            vec4 quadPos = vec4(ndcCenter.xy + ndcOffset, ndcCenter.z, 1.0);
            gl_Position = quadPos;

            vT = T;
            vQuadCenter = pointImage;
            vFragCoord = (quadPos.xy * 0.5 + 0.5) * viewport;
        `;return`

            vec4 scaleRotationA = texture(scaleRotationsTexture, getDataUVF(nearestEvenIndex, 1.5,
                                                                            oddOffset, scaleRotationsTextureSize));
            vec4 scaleRotationB = texture(scaleRotationsTexture, getDataUVF(nearestEvenIndex, 1.5,
                                                                            oddOffset + uint(1), scaleRotationsTextureSize));

            vec3 scaleRotation123 = vec3(scaleRotationA.rgb) * (1.0 - fOddOffset) +
                                    vec3(scaleRotationA.ba, scaleRotationB.r) * fOddOffset;
            vec3 scaleRotation456 = vec3(scaleRotationA.a, scaleRotationB.rg) * (1.0 - fOddOffset) +
                                    vec3(scaleRotationB.gba) * fOddOffset;

            float missingW = sqrt(1.0 - scaleRotation456.x * scaleRotation456.x - scaleRotation456.y *
                                    scaleRotation456.y - scaleRotation456.z * scaleRotation456.z);
            mat3 R = quaternionToRotationMatrix(scaleRotation456.r, scaleRotation456.g, scaleRotation456.b, missingW);
            mat3 S = mat3(scaleRotation123.r, 0.0, 0.0,
                            0.0, scaleRotation123.g, 0.0,
                            0.0, 0.0, scaleRotation123.b);
            
            mat3 L = R * S;

            mat3x4 splat2World = mat3x4(vec4(L[0], 0.0),
                                        vec4(L[1], 0.0),
                                        vec4(splatCenter.x, splatCenter.y, splatCenter.z, 1.0));

            mat4 world2ndc = transpose(projectionMatrix * transformModelViewMatrix);

            mat3x4 ndc2pix = mat3x4(vec4(viewport.x / 2.0, 0.0, 0.0, (viewport.x - 1.0) / 2.0),
                                    vec4(0.0, viewport.y / 2.0, 0.0, (viewport.y - 1.0) / 2.0),
                                    vec4(0.0, 0.0, 0.0, 1.0));

            mat3 T = transpose(splat2World) * world2ndc * ndc2pix;
            vec3 normal = vec3(viewMatrix * vec4(L[0][2], L[1][2], L[2][2], 0.0));
        `+(`

                mat4 splat2World4 = mat4(vec4(L[0], 0.0),
                                        vec4(L[1], 0.0),
                                        vec4(L[2], 0.0),
                                        vec4(splatCenter.x, splatCenter.y, splatCenter.z, 1.0));

                mat4 Tt = transpose(transpose(splat2World4) * world2ndc);

                vec4 tempPoint1 = Tt * vec4(1.0, 0.0, 0.0, 1.0);
                tempPoint1 /= tempPoint1.w;

                vec4 tempPoint2 = Tt * vec4(0.0, 1.0, 0.0, 1.0);
                tempPoint2 /= tempPoint2.w;

                vec4 center = Tt * vec4(0.0, 0.0, 0.0, 1.0);
                center /= center.w;

                vec2 basisVector1 = tempPoint1.xy - center.xy;
                vec2 basisVector2 = tempPoint2.xy - center.xy;

                vec2 basisVector1Screen = basisVector1 * 0.5 * viewport;
                vec2 basisVector2Screen = basisVector2 * 0.5 * viewport;

                const float minPix = 1.;
                if (length(basisVector1Screen) < minPix || length(basisVector2Screen) < minPix) {
                    ${e}
                } else {
                    vec2 ndcOffset = vec2(position.x * basisVector1 + position.y * basisVector2) * 3.0 * inverseFocalAdjustment;
                    vec4 quadPos = vec4(ndcCenter.xy + ndcOffset, ndcCenter.z, 1.0);
                    gl_Position = quadPos;

                    vT = T;
                    vQuadCenter = center.xy;
                    vFragCoord = (quadPos.xy * 0.5 + 0.5) * viewport;
                }
            `+tI.getVertexShaderFadeIn())+"}"}static buildFragmentShader(){return`
            precision highp float;
            #include <common>

            uniform vec3 debugColor;

            varying vec4 vColor;
            varying vec2 vUv;
            varying vec2 vPosition;
            varying mat3 vT;
            varying vec2 vQuadCenter;
            varying vec2 vFragCoord;

            void main () {

                const float FilterInvSquare = 2.0;
                const float near_n = 0.2;
                const float T = 1.0;

                vec2 xy = vQuadCenter;
                vec3 Tu = vT[0];
                vec3 Tv = vT[1];
                vec3 Tw = vT[2];
                vec3 k = vFragCoord.x * Tw - Tu;
                vec3 l = vFragCoord.y * Tw - Tv;
                vec3 p = cross(k, l);
                if (p.z == 0.0) discard;
                vec2 s = vec2(p.x / p.z, p.y / p.z);
                float rho3d = (s.x * s.x + s.y * s.y); 
                vec2 d = vec2(xy.x - vFragCoord.x, xy.y - vFragCoord.y);
                float rho2d = FilterInvSquare * (d.x * d.x + d.y * d.y); 

                // compute intersection and depth
                float rho = min(rho3d, rho2d);
                float depth = (rho3d <= rho2d) ? (s.x * Tw.x + s.y * Tw.y) + Tw.z : Tw.z; 
                if (depth < near_n) discard;
                //  vec4 nor_o = collected_normal_opacity[j];
                //  float normal[3] = {nor_o.x, nor_o.y, nor_o.z};
                float opa = vColor.a;

                float power = -0.5f * rho;
                if (power > 0.0f) discard;

                // Eq. (2) from 3D Gaussian splatting paper.
                // Obtain alpha by multiplying with Gaussian opacity
                // and its exponential falloff from mean.
                // Avoid numerical instabilities (see paper appendix). 
                float alpha = min(0.99f, opa * exp(power));
                if (alpha < 1.0f / 255.0f) discard;
                float test_T = T * (1.0 - alpha);
                if (test_T < 0.0001)discard;

                float w = alpha * T;
                gl_FragColor = vec4(vColor.rgb, w);
            }
        `}}class tb{static build(e){let t=new p.u9r;t.setIndex([0,1,2,0,2,3]);let s=new Float32Array(12),r=new p.TlE(s,3);t.setAttribute("position",r),r.setXYZ(0,-1,-1,0),r.setXYZ(1,-1,1,0),r.setXYZ(2,1,1,0),r.setXYZ(3,1,-1,0),r.needsUpdate=!0;let i=new p.L5s().copy(t),a=new Uint32Array(e),n=new p.lb7(a,1,!1);return n.setUsage(p.dj0),i.setAttribute("splatIndex",n),i.instanceCount=0,i}}class tT extends p.Tme{constructor(e,t=new p.Pa4,s=new p._fP,r=new p.Pa4(1,1,1),i=1,a=1,n=!0){super(),this.splatBuffer=e,this.position.copy(t),this.quaternion.copy(s),this.scale.copy(r),this.transform=new p.yGw,this.minimumAlpha=i,this.opacity=a,this.visible=n}copyTransformData(e){this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.transform.copy(e.transform)}updateTransform(e){e?(this.matrixWorldAutoUpdate&&this.updateWorldMatrix(!0,!1),this.transform.copy(this.matrixWorld)):(this.matrixAutoUpdate&&this.updateMatrix(),this.transform.copy(this.matrix))}}class tD{static idGen=0;constructor(e,t,s,r){this.min=new p.Pa4().copy(e),this.max=new p.Pa4().copy(t),this.boundingBox=new p.ZzF(this.min,this.max),this.center=new p.Pa4().copy(this.max).sub(this.min).multiplyScalar(.5).add(this.min),this.depth=s,this.children=[],this.data=null,this.id=r||tD.idGen++}}class tE{constructor(e,t){this.maxDepth=e,this.maxCentersPerNode=t,this.sceneDimensions=new p.Pa4,this.sceneMin=new p.Pa4,this.sceneMax=new p.Pa4,this.rootNode=null,this.nodesWithIndexes=[],this.splatMesh=null}static convertWorkerSubTreeNode(e){let t=new tD(new p.Pa4().fromArray(e.min),new p.Pa4().fromArray(e.max),e.depth,e.id);if(e.data.indexes)for(let s of(t.data={indexes:[]},e.data.indexes))t.data.indexes.push(s);if(e.children)for(let s of e.children)t.children.push(tE.convertWorkerSubTreeNode(s));return t}static convertWorkerSubTree(e,t){let s=new tE(e.maxDepth,e.maxCentersPerNode);s.sceneMin=new p.Pa4().fromArray(e.sceneMin),s.sceneMax=new p.Pa4().fromArray(e.sceneMax),s.splatMesh=t,s.rootNode=tE.convertWorkerSubTreeNode(e.rootNode);let r=(e,t)=>{for(let s of(0===e.children.length&&t(e),e.children))r(s,t)};return s.nodesWithIndexes=[],r(s.rootNode,e=>{e.data&&e.data.indexes&&e.data.indexes.length>0&&s.nodesWithIndexes.push(e)}),s}}function tM(e){let t=0;class s{constructor(e,t){this.min=[e[0],e[1],e[2]],this.max=[t[0],t[1],t[2]]}containsPoint(e){return e[0]>=this.min[0]&&e[0]<=this.max[0]&&e[1]>=this.min[1]&&e[1]<=this.max[1]&&e[2]>=this.min[2]&&e[2]<=this.max[2]}}class r{constructor(e,t){this.maxDepth=e,this.maxCentersPerNode=t,this.sceneDimensions=[],this.sceneMin=[],this.sceneMax=[],this.rootNode=null,this.addedIndexes={},this.nodesWithIndexes=[],this.splatMesh=null,this.disposed=!1}}class i{constructor(e,s,r,i){this.min=[e[0],e[1],e[2]],this.max=[s[0],s[1],s[2]],this.center=[(s[0]-e[0])*.5+e[0],(s[1]-e[1])*.5+e[1],(s[2]-e[2])*.5+e[2]],this.depth=r,this.children=[],this.data=null,this.id=i||t++}}processSplatTreeNode=function(e,t,r,a){let n=t.data.indexes.length;if(n<e.maxCentersPerNode||t.depth>e.maxDepth){let s=[];for(let r=0;r<t.data.indexes.length;r++)e.addedIndexes[t.data.indexes[r]]||(s.push(t.data.indexes[r]),e.addedIndexes[t.data.indexes[r]]=!0);t.data.indexes=s,t.data.indexes.sort((e,t)=>e>t?1:-1),e.nodesWithIndexes.push(t);return}let o=[t.max[0]-t.min[0],t.max[1]-t.min[1],t.max[2]-t.min[2]],l=[.5*o[0],.5*o[1],.5*o[2]],c=[t.min[0]+l[0],t.min[1]+l[1],t.min[2]+l[2]],h=[new s([c[0]-l[0],c[1],c[2]-l[2]],[c[0],c[1]+l[1],c[2]]),new s([c[0],c[1],c[2]-l[2]],[c[0]+l[0],c[1]+l[1],c[2]]),new s([c[0],c[1],c[2]],[c[0]+l[0],c[1]+l[1],c[2]+l[2]]),new s([c[0]-l[0],c[1],c[2]],[c[0],c[1]+l[1],c[2]+l[2]]),new s([c[0]-l[0],c[1]-l[1],c[2]-l[2]],[c[0],c[1],c[2]]),new s([c[0],c[1]-l[1],c[2]-l[2]],[c[0]+l[0],c[1],c[2]]),new s([c[0],c[1]-l[1],c[2]],[c[0]+l[0],c[1],c[2]+l[2]]),new s([c[0]-l[0],c[1]-l[1],c[2]],[c[0],c[1],c[2]+l[2]])],d=[],p=[];for(let e=0;e<h.length;e++)d[e]=0,p[e]=[];let u=[0,0,0];for(let e=0;e<n;e++){let s=t.data.indexes[e],i=r[s];u[0]=a[i],u[1]=a[i+1],u[2]=a[i+2];for(let e=0;e<h.length;e++)h[e].containsPoint(u)&&(d[e]++,p[e].push(s))}for(let e=0;e<h.length;e++){let s=new i(h[e].min,h[e].max,t.depth+1);s.data={indexes:p[e]},t.children.push(s)}for(let s of(t.data={},t.children))processSplatTreeNode(e,s,r,a)};let a=(e,t,s)=>{let a=[0,0,0],n=[0,0,0],o=[],l=Math.floor(e.length/4);for(let t=0;t<l;t++){let s=4*t,r=e[s],i=e[s+1],l=e[s+2],c=Math.round(e[s+3]);(0===t||r<a[0])&&(a[0]=r),(0===t||r>n[0])&&(n[0]=r),(0===t||i<a[1])&&(a[1]=i),(0===t||i>n[1])&&(n[1]=i),(0===t||l<a[2])&&(a[2]=l),(0===t||l>n[2])&&(n[2]=l),o.push(c)}let c=new r(t,s);return c.sceneMin=a,c.sceneMax=n,c.rootNode=new i(c.sceneMin,c.sceneMax,0),c.rootNode.data={indexes:o},c};e.onmessage=t=>{t.data.process&&function(t,s,r){let i=[];for(let e of t){let t=Math.floor(e.length/4);for(let s=0;s<t;s++){let t=4*s;i[Math.round(e[t+3])]=t}}let n=[];for(let e of t){let t=a(e,s,r);n.push(t),processSplatTreeNode(t,t.rootNode,i,e)}e.postMessage({subTrees:n})}(t.data.process.centers,t.data.process.maxDepth,t.data.process.maxCentersPerNode)}}class tF{constructor(e,t){this.maxDepth=e,this.maxCentersPerNode=t,this.subTrees=[],this.splatMesh=null}dispose(){this.diposeSplatTreeWorker(),this.disposed=!0}diposeSplatTreeWorker(){this.splatTreeWorker&&this.splatTreeWorker.terminate(),this.splatTreeWorker=null}processSplatMesh=function(e,t=()=>!0,s,r){this.splatTreeWorker||(this.splatTreeWorker=new Worker(URL.createObjectURL(new Blob(["(",tM.toString(),")(self)"],{type:"application/javascript"})))),this.splatMesh=e,this.subTrees=[];let i=new p.Pa4,a=(s,r)=>{let a=new Float32Array(4*r),n=0;for(let o=0;o<r;o++){let r=o+s;if(t(r)){e.getSplatCenter(r,i);let t=4*n;a[t]=i.x,a[t+1]=i.y,a[t+2]=i.z,a[t+3]=r,n++}}return a};return new Promise(t=>{let i=()=>!!this.disposed&&(this.diposeSplatTreeWorker(),t(),!0);s&&s(!1),y(()=>{if(i())return;let n=[];if(e.dynamicMode){let t=0;for(let s=0;s<e.scenes.length;s++){let r=e.getScene(s).splatBuffer.getSplatCount(),i=a(t,r);n.push(i),t+=r}}else{let t=a(0,e.getSplatCount());n.push(t)}this.splatTreeWorker.onmessage=s=>{!i()&&s.data.subTrees&&(r&&r(!1),y(()=>{if(!i()){for(let t of s.data.subTrees){let s=tE.convertWorkerSubTree(t,e);this.subTrees.push(s)}this.diposeSplatTreeWorker(),r&&r(!0),y(()=>{t()})}}))},y(()=>{if(i())return;s&&s(!0);let e=n.map(e=>e.buffer);!function(e,t,s,r,i){e.postMessage({process:{centers:t,maxDepth:r,maxCentersPerNode:i}},s)}(this.splatTreeWorker,n,e,this.maxDepth,this.maxCentersPerNode)})})})};countLeaves(){let e=0;return this.visitLeaves(()=>{e++}),e}visitLeaves(e){let t=(e,s)=>{for(let r of(0===e.children.length&&s(e),e.children))t(r,s)};for(let s of this.subTrees)t(s.rootNode,e)}}function tP(e){let t={};function s(s){let r;if(void 0!==t[s])return t[s];switch(s){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(s)}return t[s]=r,r}return{has:function(e){return null!==s(e)},init:function(e){e.isWebGL2?(s("EXT_color_buffer_float"),s("WEBGL_clip_cull_distance")):(s("WEBGL_depth_texture"),s("OES_texture_float"),s("OES_texture_half_float"),s("OES_texture_half_float_linear"),s("OES_standard_derivatives"),s("OES_element_index_uint"),s("OES_vertex_array_object"),s("ANGLE_instanced_arrays")),s("OES_texture_float_linear"),s("EXT_color_buffer_half_float"),s("WEBGL_multisampled_render_to_texture")},get:function(e){let t=s(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function tR(e,t,s){let r;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===e.constructor.name,n=void 0!==s.precision?s.precision:"highp",o=i(n);o!==n&&(console.warn("THREE.WebGLRenderer:",n,"not supported, using",o,"instead."),n=o);let l=a||t.has("WEBGL_draw_buffers"),c=!0===s.logarithmicDepthBuffer,h=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=e.getParameter(e.MAX_TEXTURE_SIZE),u=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),m=e.getParameter(e.MAX_VERTEX_ATTRIBS),A=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),f=e.getParameter(e.MAX_VARYING_VECTORS),g=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),C=d>0,S=a||t.has("OES_texture_float"),y=a?e.getParameter(e.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){let s=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(s.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:n,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:u,maxAttributes:m,maxVertexUniforms:A,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:C,floatFragmentTextures:S,floatVertexTextures:C&&S,maxSamples:y}}let tk={Default:0,Instant:2},tH={None:0,Info:3},tL=new p.u9r,t_=new p.vBJ;class tO extends p.Kj0{constructor(e=tx.ThreeD,t=!1,s=!1,r=!1,i=1,a=!0,n=!1,o=!1,l=1024,c=tH.None,h=0){super(tL,t_),this.renderer=void 0,this.splatRenderMode=e,this.dynamicMode=t,this.enableOptionalEffects=s,this.halfPrecisionCovariancesOnGPU=r,this.devicePixelRatio=i,this.enableDistancesComputationOnGPU=a,this.integerBasedDistancesComputation=n,this.antialiased=o,this.maxScreenSpaceSplatSize=l,this.logLevel=c,this.sphericalHarmonicsDegree=h,this.minSphericalHarmonicsDegree=0,this.scenes=[],this.splatTree=null,this.baseSplatTree=null,this.splatDataTextures={},this.distancesTransformFeedback={id:null,vertexShader:null,fragmentShader:null,program:null,centersBuffer:null,sceneIndexesBuffer:null,outDistancesBuffer:null,centersLoc:-1,modelViewProjLoc:-1,sceneIndexesLoc:-1,transformsLocs:[]},this.globalSplatIndexToLocalSplatIndexMap=[],this.globalSplatIndexToSceneIndexMap=[],this.lastBuildSplatCount=0,this.lastBuildScenes=[],this.lastBuildMaxSplatCount=0,this.lastBuildSceneCount=0,this.firstRenderTime=-1,this.finalBuild=!1,this.webGLUtils=null,this.boundingBox=new p.ZzF,this.calculatedSceneCenter=new p.Pa4,this.maxSplatDistanceFromSceneCenter=0,this.visibleRegionBufferRadius=0,this.visibleRegionRadius=0,this.visibleRegionFadeStartRadius=0,this.visibleRegionChanging=!1,this.splatScale=1,this.pointCloudModeEnabled=!1,this.disposed=!1,this.lastRenderer=null,this.visible=!1}static buildScenes(e,t,s){let r=[];r.length=t.length;for(let i=0;i<t.length;i++){let a=t[i],n=s[i]||{},o=n.position||[0,0,0],l=n.rotation||[0,0,0,1],c=n.scale||[1,1,1],h=new p.Pa4().fromArray(o),d=new p._fP().fromArray(l),u=new p.Pa4().fromArray(c),m=tO.createScene(a,h,d,u,n.splatAlphaRemovalThreshold||1,n.opacity,n.visible);e.add(m),r[i]=m}return r}static createScene(e,t,s,r,i,a=1,n=!0){return new tT(e,t,s,r,i,a,n)}static buildSplatIndexMaps(e){let t=[],s=[],r=0;for(let i=0;i<e.length;i++){let a=e[i].getMaxSplatCount();for(let e=0;e<a;e++)t[r]=e,s[r]=i,r++}return{localSplatIndexMap:t,sceneIndexMap:s}}buildSplatTree=function(e=[],t,s){return new Promise(r=>{this.disposeSplatTree(),this.baseSplatTree=new tF(8,1e3);let i=performance.now(),a=new p.Ltg;this.baseSplatTree.processSplatMesh(this,t=>{this.getSplatColor(t,a);let s=e[this.getSceneIndexForSplat(t)]||1;return a.w>=s},t,s).then(()=>{let e=performance.now()-i;if(this.logLevel>=tH.Info&&console.log("SplatTree build: "+e+" ms"),this.disposed)r();else{this.splatTree=this.baseSplatTree,this.baseSplatTree=null;let e=0,t=0,s=0,i=0;this.splatTree.visitLeaves(r=>{let a=r.data.indexes.length;a>0&&(t+=a,s=Math.max(s,a),i++,e++)}),this.logLevel>=tH.Info&&(console.log(`SplatTree leaves: ${this.splatTree.countLeaves()}`),console.log(`SplatTree leaves with splats:${e}`),t/=i,console.log(`Avg splat count per node: ${t}`),console.log(`Total splat count: ${this.getSplatCount()}`)),r()}})})};build(e,t,s=!0,r=!1,i,a,n=!0){this.sceneOptions=t,this.finalBuild=r;let o=tO.getTotalMaxSplatCountForSplatBuffers(e),l=tO.buildScenes(this,e,t);if(s)for(let e=0;e<this.scenes.length&&e<l.length;e++){let t=l[e],s=this.getScene(e);t.copyTransformData(s)}this.scenes=l;let c=3;for(let t of e){let e=t.getMinSphericalHarmonicsDegree();e<c&&(c=e)}this.minSphericalHarmonicsDegree=Math.min(c,this.sphericalHarmonicsDegree);let h=!1;if(e.length!==this.lastBuildScenes.length)h=!0;else for(let t=0;t<e.length;t++)if(e[t]!==this.lastBuildScenes[t].splatBuffer){h=!0;break}let d=!0;if((1!==this.scenes.length||this.lastBuildSceneCount!==this.scenes.length||this.lastBuildMaxSplatCount!==o||h)&&(d=!1),!d){this.boundingBox=new p.ZzF,n||(this.maxSplatDistanceFromSceneCenter=0,this.visibleRegionBufferRadius=0,this.visibleRegionRadius=0,this.visibleRegionFadeStartRadius=0,this.firstRenderTime=-1),this.lastBuildScenes=[],this.lastBuildSplatCount=0,this.lastBuildMaxSplatCount=0,this.disposeMeshData(),this.geometry=tb.build(o),this.splatRenderMode===tx.ThreeD?this.material=tB.build(this.dynamicMode,this.enableOptionalEffects,this.antialiased,this.maxScreenSpaceSplatSize,this.splatScale,this.pointCloudModeEnabled,this.minSphericalHarmonicsDegree):this.material=tw.build(this.dynamicMode,this.enableOptionalEffects,this.splatScale,this.pointCloudModeEnabled,this.minSphericalHarmonicsDegree);let t=tO.buildSplatIndexMaps(e);this.globalSplatIndexToLocalSplatIndexMap=t.localSplatIndexMap,this.globalSplatIndexToSceneIndexMap=t.sceneIndexMap}let u=this.getSplatCount();this.enableDistancesComputationOnGPU&&this.setupDistancesComputationTransformFeedback();let m=this.refreshGPUDataFromSplatBuffers(d);for(let e=0;e<this.scenes.length;e++)this.lastBuildScenes[e]=this.scenes[e];return this.lastBuildSplatCount=u,this.lastBuildMaxSplatCount=this.getMaxSplatCount(),this.lastBuildSceneCount=this.scenes.length,r&&this.scenes.length>0&&this.buildSplatTree(t.map(e=>e.splatAlphaRemovalThreshold||1),i,a).then(()=>{this.onSplatTreeReadyCallback&&this.onSplatTreeReadyCallback(this.splatTree),this.onSplatTreeReadyCallback=null}),this.visible=this.scenes.length>0,m}freeIntermediateSplatData(){let e=e=>{delete e.source.data,delete e.image,e.onUpdate=null};delete this.splatDataTextures.baseData.covariances,delete this.splatDataTextures.baseData.centers,delete this.splatDataTextures.baseData.colors,delete this.splatDataTextures.baseData.sphericalHarmonics,delete this.splatDataTextures.centerColors.data,delete this.splatDataTextures.covariances.data,this.splatDataTextures.sphericalHarmonics&&delete this.splatDataTextures.sphericalHarmonics.data,this.splatDataTextures.sceneIndexes&&delete this.splatDataTextures.sceneIndexes.data,this.splatDataTextures.centerColors.texture.needsUpdate=!0,this.splatDataTextures.centerColors.texture.onUpdate=()=>{e(this.splatDataTextures.centerColors.texture)},this.splatDataTextures.covariances.texture.needsUpdate=!0,this.splatDataTextures.covariances.texture.onUpdate=()=>{e(this.splatDataTextures.covariances.texture)},this.splatDataTextures.sphericalHarmonics&&(this.splatDataTextures.sphericalHarmonics.texture?(this.splatDataTextures.sphericalHarmonics.texture.needsUpdate=!0,this.splatDataTextures.sphericalHarmonics.texture.onUpdate=()=>{e(this.splatDataTextures.sphericalHarmonics.texture)}):this.splatDataTextures.sphericalHarmonics.textures.forEach(t=>{t.needsUpdate=!0,t.onUpdate=()=>{e(t)}})),this.splatDataTextures.sceneIndexes&&(this.splatDataTextures.sceneIndexes.texture.needsUpdate=!0,this.splatDataTextures.sceneIndexes.texture.onUpdate=()=>{e(this.splatDataTextures.sceneIndexes.texture)})}dispose(){this.disposeMeshData(),this.disposeTextures(),this.disposeSplatTree(),this.enableDistancesComputationOnGPU&&(this.computeDistancesOnGPUSyncTimeout&&(clearTimeout(this.computeDistancesOnGPUSyncTimeout),this.computeDistancesOnGPUSyncTimeout=null),this.disposeDistancesComputationGPUResources()),this.scenes=[],this.distancesTransformFeedback={id:null,vertexShader:null,fragmentShader:null,program:null,centersBuffer:null,sceneIndexesBuffer:null,outDistancesBuffer:null,centersLoc:-1,modelViewProjLoc:-1,sceneIndexesLoc:-1,transformsLocs:[]},this.renderer=null,this.globalSplatIndexToLocalSplatIndexMap=[],this.globalSplatIndexToSceneIndexMap=[],this.lastBuildSplatCount=0,this.lastBuildScenes=[],this.lastBuildMaxSplatCount=0,this.lastBuildSceneCount=0,this.firstRenderTime=-1,this.finalBuild=!1,this.webGLUtils=null,this.boundingBox=new p.ZzF,this.calculatedSceneCenter=new p.Pa4,this.maxSplatDistanceFromSceneCenter=0,this.visibleRegionBufferRadius=0,this.visibleRegionRadius=0,this.visibleRegionFadeStartRadius=0,this.visibleRegionChanging=!1,this.splatScale=1,this.pointCloudModeEnabled=!1,this.disposed=!0,this.lastRenderer=null,this.visible=!1}disposeMeshData(){this.geometry&&this.geometry!==tL&&(this.geometry.dispose(),this.geometry=null),this.material&&(this.material.dispose(),this.material=null)}disposeTextures(){for(let e in this.splatDataTextures)if(this.splatDataTextures.hasOwnProperty(e)){let t=this.splatDataTextures[e];t.texture&&(t.texture.dispose(),t.texture=null)}this.splatDataTextures=null}disposeSplatTree(){this.splatTree&&(this.splatTree.dispose(),this.splatTree=null),this.baseSplatTree&&(this.baseSplatTree.dispose(),this.baseSplatTree=null)}getSplatTree(){return this.splatTree}onSplatTreeReady(e){this.onSplatTreeReadyCallback=e}getDataForDistancesComputation(e,t){return{centers:this.integerBasedDistancesComputation?this.getIntegerCenters(e,t,!0):this.getFloatCenters(e,t,!0),sceneIndexes:this.getSceneIndexes(e,t)}}refreshGPUDataFromSplatBuffers(e){let t=this.getSplatCount();this.refreshDataTexturesFromSplatBuffers(e);let s=e?this.lastBuildSplatCount:0,{centers:r,sceneIndexes:i}=this.getDataForDistancesComputation(s,t-1);return this.enableDistancesComputationOnGPU&&this.refreshGPUBuffersForDistancesComputation(r,i,e),{from:s,to:t-1,count:t-s,centers:r,sceneIndexes:i}}refreshGPUBuffersForDistancesComputation(e,t,s=!1){let r=s?this.lastBuildSplatCount:0;this.updateGPUCentersBufferForDistancesComputation(s,e,r),this.updateGPUTransformIndexesBufferForDistancesComputation(s,t,r)}refreshDataTexturesFromSplatBuffers(e){let t=this.getSplatCount(),s=this.lastBuildSplatCount,r=t-1;e?this.updateBaseDataFromSplatBuffers(s,r):(this.setupDataTextures(),this.updateBaseDataFromSplatBuffers()),this.updateDataTexturesFromBaseData(s,r),this.updateVisibleRegion(e)}setupDataTextures(){let e,t,s;let r=this.getMaxSplatCount(),i=this.getSplatCount();this.disposeTextures();let a=(e,t)=>{let s=new p.FM8(4096,1024);for(;s.x*s.y*e<r*t;)s.y*=2;return s},n=e=>e>=1?6:4,o=e=>{let t=n(e),s=a(t,6);return{elementsPerTexelStored:t,texSize:s}},l=this.getTargetCovarianceCompressionLevel(),c=this.getTargetSphericalHarmonicsCompressionLevel();if(this.splatRenderMode===tx.ThreeD){let t=o(l);t.texSize.x*t.texSize.y>16777216&&0===l&&(l=1),e=new Float32Array(6*r)}else t=new Float32Array(3*r),s=new Float32Array(4*r);let h=new Float32Array(3*r),d=new Uint8Array(4*r),u=Float32Array;1===c?u=Uint16Array:2===c&&(u=Uint8Array);let m=x(this.minSphericalHarmonicsDegree),A=this.minSphericalHarmonicsDegree?new u(r*m):void 0,f=a(4,4),g=new Uint32Array(f.x*f.y*4);tO.updateCenterColorsPaddedData(0,i-1,h,d,g);let C=new p.IEO(g,f.x,f.y,p.E2K,p.JQ4);if(C.internalFormat="RGBA32UI",C.needsUpdate=!0,this.material.uniforms.centersColorsTexture.value=C,this.material.uniforms.centersColorsTextureSize.value.copy(f),this.material.uniformsNeedUpdate=!0,this.splatDataTextures={baseData:{covariances:e,scales:t,rotations:s,centers:h,colors:d,sphericalHarmonics:A},centerColors:{data:g,texture:C,size:f}},this.splatRenderMode===tx.ThreeD){let t;let s=o(l),r=s.elementsPerTexelStored,i=s.texSize,a=l>=1?Uint32Array:Float32Array,n=l>=1?8:4,c=new a(i.x*i.y*n);if(0===l?c.set(e):tO.updatePaddedCompressedCovariancesTextureData(e,c,0,0,e.length),l>=1)(t=new p.IEO(c,i.x,i.y,p.E2K,p.JQ4)).internalFormat="RGBA32UI",this.material.uniforms.covariancesTextureHalfFloat.value=t;else{t=new p.IEO(c,i.x,i.y,p.wk1,p.VzW),this.material.uniforms.covariancesTexture.value=t;let e=new p.IEO(new Uint32Array(32),2,2,p.E2K,p.JQ4);e.internalFormat="RGBA32UI",this.material.uniforms.covariancesTextureHalfFloat.value=e,e.needsUpdate=!0}t.needsUpdate=!0,this.material.uniforms.covariancesAreHalfFloat.value=l>=1?1:0,this.material.uniforms.covariancesTextureSize.value.copy(i),this.splatDataTextures.covariances={data:c,texture:t,size:i,compressionLevel:l,elementsPerTexelStored:r,elementsPerTexelAllocated:n}}else{let e=a(4,6),r=Float32Array,n=p.VzW,o=new r(e.x*e.y*4);tO.updateScaleRotationsPaddedData(0,i-1,t,s,o);let l=new p.IEO(o,e.x,e.y,p.wk1,n);l.needsUpdate=!0,this.material.uniforms.scaleRotationsTexture.value=l,this.material.uniforms.scaleRotationsTextureSize.value.copy(e),this.splatDataTextures.scaleRotations={data:o,texture:l,size:e,compressionLevel:0}}if(A){let e=2===c?p.ywz:p.cLu,t=m;t%2!=0&&t++;let s=2===this.minSphericalHarmonicsDegree?4:2,r=4===s?p.wk1:p.av9,n=a(s,t);if(n.x*n.y<=16777216){let a=new u(n.x*n.y*s);for(let e=0;e<i;e++){let s=m*e,r=t*e;for(let e=0;e<m;e++)a[r+e]=A[s+e]}let o=new p.IEO(a,n.x,n.y,r,e);o.needsUpdate=!0,this.material.uniforms.sphericalHarmonicsTexture.value=o,this.splatDataTextures.sphericalHarmonics={componentCount:m,paddedComponentCount:t,data:a,textureCount:1,texture:o,size:n,compressionLevel:c,elementsPerTexel:s}}else{let o=m/3;(t=o)%2!=0&&t++;let l=(n=a(s,t)).x*n.y*s,h=[this.material.uniforms.sphericalHarmonicsTextureR,this.material.uniforms.sphericalHarmonicsTextureG,this.material.uniforms.sphericalHarmonicsTextureB],d=[],f=[];for(let s=0;s<3;s++){let a=new u(l);d.push(a);for(let e=0;e<i;e++){let r=m*e,i=t*e;if(o>=3){for(let e=0;e<3;e++)a[i+e]=A[r+3*s+e];if(o>=8)for(let e=0;e<5;e++)a[i+3+e]=A[r+9+5*s+e]}}let c=new p.IEO(a,n.x,n.y,r,e);f.push(c),c.needsUpdate=!0,h[s].value=c}this.material.uniforms.sphericalHarmonicsMultiTextureMode.value=1,this.splatDataTextures.sphericalHarmonics={componentCount:m,componentCountPerChannel:o,paddedComponentCount:t,data:d,textureCount:3,textures:f,size:n,compressionLevel:c,elementsPerTexel:s}}this.material.uniforms.sphericalHarmonicsTextureSize.value.copy(n),this.material.uniforms.sphericalHarmonics8BitMode.value=2===c?1:0;for(let e=0;e<this.scenes.length;e++){let t=this.scenes[e].splatBuffer;this.material.uniforms.sphericalHarmonics8BitCompressionRangeMin.value[e]=t.minSphericalHarmonicsCoeff,this.material.uniforms.sphericalHarmonics8BitCompressionRangeMax.value[e]=t.maxSphericalHarmonicsCoeff}this.material.uniformsNeedUpdate=!0}let S=a(1,4),y=new Uint32Array(S.x*S.y*1);for(let e=0;e<i;e++)y[e]=this.globalSplatIndexToSceneIndexMap[e];let v=new p.IEO(y,S.x,S.y,p.D9w,p.JQ4);v.internalFormat="R32UI",v.needsUpdate=!0,this.material.uniforms.sceneIndexesTexture.value=v,this.material.uniforms.sceneIndexesTextureSize.value.copy(S),this.material.uniformsNeedUpdate=!0,this.splatDataTextures.sceneIndexes={data:y,texture:v,size:S},this.material.uniforms.sceneCount.value=this.scenes.length}updateBaseDataFromSplatBuffers(e,t){let s=this.splatDataTextures.covariances,r=s?s.compressionLevel:void 0,i=this.splatDataTextures.scaleRotations,a=i?i.compressionLevel:void 0,n=this.splatDataTextures.sphericalHarmonics,o=n?n.compressionLevel:0;this.fillSplatDataArrays(this.splatDataTextures.baseData.covariances,this.splatDataTextures.baseData.scales,this.splatDataTextures.baseData.rotations,this.splatDataTextures.baseData.centers,this.splatDataTextures.baseData.colors,this.splatDataTextures.baseData.sphericalHarmonics,void 0,r,a,o,e,t,e)}updateDataTexturesFromBaseData(e,t){let s=this.splatDataTextures.covariances,r=s?s.compressionLevel:void 0,i=this.splatDataTextures.scaleRotations,a=i?i.compressionLevel:void 0,n=this.splatDataTextures.sphericalHarmonics,o=n?n.compressionLevel:0,l=this.splatDataTextures.centerColors,c=l.data,h=l.texture;tO.updateCenterColorsPaddedData(e,t,this.splatDataTextures.baseData.centers,this.splatDataTextures.baseData.colors,c);let d=this.renderer?this.renderer.properties.get(h):null;if(d&&d.__webglTexture?this.updateDataTexture(c,l.texture,l.size,d,4,4,4,e,t):h.needsUpdate=!0,s){let i=s.texture,a=6*e,n=6*t;if(0===r)for(let e=a;e<=n;e++){let t=this.splatDataTextures.baseData.covariances[e];s.data[e]=t}else tO.updatePaddedCompressedCovariancesTextureData(this.splatDataTextures.baseData.covariances,s.data,e*s.elementsPerTexelAllocated,a,n);let o=this.renderer?this.renderer.properties.get(i):null;o&&o.__webglTexture?0===r?this.updateDataTexture(s.data,s.texture,s.size,o,s.elementsPerTexelStored,6,4,e,t):this.updateDataTexture(s.data,s.texture,s.size,o,s.elementsPerTexelAllocated,s.elementsPerTexelAllocated,2,e,t):i.needsUpdate=!0}if(i){let s=i.data,r=i.texture;tO.updateScaleRotationsPaddedData(e,t,this.splatDataTextures.baseData.scales,this.splatDataTextures.baseData.rotations,s);let n=this.renderer?this.renderer.properties.get(r):null;n&&n.__webglTexture?this.updateDataTexture(s,i.texture,i.size,n,4,6,0===a?4:2,e,t):r.needsUpdate=!0}let p=this.splatDataTextures.baseData.sphericalHarmonics;if(p){let s=4;1===o?s=2:2===o&&(s=1);let r=(r,i,a,n,o)=>{let l=this.renderer?this.renderer.properties.get(r):null;l&&l.__webglTexture?this.updateDataTexture(n,r,i,l,a,o,s,e,t):r.needsUpdate=!0},i=n.componentCount,a=n.paddedComponentCount;if(1===n.textureCount){let s=n.data;for(let r=e;r<=t;r++){let e=i*r,t=a*r;for(let r=0;r<i;r++)s[t+r]=p[e+r]}r(n.texture,n.size,n.elementsPerTexel,s,a)}else{let s=n.componentCountPerChannel;for(let o=0;o<3;o++){let l=n.data[o];for(let r=e;r<=t;r++){let e=i*r,t=a*r;if(s>=3){for(let s=0;s<3;s++)l[t+s]=p[e+3*o+s];if(s>=8)for(let s=0;s<5;s++)l[t+3+s]=p[e+9+5*o+s]}}r(n.textures[o],n.size,n.elementsPerTexel,l,a)}}}let u=this.splatDataTextures.sceneIndexes,m=u.data;for(let e=this.lastBuildSplatCount;e<=t;e++)m[e]=this.globalSplatIndexToSceneIndexMap[e];let A=u.texture,f=this.renderer?this.renderer.properties.get(A):null;f&&f.__webglTexture?this.updateDataTexture(m,u.texture,u.size,f,1,1,1,this.lastBuildSplatCount,t):A.needsUpdate=!0}getTargetCovarianceCompressionLevel(){return this.halfPrecisionCovariancesOnGPU?1:0}getTargetSphericalHarmonicsCompressionLevel(){return Math.max(1,this.getMaximumSplatBufferCompressionLevel())}getMaximumSplatBufferCompressionLevel(){let e;for(let t=0;t<this.scenes.length;t++){let s=this.getScene(t).splatBuffer;(0===t||s.compressionLevel>e)&&(e=s.compressionLevel)}return e}getMinimumSplatBufferCompressionLevel(){let e;for(let t=0;t<this.scenes.length;t++){let s=this.getScene(t).splatBuffer;(0===t||s.compressionLevel<e)&&(e=s.compressionLevel)}return e}static computeTextureUpdateRegion(e,t,s,r,i){let a=i/r,n=Math.floor(e*a/s),o=Math.floor(t*a/s);return{dataStart:n*s*r,dataEnd:o*s*r+s*r,startRow:n,endRow:o}}updateDataTexture(e,t,s,r,i,a,n,o,l){let c=this.renderer.getContext(),h=tO.computeTextureUpdateRegion(o,l,s.x,i,a),d=h.dataEnd-h.dataStart,p=new e.constructor(e.buffer,h.dataStart*n,d),u=h.endRow-h.startRow+1,m=this.webGLUtils.convert(t.type),A=this.webGLUtils.convert(t.format,t.colorSpace),f=c.getParameter(c.TEXTURE_BINDING_2D);c.bindTexture(c.TEXTURE_2D,r.__webglTexture),c.texSubImage2D(c.TEXTURE_2D,0,0,h.startRow,s.x,u,A,m,p),c.bindTexture(c.TEXTURE_2D,f)}static updatePaddedCompressedCovariancesTextureData(e,t,s,r,i){let a=new DataView(t.buffer),n=s,o=0;for(let t=r;t<=i;t+=2)a.setUint16(2*n,e[t],!0),a.setUint16(2*n+2,e[t+1],!0),n+=2,++o>=3&&(n+=2,o=0)}static updateCenterColorsPaddedData(e,t,s,r,i){for(let a=e;a<=t;a++){let e=4*a,t=3*a,n=4*a;i[n]=r[e]+(r[e+1]<<8)+(r[e+2]<<16)+(r[e+3]<<24),i[n+1]=A(s[t]),i[n+2]=A(s[t+1]),i[n+3]=A(s[t+2])}}static updateScaleRotationsPaddedData(e,t,s,r,i){for(let a=e;a<=t;a++){let e=3*a,t=4*a,n=6*a;i[n]=s[e],i[n+1]=s[e+1],i[n+2]=s[e+2],i[n+3]=r[t],i[n+4]=r[t+1],i[n+5]=r[t+2]}}updateVisibleRegion(e){let t=this.getSplatCount(),s=new p.Pa4;if(!e){let e=new p.Pa4;this.scenes.forEach(t=>{e.add(t.splatBuffer.sceneCenter)}),e.multiplyScalar(1/this.scenes.length),this.calculatedSceneCenter.copy(e),this.material.uniforms.sceneCenter.value.copy(this.calculatedSceneCenter),this.material.uniformsNeedUpdate=!0}let r=e?this.lastBuildSplatCount:0;for(let e=r;e<t;e++){this.getSplatCenter(e,s,!0);let t=s.sub(this.calculatedSceneCenter).length();t>this.maxSplatDistanceFromSceneCenter&&(this.maxSplatDistanceFromSceneCenter=t)}this.maxSplatDistanceFromSceneCenter-this.visibleRegionBufferRadius>1&&(this.visibleRegionBufferRadius=this.maxSplatDistanceFromSceneCenter,this.visibleRegionRadius=Math.max(this.visibleRegionBufferRadius-1,0)),this.finalBuild&&(this.visibleRegionRadius=this.visibleRegionBufferRadius=this.maxSplatDistanceFromSceneCenter),this.updateVisibleRegionFadeDistance()}updateVisibleRegionFadeDistance(e=tk.Default){let t=this.finalBuild?.012:.003,s=e===tk.Default?t:.003;this.visibleRegionFadeStartRadius=(this.visibleRegionRadius-this.visibleRegionFadeStartRadius)*s+this.visibleRegionFadeStartRadius;let r=(this.visibleRegionBufferRadius>0?this.visibleRegionFadeStartRadius/this.visibleRegionBufferRadius:0)>.99,i=r||e===tk.Instant?1:0;this.material.uniforms.visibleRegionFadeStartRadius.value=this.visibleRegionFadeStartRadius,this.material.uniforms.visibleRegionRadius.value=this.visibleRegionRadius,this.material.uniforms.firstRenderTime.value=this.firstRenderTime,this.material.uniforms.currentTime.value=performance.now(),this.material.uniforms.fadeInComplete.value=i,this.material.uniformsNeedUpdate=!0,this.visibleRegionChanging=!r}updateRenderIndexes(e,t){let s=this.geometry;s.attributes.splatIndex.set(e),s.attributes.splatIndex.needsUpdate=!0,t>0&&-1===this.firstRenderTime&&(this.firstRenderTime=performance.now()),s.instanceCount=t}updateTransforms(){for(let e=0;e<this.scenes.length;e++)this.getScene(e).updateTransform(this.dynamicMode)}updateUniforms=(function(){let e=new p.FM8;return function(t,s,r,i,a,n){if(this.getSplatCount()>0){if(e.set(t.x*this.devicePixelRatio,t.y*this.devicePixelRatio),this.material.uniforms.viewport.value.copy(e),this.material.uniforms.basisViewport.value.set(1/e.x,1/e.y),this.material.uniforms.focal.value.set(s,r),this.material.uniforms.orthographicMode.value=i?1:0,this.material.uniforms.orthoZoom.value=a,this.material.uniforms.inverseFocalAdjustment.value=n,this.dynamicMode)for(let e=0;e<this.scenes.length;e++)this.material.uniforms.transforms.value[e].copy(this.getScene(e).transform);if(this.enableOptionalEffects)for(let e=0;e<this.scenes.length;e++)this.material.uniforms.sceneOpacity.value[e]=g(this.getScene(e).opacity,0,1),this.material.uniforms.sceneVisibility.value[e]=this.getScene(e).visible?1:0,this.material.uniformsNeedUpdate=!0;this.material.uniformsNeedUpdate=!0}}})();setSplatScale(e=1){this.splatScale=e,this.material.uniforms.splatScale.value=e,this.material.uniformsNeedUpdate=!0}getSplatScale(){return this.splatScale}setPointCloudModeEnabled(e){this.pointCloudModeEnabled=e,this.material.uniforms.pointCloudModeEnabled.value=e?1:0,this.material.uniformsNeedUpdate=!0}getPointCloudModeEnabled(){return this.pointCloudModeEnabled}getSplatDataTextures(){return this.splatDataTextures}getSplatCount(){return tO.getTotalSplatCountForScenes(this.scenes)}static getTotalSplatCountForScenes(e){let t=0;for(let s of e)s&&s.splatBuffer&&(t+=s.splatBuffer.getSplatCount());return t}static getTotalSplatCountForSplatBuffers(e){let t=0;for(let s of e)t+=s.getSplatCount();return t}getMaxSplatCount(){return tO.getTotalMaxSplatCountForScenes(this.scenes)}static getTotalMaxSplatCountForScenes(e){let t=0;for(let s of e)s&&s.splatBuffer&&(t+=s.splatBuffer.getMaxSplatCount());return t}static getTotalMaxSplatCountForSplatBuffers(e){let t=0;for(let s of e)t+=s.getMaxSplatCount();return t}disposeDistancesComputationGPUResources(){if(!this.renderer)return;let e=this.renderer.getContext();this.distancesTransformFeedback.vao&&(e.deleteVertexArray(this.distancesTransformFeedback.vao),this.distancesTransformFeedback.vao=null),this.distancesTransformFeedback.program&&(e.deleteProgram(this.distancesTransformFeedback.program),e.deleteShader(this.distancesTransformFeedback.vertexShader),e.deleteShader(this.distancesTransformFeedback.fragmentShader),this.distancesTransformFeedback.program=null,this.distancesTransformFeedback.vertexShader=null,this.distancesTransformFeedback.fragmentShader=null),this.disposeDistancesComputationGPUBufferResources(),this.distancesTransformFeedback.id&&(e.deleteTransformFeedback(this.distancesTransformFeedback.id),this.distancesTransformFeedback.id=null)}disposeDistancesComputationGPUBufferResources(){if(!this.renderer)return;let e=this.renderer.getContext();this.distancesTransformFeedback.centersBuffer&&(this.distancesTransformFeedback.centersBuffer=null,e.deleteBuffer(this.distancesTransformFeedback.centersBuffer)),this.distancesTransformFeedback.outDistancesBuffer&&(e.deleteBuffer(this.distancesTransformFeedback.outDistancesBuffer),this.distancesTransformFeedback.outDistancesBuffer=null)}setRenderer(e){if(e!==this.renderer){this.renderer=e;let t=this.renderer.getContext(),s=new tP(t),r=new tR(t,s,{});if(s.init(r),this.webGLUtils=new p.fQK(t,s,r),this.enableDistancesComputationOnGPU&&this.getSplatCount()>0){this.setupDistancesComputationTransformFeedback();let{centers:e,sceneIndexes:t}=this.getDataForDistancesComputation(0,this.getSplatCount()-1);this.refreshGPUBuffersForDistancesComputation(e,t)}}}setupDistancesComputationTransformFeedback=function(){let e;let t=this.getMaxSplatCount();if(!this.renderer)return;let s=this.lastRenderer!==this.renderer,r=i!==t;if(!s&&!r)return;s?this.disposeDistancesComputationGPUResources():r&&this.disposeDistancesComputationGPUBufferResources();let a=this.renderer.getContext(),n=(e,t,s)=>{let r=e.createShader(t);if(!r)return console.error("Fatal error: gl could not create a shader object."),null;if(e.shaderSource(r,s),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS)){let s="unknown";return t===e.VERTEX_SHADER?s="vertex shader":t===e.FRAGMENT_SHADER&&(s="fragement shader"),console.error("Failed to compile "+s+" with these errors:"+e.getShaderInfoLog(r)),e.deleteShader(r),null}return r};this.integerBasedDistancesComputation?(e=`#version 300 es
                in ivec4 center;
                flat out int distance;`,this.dynamicMode?e+=`
                        in uint sceneIndex;
                        uniform ivec4 transforms[${D.MaxScenes}];
                        void main(void) {
                            ivec4 transform = transforms[sceneIndex];
                            distance = center.x * transform.x + center.y * transform.y + center.z * transform.z + transform.w * center.w;
                        }
                    `:e+=`
                        uniform ivec3 modelViewProj;
                        void main(void) {
                            distance = center.x * modelViewProj.x + center.y * modelViewProj.y + center.z * modelViewProj.z;
                        }
                    `):(e=`#version 300 es
                in vec4 center;
                flat out float distance;`,this.dynamicMode?e+=`
                        in uint sceneIndex;
                        uniform mat4 transforms[${D.MaxScenes}];
                        void main(void) {
                            vec4 transformedCenter = transforms[sceneIndex] * vec4(center.xyz, 1.0);
                            distance = transformedCenter.z;
                        }
                    `:e+=`
                        uniform vec3 modelViewProj;
                        void main(void) {
                            distance = center.x * modelViewProj.x + center.y * modelViewProj.y + center.z * modelViewProj.z;
                        }
                    `);let o=`#version 300 es
                precision lowp float;
                out vec4 fragColor;
                void main(){}
            `,l=a.getParameter(a.VERTEX_ARRAY_BINDING),c=a.getParameter(a.CURRENT_PROGRAM),h=!!c&&a.getProgramParameter(c,a.DELETE_STATUS);if(s&&(this.distancesTransformFeedback.vao=a.createVertexArray()),a.bindVertexArray(this.distancesTransformFeedback.vao),s){let t=a.createProgram(),s=n(a,a.VERTEX_SHADER,e),r=n(a,a.FRAGMENT_SHADER,o);if(!s||!r)throw Error("Could not compile shaders for distances computation on GPU.");if(a.attachShader(t,s),a.attachShader(t,r),a.transformFeedbackVaryings(t,["distance"],a.SEPARATE_ATTRIBS),a.linkProgram(t),!a.getProgramParameter(t,a.LINK_STATUS))throw console.error("Fatal error: Failed to link program: "+a.getProgramInfoLog(t)),a.deleteProgram(t),a.deleteShader(r),a.deleteShader(s),Error("Could not link shaders for distances computation on GPU.");this.distancesTransformFeedback.program=t,this.distancesTransformFeedback.vertexShader=s,this.distancesTransformFeedback.vertexShader=r}if(a.useProgram(this.distancesTransformFeedback.program),this.distancesTransformFeedback.centersLoc=a.getAttribLocation(this.distancesTransformFeedback.program,"center"),this.dynamicMode){this.distancesTransformFeedback.sceneIndexesLoc=a.getAttribLocation(this.distancesTransformFeedback.program,"sceneIndex");for(let e=0;e<this.scenes.length;e++)this.distancesTransformFeedback.transformsLocs[e]=a.getUniformLocation(this.distancesTransformFeedback.program,`transforms[${e}]`)}else this.distancesTransformFeedback.modelViewProjLoc=a.getUniformLocation(this.distancesTransformFeedback.program,"modelViewProj");(s||r)&&(this.distancesTransformFeedback.centersBuffer=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,this.distancesTransformFeedback.centersBuffer),a.enableVertexAttribArray(this.distancesTransformFeedback.centersLoc),this.integerBasedDistancesComputation?a.vertexAttribIPointer(this.distancesTransformFeedback.centersLoc,4,a.INT,0,0):a.vertexAttribPointer(this.distancesTransformFeedback.centersLoc,4,a.FLOAT,!1,0,0),this.dynamicMode&&(this.distancesTransformFeedback.sceneIndexesBuffer=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,this.distancesTransformFeedback.sceneIndexesBuffer),a.enableVertexAttribArray(this.distancesTransformFeedback.sceneIndexesLoc),a.vertexAttribIPointer(this.distancesTransformFeedback.sceneIndexesLoc,1,a.UNSIGNED_INT,0,0))),(s||r)&&(this.distancesTransformFeedback.outDistancesBuffer=a.createBuffer()),a.bindBuffer(a.ARRAY_BUFFER,this.distancesTransformFeedback.outDistancesBuffer),a.bufferData(a.ARRAY_BUFFER,4*t,a.STATIC_READ),s&&(this.distancesTransformFeedback.id=a.createTransformFeedback()),a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,this.distancesTransformFeedback.id),a.bindBufferBase(a.TRANSFORM_FEEDBACK_BUFFER,0,this.distancesTransformFeedback.outDistancesBuffer),c&&!0!==h&&a.useProgram(c),l&&a.bindVertexArray(l),this.lastRenderer=this.renderer,i=t};updateGPUCentersBufferForDistancesComputation(e,t,s){if(!this.renderer)return;let r=this.renderer.getContext(),i=r.getParameter(r.VERTEX_ARRAY_BINDING);r.bindVertexArray(this.distancesTransformFeedback.vao);let a=this.integerBasedDistancesComputation?Uint32Array:Float32Array;if(r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.centersBuffer),e)r.bufferSubData(r.ARRAY_BUFFER,16*s,t);else{let e=new a(16*this.getMaxSplatCount());e.set(t),r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)}r.bindBuffer(r.ARRAY_BUFFER,null),i&&r.bindVertexArray(i)}updateGPUTransformIndexesBufferForDistancesComputation(e,t,s){if(!this.renderer||!this.dynamicMode)return;let r=this.renderer.getContext(),i=r.getParameter(r.VERTEX_ARRAY_BINDING);if(r.bindVertexArray(this.distancesTransformFeedback.vao),r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.sceneIndexesBuffer),e)r.bufferSubData(r.ARRAY_BUFFER,4*s,t);else{let e=new Uint32Array(4*this.getMaxSplatCount());e.set(t),r.bufferData(r.ARRAY_BUFFER,e,r.STATIC_DRAW)}r.bindBuffer(r.ARRAY_BUFFER,null),i&&r.bindVertexArray(i)}getSceneIndexes(e,t){let s;s=new Uint32Array(t-e+1);for(let r=e;r<=t;r++)s[r]=this.globalSplatIndexToSceneIndexMap[r];return s}fillTransformsArray=(function(){let e=[];return function(t){e.length!==t.length&&(e.length=t.length);for(let t=0;t<this.scenes.length;t++){let s=this.getScene(t).transform.elements;for(let r=0;r<16;r++)e[16*t+r]=s[r]}t.set(e)}})();computeDistancesOnGPU=(function(){let e=new p.yGw;return function(t,s){if(!this.renderer)return;let r=this.renderer.getContext(),i=r.getParameter(r.VERTEX_ARRAY_BINDING),a=r.getParameter(r.CURRENT_PROGRAM),n=!!a&&r.getProgramParameter(a,r.DELETE_STATUS);if(r.bindVertexArray(this.distancesTransformFeedback.vao),r.useProgram(this.distancesTransformFeedback.program),r.enable(r.RASTERIZER_DISCARD),this.dynamicMode)for(let s=0;s<this.scenes.length;s++)if(e.copy(this.getScene(s).transform),e.premultiply(t),this.integerBasedDistancesComputation){let t=tO.getIntegerMatrixArray(e),i=[t[2],t[6],t[10],t[14]];r.uniform4i(this.distancesTransformFeedback.transformsLocs[s],i[0],i[1],i[2],i[3])}else r.uniformMatrix4fv(this.distancesTransformFeedback.transformsLocs[s],!1,e.elements);else if(this.integerBasedDistancesComputation){let e=tO.getIntegerMatrixArray(t),s=[e[2],e[6],e[10]];r.uniform3i(this.distancesTransformFeedback.modelViewProjLoc,s[0],s[1],s[2])}else{let e=[t.elements[2],t.elements[6],t.elements[10]];r.uniform3f(this.distancesTransformFeedback.modelViewProjLoc,e[0],e[1],e[2])}r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.centersBuffer),r.enableVertexAttribArray(this.distancesTransformFeedback.centersLoc),this.integerBasedDistancesComputation?r.vertexAttribIPointer(this.distancesTransformFeedback.centersLoc,4,r.INT,0,0):r.vertexAttribPointer(this.distancesTransformFeedback.centersLoc,4,r.FLOAT,!1,0,0),this.dynamicMode&&(r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.sceneIndexesBuffer),r.enableVertexAttribArray(this.distancesTransformFeedback.sceneIndexesLoc),r.vertexAttribIPointer(this.distancesTransformFeedback.sceneIndexesLoc,1,r.UNSIGNED_INT,0,0)),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,this.distancesTransformFeedback.id),r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,0,this.distancesTransformFeedback.outDistancesBuffer),r.beginTransformFeedback(r.POINTS),r.drawArrays(r.POINTS,0,this.getSplatCount()),r.endTransformFeedback(),r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,0,null),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null),r.disable(r.RASTERIZER_DISCARD);let o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);r.flush();let l=new Promise(e=>{let t=()=>{if(this.disposed)e();else switch(r.clientWaitSync(o,0,0)){case r.TIMEOUT_EXPIRED:return this.computeDistancesOnGPUSyncTimeout=setTimeout(t),this.computeDistancesOnGPUSyncTimeout;case r.WAIT_FAILED:throw Error("should never get here");default:this.computeDistancesOnGPUSyncTimeout=null,r.deleteSync(o);let i=r.getParameter(r.VERTEX_ARRAY_BINDING);r.bindVertexArray(this.distancesTransformFeedback.vao),r.bindBuffer(r.ARRAY_BUFFER,this.distancesTransformFeedback.outDistancesBuffer),r.getBufferSubData(r.ARRAY_BUFFER,0,s),r.bindBuffer(r.ARRAY_BUFFER,null),i&&r.bindVertexArray(i),e()}};this.computeDistancesOnGPUSyncTimeout=setTimeout(t)});return a&&!0!==n&&r.useProgram(a),i&&r.bindVertexArray(i),l}})();getLocalSplatParameters(e,t,s){null==s&&(s=!this.dynamicMode),t.splatBuffer=this.getSplatBufferForSplat(e),t.localIndex=this.getSplatLocalIndex(e),t.sceneTransform=s?this.getSceneTransformForSplat(e):null}fillSplatDataArrays(e,t,s,r,i,a,n,o=0,l=0,c=1,h,d,u=0){let m=new p.Pa4;m.x=void 0,m.y=void 0,this.splatRenderMode===tx.ThreeD?m.z=void 0:m.z=1;let A=new p.yGw;for(let p=0;p<this.scenes.length;p++){let f;null==n&&(n=!this.dynamicMode);let g=this.getScene(p),C=g.splatBuffer;if(n&&(this.getSceneTransform(p,A),f=A),e&&C.fillSplatCovarianceArray(e,f,h,d,u,o),t||s){if(!t||!s)throw Error('SplatMesh::fillSplatDataArrays() -> "scales" and "rotations" must both be valid.');C.fillSplatScaleRotationArray(t,s,f,h,d,u,l,m)}r&&C.fillSplatCenterArray(r,f,h,d,u),i&&C.fillSplatColorArray(i,g.minimumAlpha,h,d,u),a&&C.fillSphericalHarmonicsArray(a,this.minSphericalHarmonicsDegree,f,h,d,u,c),u+=C.getSplatCount()}}getIntegerCenters(e,t,s=!1){let r;let i=t-e+1,a=new Float32Array(3*i);this.fillSplatDataArrays(null,null,null,a,null,null,void 0,void 0,void 0,void 0,e);let n=s?4:3;r=new Int32Array(i*n);for(let e=0;e<i;e++){for(let t=0;t<3;t++)r[e*n+t]=Math.round(1e3*a[3*e+t]);s&&(r[e*n+3]=1e3)}return r}getFloatCenters(e,t,s=!1){let r=t-e+1,i=new Float32Array(3*r);if(this.fillSplatDataArrays(null,null,null,i,null,null,void 0,void 0,void 0,void 0,e),!s)return i;let a=new Float32Array(4*r);for(let e=0;e<r;e++){for(let t=0;t<3;t++)a[4*e+t]=i[3*e+t];a[4*e+3]=1}return a}getSplatCenter=(function(){let e={};return function(t,s,r){this.getLocalSplatParameters(t,e,r),e.splatBuffer.getSplatCenter(e.localIndex,s,e.sceneTransform)}})();getSplatScaleAndRotation=(function(){let e={},t=new p.Pa4;return function(s,r,i,a){this.getLocalSplatParameters(s,e,a),t.x=void 0,t.y=void 0,t.z=void 0,this.splatRenderMode===tx.TwoD&&(t.z=0),e.splatBuffer.getSplatScaleAndRotation(e.localIndex,r,i,e.sceneTransform,t)}})();getSplatColor=(function(){let e={};return function(t,s){this.getLocalSplatParameters(t,e),e.splatBuffer.getSplatColor(e.localIndex,s)}})();getSceneTransform(e,t){let s=this.getScene(e);s.updateTransform(this.dynamicMode),t.copy(s.transform)}getScene(e){if(e<0||e>=this.scenes.length)throw Error("SplatMesh::getScene() -> Invalid scene index.");return this.scenes[e]}getSceneCount(){return this.scenes.length}getSplatBufferForSplat(e){return this.getScene(this.globalSplatIndexToSceneIndexMap[e]).splatBuffer}getSceneIndexForSplat(e){return this.globalSplatIndexToSceneIndexMap[e]}getSceneTransformForSplat(e){return this.getScene(this.globalSplatIndexToSceneIndexMap[e]).transform}getSplatLocalIndex(e){return this.globalSplatIndexToLocalSplatIndexMap[e]}static getIntegerMatrixArray(e){let t=e.elements,s=[];for(let e=0;e<16;e++)s[e]=Math.round(1e3*t[e]);return s}}var tz="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";function tU(e){let t,s,r,i,a,n,o,l,c,h,d,p,u,m,A,f,g,C;e.onmessage=S=>{if(S.data.centers)centers=S.data.centers,sceneIndexes=S.data.sceneIndexes,i?new Int32Array(s,m+S.data.range.from*C.BytesPerInt*4,4*S.data.range.count).set(new Int32Array(centers)):new Float32Array(s,m+S.data.range.from*C.BytesPerFloat*4,4*S.data.range.count).set(new Float32Array(centers)),a&&new Uint32Array(s,c+4*S.data.range.from,S.data.range.count).set(new Uint32Array(sceneIndexes)),e.postMessage({centerDataSet:!0});else if(S.data.sort){let y,x,v;let I=S.data.sort.splatRenderCount||0,B=S.data.sort.splatSortCount||0,w=S.data.sort.usePrecomputedDistances;!r&&(y=S.data.sort.indexesToSort,v=S.data.sort.transforms,w&&(x=S.data.sort.precomputedDistances)),function(S,y,x,v,I,B,w){let b=performance.now();!r&&(new Uint32Array(s,o,I.byteLength/C.BytesPerInt).set(I),new Float32Array(s,h,w.byteLength/C.BytesPerFloat).set(w),v)&&(i?new Int32Array(s,d,B.byteLength/C.BytesPerInt):new Float32Array(s,d,B.byteLength/C.BytesPerFloat)).set(B),f||(f=new Uint32Array(C.DepthMapRange)),new Float32Array(s,A,16).set(x),new Uint32Array(s,u,C.DepthMapRange).set(f),t.exports.sortIndexes(o,m,d,p,u,A,l,c,h,C.DepthMapRange,S,y,n,v,i,a);let T={sortDone:!0,splatSortCount:S,splatRenderCount:y,sortTime:0};if(!r){let e=new Uint32Array(s,l,y);(!g||g.length<y)&&(g=new Uint32Array(y)),g.set(e),T.sortedIndexes=g}let D=performance.now();T.sortTime=D-b,e.postMessage(T)}(B,I,S.data.sort.modelViewProj,w,y,x,v)}else if(S.data.init){C=S.data.init.Constants,n=S.data.init.splatCount,r=S.data.init.useSharedMemory,i=S.data.init.integerBasedSort,a=S.data.init.dynamicMode;let f=i?4*C.BytesPerInt:4*C.BytesPerFloat,g=new Uint8Array(S.data.init.sorterWasmBytes),y=16*C.BytesPerFloat,x=n*C.BytesPerInt,v=n*f,I=i?n*C.BytesPerInt:n*C.BytesPerFloat,B=n*C.BytesPerInt,w=n*C.BytesPerInt,b=C.DepthMapRange*C.BytesPerInt*2,T=a?n*C.BytesPerInt:0,D=a?C.MaxScenes*y:0,E=Math.floor((x+v+y+I+B+b+w+T+D+32*C.MemoryPageSize)/C.MemoryPageSize)+1,M={module:{},env:{memory:new WebAssembly.Memory({initial:E,maximum:E,shared:!0})}};WebAssembly.compile(g).then(e=>WebAssembly.instantiate(e,M)).then(i=>{t=i,h=(c=(l=(u=(p=(d=(A=(m=(o=0)+x)+v)+y)+I)+B)+b)+w)+T,s=M.env.memory.buffer,r?e.postMessage({sortSetupPhase1Complete:!0,indexesToSortBuffer:s,indexesToSortOffset:o,sortedIndexesBuffer:s,sortedIndexesOffset:l,precomputedDistancesBuffer:s,precomputedDistancesOffset:d,transformsBuffer:s,transformsOffset:h}):e.postMessage({sortSetupPhase1Complete:!0})})}}}let tQ={None:0,VR:1,AR:2};class tN{static createButton(e){let t=document.createElement("button");function s(){t.style.display="",t.style.cursor="auto",t.style.left="calc(50% - 75px)",t.style.width="150px",t.onmouseenter=null,t.onmouseleave=null,t.onclick=null}function r(e){e.style.position="absolute",e.style.bottom="20px",e.style.padding="12px 6px",e.style.border="1px solid #fff",e.style.borderRadius="4px",e.style.background="rgba(0,0,0,0.1)",e.style.color="#fff",e.style.font="normal 13px sans-serif",e.style.textAlign="center",e.style.opacity="0.5",e.style.outline="none",e.style.zIndex="999"}if("xr"in navigator)return t.id="VRButton",t.style.display="none",r(t),navigator.xr.isSessionSupported("immersive-vr").then(function(r){r?function(){let s=null;async function r(r){r.addEventListener("end",i),await e.xr.setSession(r),t.textContent="EXIT VR",s=r}function i(){s.removeEventListener("end",i),t.textContent="ENTER VR",s=null}t.style.display="",t.style.cursor="pointer",t.style.left="calc(50% - 50px)",t.style.width="100px",t.textContent="ENTER VR";let a={optionalFeatures:["local-floor","bounded-floor","hand-tracking","layers"]};t.onmouseenter=function(){t.style.opacity="1.0"},t.onmouseleave=function(){t.style.opacity="0.5"},t.onclick=function(){null===s?navigator.xr.requestSession("immersive-vr",a).then(r):(s.end(),void 0!==navigator.xr.offerSession&&navigator.xr.offerSession("immersive-vr",a).then(r).catch(e=>{console.warn(e)}))},void 0!==navigator.xr.offerSession&&navigator.xr.offerSession("immersive-vr",a).then(r).catch(e=>{console.warn(e)})}():(s(),t.textContent="VR NOT SUPPORTED"),r&&tN.xrSessionIsGranted&&t.click()}).catch(function(e){s(),console.warn("Exception when trying to call xr.isSessionSupported",e),t.textContent="VR NOT ALLOWED"}),t;{let e=document.createElement("a");return!1===window.isSecureContext?(e.href=document.location.href.replace(/^http:/,"https:"),e.innerHTML="WEBXR NEEDS HTTPS"):(e.href="https://immersiveweb.dev/",e.innerHTML="WEBXR NOT AVAILABLE"),e.style.left="calc(50% - 90px)",e.style.width="180px",e.style.textDecoration="none",r(e),e}}static registerSessionGrantedListener(){"undefined"!=typeof navigator&&"xr"in navigator&&!/WebXRViewer\//i.test(navigator.userAgent)&&navigator.xr.addEventListener("sessiongranted",()=>{tN.xrSessionIsGranted=!0})}}tN.xrSessionIsGranted=!1,tN.registerSessionGrantedListener();class tV{static createButton(e,t={}){let s=document.createElement("button");function r(){s.style.display="",s.style.cursor="auto",s.style.left="calc(50% - 75px)",s.style.width="150px",s.onmouseenter=null,s.onmouseleave=null,s.onclick=null}function i(e){e.style.position="absolute",e.style.bottom="20px",e.style.padding="12px 6px",e.style.border="1px solid #fff",e.style.borderRadius="4px",e.style.background="rgba(0,0,0,0.1)",e.style.color="#fff",e.style.font="normal 13px sans-serif",e.style.textAlign="center",e.style.opacity="0.5",e.style.outline="none",e.style.zIndex="999"}if("xr"in navigator)return s.id="ARButton",s.style.display="none",i(s),navigator.xr.isSessionSupported("immersive-ar").then(function(i){i?function(){if(void 0===t.domOverlay){let e=document.createElement("div");e.style.display="none",document.body.appendChild(e);let s=document.createElementNS("http://www.w3.org/2000/svg","svg");s.setAttribute("width",38),s.setAttribute("height",38),s.style.position="absolute",s.style.right="20px",s.style.top="20px",s.addEventListener("click",function(){r.end()}),e.appendChild(s);let i=document.createElementNS("http://www.w3.org/2000/svg","path");i.setAttribute("d","M 12,12 L 28,28 M 28,12 12,28"),i.setAttribute("stroke","#fff"),i.setAttribute("stroke-width",2),s.appendChild(i),void 0===t.optionalFeatures&&(t.optionalFeatures=[]),t.optionalFeatures.push("dom-overlay"),t.domOverlay={root:e}}let r=null;async function i(i){i.addEventListener("end",a),e.xr.setReferenceSpaceType("local"),await e.xr.setSession(i),s.textContent="STOP AR",t.domOverlay.root.style.display="",r=i}function a(){r.removeEventListener("end",a),s.textContent="START AR",t.domOverlay.root.style.display="none",r=null}s.style.display="",s.style.cursor="pointer",s.style.left="calc(50% - 50px)",s.style.width="100px",s.textContent="START AR",s.onmouseenter=function(){s.style.opacity="1.0"},s.onmouseleave=function(){s.style.opacity="0.5"},s.onclick=function(){null===r?navigator.xr.requestSession("immersive-ar",t).then(i):(r.end(),void 0!==navigator.xr.offerSession&&navigator.xr.offerSession("immersive-ar",t).then(i).catch(e=>{console.warn(e)}))},void 0!==navigator.xr.offerSession&&navigator.xr.offerSession("immersive-ar",t).then(i).catch(e=>{console.warn(e)})}():(r(),s.textContent="AR NOT SUPPORTED")}).catch(function(e){r(),console.warn("Exception when trying to call xr.isSessionSupported",e),s.textContent="AR NOT ALLOWED"}),s;{let e=document.createElement("a");return!1===window.isSecureContext?(e.href=document.location.href.replace(/^http:/,"https:"),e.innerHTML="WEBXR NEEDS HTTPS"):(e.href="https://immersiveweb.dev/",e.innerHTML="WEBXR NOT AVAILABLE"),e.style.left="calc(50% - 90px)",e.style.width="180px",e.style.textDecoration="none",i(e),e}}}let tK={Always:0,Never:2};class tG{constructor(e={}){if(e.cameraUp||(e.cameraUp=[0,1,0]),this.cameraUp=new p.Pa4().fromArray(e.cameraUp),e.initialCameraPosition||(e.initialCameraPosition=[0,10,15]),this.initialCameraPosition=new p.Pa4().fromArray(e.initialCameraPosition),e.initialCameraLookAt||(e.initialCameraLookAt=[0,0,0]),this.initialCameraLookAt=new p.Pa4().fromArray(e.initialCameraLookAt),this.dropInMode=e.dropInMode||!1,(void 0===e.selfDrivenMode||null===e.selfDrivenMode)&&(e.selfDrivenMode=!0),this.selfDrivenMode=e.selfDrivenMode&&!this.dropInMode,this.selfDrivenUpdateFunc=this.selfDrivenUpdate.bind(this),void 0===e.useBuiltInControls&&(e.useBuiltInControls=!0),this.useBuiltInControls=e.useBuiltInControls,this.rootElement=e.rootElement,this.ignoreDevicePixelRatio=e.ignoreDevicePixelRatio||!1,this.devicePixelRatio=this.ignoreDevicePixelRatio?1:window.devicePixelRatio,this.halfPrecisionCovariancesOnGPU=e.halfPrecisionCovariancesOnGPU||!1,this.threeScene=e.threeScene,this.renderer=e.renderer,this.camera=e.camera,this.gpuAcceleratedSort=e.gpuAcceleratedSort||!1,(void 0===e.integerBasedSort||null===e.integerBasedSort)&&(e.integerBasedSort=!0),this.integerBasedSort=e.integerBasedSort,(void 0===e.sharedMemoryForWorkers||null===e.sharedMemoryForWorkers)&&(e.sharedMemoryForWorkers=!0),this.sharedMemoryForWorkers=e.sharedMemoryForWorkers,this.dynamicScene=!!e.dynamicScene,this.antialiased=e.antialiased||!1,this.webXRMode=e.webXRMode||tQ.None,this.webXRMode!==tQ.None&&(this.gpuAcceleratedSort=!1),this.webXRActive=!1,this.renderMode=e.renderMode||tK.Always,this.sceneRevealMode=e.sceneRevealMode||tk.Default,this.focalAdjustment=e.focalAdjustment||1,this.maxScreenSpaceSplatSize=e.maxScreenSpaceSplatSize||1024,this.logLevel=e.logLevel||tH.None,this.sphericalHarmonicsDegree=e.sphericalHarmonicsDegree||0,this.enableOptionalEffects=e.enableOptionalEffects||!1,(void 0===e.enableSIMDInSort||null===e.enableSIMDInSort)&&(e.enableSIMDInSort=!0),this.enableSIMDInSort=e.enableSIMDInSort,(void 0===e.plyInMemoryCompressionLevel||null===e.plyInMemoryCompressionLevel)&&(e.plyInMemoryCompressionLevel=2),this.plyInMemoryCompressionLevel=e.plyInMemoryCompressionLevel,(void 0===e.freeIntermediateSplatData||null===e.freeIntermediateSplatData)&&(e.freeIntermediateSplatData=!1),this.freeIntermediateSplatData=e.freeIntermediateSplatData,w()){let e=b();e.major<17&&(this.enableSIMDInSort=!1),e.major<16&&(this.sharedMemoryForWorkers=!1)}(void 0===e.splatRenderMode||null===e.splatRenderMode)&&(e.splatRenderMode=tx.ThreeD),this.splatRenderMode=e.splatRenderMode,this.onSplatMeshChangedCallback=null,this.createSplatMesh(),this.controls=null,this.perspectiveControls=null,this.orthographicControls=null,this.orthographicCamera=null,this.perspectiveCamera=null,this.showMeshCursor=!1,this.showControlPlane=!1,this.showInfo=!1,this.sceneHelper=null,this.sortWorker=null,this.sortRunning=!1,this.splatRenderCount=0,this.sortWorkerIndexesToSort=null,this.sortWorkerSortedIndexes=null,this.sortWorkerPrecomputedDistances=null,this.sortWorkerTransforms=null,this.runAfterNextSort=[],this.selfDrivenModeRunning=!1,this.splatRenderReady=!1,this.raycaster=new tv,this.infoPanel=null,this.startInOrthographicMode=!1,this.currentFPS=0,this.lastSortTime=0,this.consecutiveRenderFrames=0,this.previousCameraTarget=new p.Pa4,this.nextCameraTarget=new p.Pa4,this.mousePosition=new p.FM8,this.mouseDownPosition=new p.FM8,this.mouseDownTime=null,this.resizeObserver=null,this.mouseMoveListener=null,this.mouseDownListener=null,this.mouseUpListener=null,this.keyDownListener=null,this.sortPromise=null,this.sortPromiseResolver=null,this.splatSceneDownloadPromises={},this.splatSceneDownloadAndBuildPromise=null,this.splatSceneRemovalPromise=null,this.loadingSpinner=new td(null,this.rootElement||document.body),this.loadingSpinner.hide(),this.loadingProgressBar=new tp(this.rootElement||document.body),this.loadingProgressBar.hide(),this.infoPanel=new tu(this.rootElement||document.body),this.infoPanel.hide(),this.usingExternalCamera=!!this.dropInMode||!!this.camera,this.usingExternalRenderer=!!this.dropInMode||!!this.renderer,this.initialized=!1,this.disposing=!1,this.disposed=!1,this.disposePromise=null,this.dropInMode||this.init()}createSplatMesh(){this.splatMesh=new tO(this.splatRenderMode,this.dynamicScene,this.enableOptionalEffects,this.halfPrecisionCovariancesOnGPU,this.devicePixelRatio,this.gpuAcceleratedSort,this.integerBasedSort,this.antialiased,this.maxScreenSpaceSplatSize,this.logLevel,this.sphericalHarmonicsDegree),this.splatMesh.frustumCulled=!1,this.onSplatMeshChangedCallback&&this.onSplatMeshChangedCallback()}init(){this.initialized||(this.rootElement||(this.usingExternalRenderer?this.rootElement=this.renderer.domElement.parentElement||document.body:(this.rootElement=document.createElement("div"),this.rootElement.style.width="100%",this.rootElement.style.height="100%",this.rootElement.style.position="absolute",document.body.appendChild(this.rootElement))),this.setupCamera(),this.setupRenderer(),this.setupWebXR(),this.setupControls(),this.setupEventHandlers(),this.threeScene=this.threeScene||new p.xsS,this.sceneHelper=new tA(this.threeScene),this.sceneHelper.setupMeshCursor(),this.sceneHelper.setupFocusMarker(),this.sceneHelper.setupControlPlane(),this.loadingProgressBar.setContainer(this.rootElement),this.loadingSpinner.setContainer(this.rootElement),this.infoPanel.setContainer(this.rootElement),this.initialized=!0)}setupCamera(){if(!this.usingExternalCamera){let e=new p.FM8;this.getRenderDimensions(e),this.perspectiveCamera=new p.cPb(50,e.x/e.y,.1,1e3),this.orthographicCamera=new p.iKG(-(e.x/2),e.x/2,e.y/2,-(e.y/2),.1,1e3),this.camera=this.startInOrthographicMode?this.orthographicCamera:this.perspectiveCamera,this.camera.position.copy(this.initialCameraPosition),this.camera.up.copy(this.cameraUp).normalize(),this.camera.lookAt(this.initialCameraLookAt)}}setupRenderer(){if(!this.usingExternalRenderer){let e=new p.FM8;this.getRenderDimensions(e),this.renderer=new p.CP7({antialias:!1,precision:"highp"}),this.renderer.setPixelRatio(this.devicePixelRatio),this.renderer.autoClear=!0,this.renderer.setClearColor(new p.Ilk(0),0),this.renderer.setSize(e.x,e.y),this.resizeObserver=new ResizeObserver(()=>{this.getRenderDimensions(e),this.renderer.setSize(e.x,e.y),this.forceRenderNextFrame()}),this.resizeObserver.observe(this.rootElement),this.rootElement.appendChild(this.renderer.domElement)}}setupWebXR(){this.webXRMode&&(this.webXRMode===tQ.VR?this.rootElement.appendChild(tN.createButton(this.renderer)):this.webXRMode===tQ.AR&&this.rootElement.appendChild(tV.createButton(this.renderer)),this.renderer.xr.addEventListener("sessionstart",e=>{this.webXRActive=!0}),this.renderer.xr.addEventListener("sessionend",e=>{this.webXRActive=!1}),this.renderer.xr.enabled=!0,this.camera.position.copy(this.initialCameraPosition),this.camera.up.copy(this.cameraUp).normalize(),this.camera.lookAt(this.initialCameraLookAt))}setupControls(){if(this.useBuiltInControls&&this.webXRMode===tQ.None){for(let e of(this.usingExternalCamera?this.camera.isOrthographicCamera?this.orthographicControls=new tc(this.camera,this.renderer.domElement):this.perspectiveControls=new tc(this.camera,this.renderer.domElement):(this.perspectiveControls=new tc(this.perspectiveCamera,this.renderer.domElement),this.orthographicControls=new tc(this.orthographicCamera,this.renderer.domElement)),[this.orthographicControls,this.perspectiveControls]))e&&(e.listenToKeyEvents(window),e.rotateSpeed=.5,e.maxPolarAngle=.75*Math.PI,e.minPolarAngle=.1,e.enableDamping=!0,e.dampingFactor=.05,e.target.copy(this.initialCameraLookAt),e.update());this.controls=this.camera.isOrthographicCamera?this.orthographicControls:this.perspectiveControls,this.controls.update()}}setupEventHandlers(){this.useBuiltInControls&&this.webXRMode===tQ.None&&(this.mouseMoveListener=this.onMouseMove.bind(this),this.renderer.domElement.addEventListener("pointermove",this.mouseMoveListener,!1),this.mouseDownListener=this.onMouseDown.bind(this),this.renderer.domElement.addEventListener("pointerdown",this.mouseDownListener,!1),this.mouseUpListener=this.onMouseUp.bind(this),this.renderer.domElement.addEventListener("pointerup",this.mouseUpListener,!1),this.keyDownListener=this.onKeyDown.bind(this),window.addEventListener("keydown",this.keyDownListener,!1))}removeEventHandlers(){this.useBuiltInControls&&(this.renderer.domElement.removeEventListener("pointermove",this.mouseMoveListener),this.mouseMoveListener=null,this.renderer.domElement.removeEventListener("pointerdown",this.mouseDownListener),this.mouseDownListener=null,this.renderer.domElement.removeEventListener("pointerup",this.mouseUpListener),this.mouseUpListener=null,window.removeEventListener("keydown",this.keyDownListener),this.keyDownListener=null)}setRenderMode(e){this.renderMode=e}onSplatMeshChanged(e){this.onSplatMeshChangedCallback=e}onKeyDown=(function(){let e=new p.Pa4,t=new p.yGw,s=new p.yGw;return function(r){switch(e.set(0,0,-1),e.transformDirection(this.camera.matrixWorld),t.makeRotationAxis(e,Math.PI/128),s.makeRotationAxis(e,-Math.PI/128),r.code){case"KeyG":this.focalAdjustment+=.02,this.forceRenderNextFrame();break;case"KeyF":this.focalAdjustment-=.02,this.forceRenderNextFrame();break;case"ArrowLeft":this.camera.up.transformDirection(t);break;case"ArrowRight":this.camera.up.transformDirection(s);break;case"KeyC":this.showMeshCursor=!this.showMeshCursor;break;case"KeyU":this.showControlPlane=!this.showControlPlane;break;case"KeyI":this.showInfo=!this.showInfo,this.showInfo?this.infoPanel.show():this.infoPanel.hide();break;case"KeyO":this.usingExternalCamera||this.setOrthographicMode(!this.camera.isOrthographicCamera);break;case"KeyP":this.usingExternalCamera||this.splatMesh.setPointCloudModeEnabled(!this.splatMesh.getPointCloudModeEnabled());break;case"Equal":this.usingExternalCamera||this.splatMesh.setSplatScale(this.splatMesh.getSplatScale()+.05);break;case"Minus":this.usingExternalCamera||this.splatMesh.setSplatScale(Math.max(this.splatMesh.getSplatScale()-.05,0))}}})();onMouseMove(e){this.mousePosition.set(e.offsetX,e.offsetY)}onMouseDown(){this.mouseDownPosition.copy(this.mousePosition),this.mouseDownTime=C()}onMouseUp=(function(){let e=new p.FM8;return function(t){e.copy(this.mousePosition).sub(this.mouseDownPosition),C()-this.mouseDownTime<.5&&2>e.length()&&this.onMouseClick(t)}})();onMouseClick(e){this.mousePosition.set(e.offsetX,e.offsetY),this.checkForFocalPointChange()}checkForFocalPointChange=(function(){let e=new p.FM8,t=new p.Pa4,s=[];return function(){if(!this.transitioningCameraTarget&&(this.getRenderDimensions(e),s.length=0,this.raycaster.setFromCameraAndScreenPosition(this.camera,this.mousePosition,e),this.raycaster.intersectSplatMesh(this.splatMesh,s),s.length>0)){let e=s[0].origin;t.copy(e).sub(this.camera.position),t.length()>.75&&(this.previousCameraTarget.copy(this.controls.target),this.nextCameraTarget.copy(e),this.transitioningCameraTarget=!0,this.transitioningCameraTargetStartTime=C())}}})();getRenderDimensions(e){this.rootElement?(e.x=this.rootElement.offsetWidth,e.y=this.rootElement.offsetHeight):this.renderer.getSize(e)}setOrthographicMode(e){if(e===this.camera.isOrthographicCamera)return;let t=this.camera,s=e?this.orthographicCamera:this.perspectiveCamera;if(s.position.copy(t.position),s.up.copy(t.up),s.rotation.copy(t.rotation),s.quaternion.copy(t.quaternion),s.matrix.copy(t.matrix),this.camera=s,this.controls){let r=e=>{e.saveState(),e.reset()},i=this.controls,a=e?this.orthographicControls:this.perspectiveControls;r(a),r(i),a.target.copy(i.target),e?tG.setCameraZoomFromPosition(s,t,i):tG.setCameraPositionFromZoom(s,t,a),this.controls=a,this.camera.lookAt(this.controls.target)}}static setCameraPositionFromZoom=(function(){let e=new p.Pa4;return function(t,s,r){let i=1/(.001*s.zoom);e.copy(r.target).sub(t.position).normalize().multiplyScalar(i).negate(),t.position.copy(r.target).add(e)}})();static setCameraZoomFromPosition=(function(){let e=new p.Pa4;return function(t,s,r){let i=e.copy(r.target).sub(s.position).length();t.zoom=1/(.001*i)}})();updateSplatMesh=(function(){let e=new p.FM8;return function(){if(this.splatMesh&&this.splatMesh.getSplatCount()>0){this.splatMesh.updateVisibleRegionFadeDistance(this.sceneRevealMode),this.splatMesh.updateTransforms(),this.getRenderDimensions(e);let t=.5*this.camera.projectionMatrix.elements[0]*this.devicePixelRatio*e.x,s=.5*this.camera.projectionMatrix.elements[5]*this.devicePixelRatio*e.y,r=this.camera.isOrthographicCamera?1/this.devicePixelRatio:1,i=this.focalAdjustment*r;this.adjustForWebXRStereo(e),this.splatMesh.updateUniforms(e,t*i,s*i,this.camera.isOrthographicCamera,this.camera.zoom||1,1/i)}}})();adjustForWebXRStereo(e){if(this.camera&&this.webXRActive){let t=this.renderer.xr.getCamera().projectionMatrix.elements[0],s=this.camera.projectionMatrix.elements[0];e.x*=s/t}}isLoadingOrUnloading(){return Object.keys(this.splatSceneDownloadPromises).length>0||null!==this.splatSceneDownloadAndBuildPromise||null!==this.splatSceneRemovalPromise}isDisposingOrDisposed(){return this.disposing||this.disposed}addSplatSceneDownloadPromise(e){this.splatSceneDownloadPromises[e.id]=e}removeSplatSceneDownloadPromise(e){delete this.splatSceneDownloadPromises[e.id]}setSplatSceneDownloadAndBuildPromise(e){this.splatSceneDownloadAndBuildPromise=e}clearSplatSceneDownloadAndBuildPromise(){this.splatSceneDownloadAndBuildPromise=null}addSplatScene(e,t={}){if(this.isLoadingOrUnloading())throw Error("Cannot add splat scene while another load or unload is already in progress.");if(this.isDisposingOrDisposed())throw Error("Cannot add splat scene after dispose() is called.");t.progressiveLoad&&this.splatMesh.scenes&&this.splatMesh.scenes.length>0&&(console.log('addSplatScene(): "progressiveLoad" option ignore because there are multiple splat scenes'),t.progressiveLoad=!1);let s=void 0!==t.format&&null!==t.format?t.format:ts(e),r=tG.isProgressivelyLoadable(s)&&t.progressiveLoad,i=void 0===t.showLoadingUI||null===t.showLoadingUI||t.showLoadingUI,a=null;i&&(this.loadingSpinner.removeAllTasks(),a=this.loadingSpinner.addTask("Downloading..."));let n=(e,t,s)=>{if(i){if(s===e5.Downloading){if(100==e)this.loadingSpinner.setMessageForTask(a,"Download complete!");else if(r)this.loadingSpinner.setMessageForTask(a,"Downloading splats...");else{let e=t?`: ${t}`:"...";this.loadingSpinner.setMessageForTask(a,`Downloading${e}`)}}else s===e5.Processing&&this.loadingSpinner.setMessageForTask(a,"Processing splats...")}},o=!1,l=0,c=(e,t)=>{i&&((e&&r||t&&!r)&&(this.loadingSpinner.removeTask(a),t||o||this.loadingProgressBar.show()),r&&(t?(o=!0,this.loadingProgressBar.hide()):this.loadingProgressBar.setProgress(l)))};return(r?this.downloadAndBuildSingleSplatSceneProgressiveLoad.bind(this):this.downloadAndBuildSingleSplatSceneStandardLoad.bind(this))(e,s,t.splatAlphaRemovalThreshold,((e,s,a)=>{!r&&t.onProgress&&t.onProgress(0,"0%",e5.Processing);let n={rotation:t.rotation||t.orientation,position:t.position,scale:t.scale,splatAlphaRemovalThreshold:t.splatAlphaRemovalThreshold};return this.addSplatBuffers([e],[n],a,s&&i,i,r,r).then(()=>{!r&&t.onProgress&&t.onProgress(100,"100%",e5.Processing),c(s,a)})}).bind(this),(e,s,r)=>{l=e,n(e,s,r),t.onProgress&&t.onProgress(e,s,r)},(()=>{this.loadingProgressBar.hide(),this.loadingSpinner.removeAllTasks()}).bind(this))}downloadAndBuildSingleSplatSceneStandardLoad(e,t,s,r,i,a){let n=this.downloadSplatSceneToSplatBuffer(e,s,i,!1,void 0,t),o=I(n.abortHandler);return n.then(e=>(this.removeSplatSceneDownloadPromise(n),r(e,!0,!0).then(()=>{o.resolve(),this.clearSplatSceneDownloadAndBuildPromise()}))).catch(t=>{a&&a(),this.clearSplatSceneDownloadAndBuildPromise(),this.removeSplatSceneDownloadPromise(n);let s=t instanceof m?t:Error(`Viewer::addSplatScene -> Could not load file ${e}`);o.reject(s)}),this.addSplatSceneDownloadPromise(n),this.setSplatSceneDownloadAndBuildPromise(o.promise),o.promise}downloadAndBuildSingleSplatSceneProgressiveLoad(e,t,s,r,i,a){let n=0,o=!1,l=[],c=()=>{if(l.length>0&&!o&&!this.isDisposingOrDisposed()){o=!0;let e=l.shift();r(e.splatBuffer,e.firstBuild,e.finalBuild).then(()=>{o=!1,e.firstBuild?(d.reject=null,d.resolve()):e.finalBuild&&(p.resolve(),this.clearSplatSceneDownloadAndBuildPromise()),l.length>0&&y(()=>c())})}},h=this.downloadSplatSceneToSplatBuffer(e,s,i,!0,(e,t)=>{!this.isDisposingOrDisposed()&&(t||0===l.length||e.getSplatCount()>l[0].splatBuffer.getSplatCount())&&(l.push({splatBuffer:e,firstBuild:0===n,finalBuild:t}),n++,c())},t),d=I(h.abortHandler),p=I();return this.addSplatSceneDownloadPromise(h),this.setSplatSceneDownloadAndBuildPromise(p.promise),h.then(()=>{this.removeSplatSceneDownloadPromise(h)}).catch(e=>{this.clearSplatSceneDownloadAndBuildPromise(),this.removeSplatSceneDownloadPromise(h);let t=e instanceof m?e:Error("Viewer::addSplatScene -> Could not load one or more scenes");d.reject(t),a&&a(t)}),d.promise}addSplatScenes(e,t=!0,s){let r;if(this.isLoadingOrUnloading())throw Error("Cannot add splat scene while another load or unload is already in progress.");if(this.isDisposingOrDisposed())throw Error("Cannot add splat scene after dispose() is called.");let i=e.length,a=[];t&&(this.loadingSpinner.removeAllTasks(),r=this.loadingSpinner.addTask("Downloading..."));let n=(e,n,o,l)=>{a[e]=n;let c=0;for(let e=0;e<i;e++)c+=a[e]||0;c/=i,o=`${c.toFixed(2)}%`,t&&l===e5.Downloading&&this.loadingSpinner.setMessageForTask(r,100==c?"Download complete!":`Downloading: ${o}`),s&&s(c,o,l)},o=[],l=[];for(let t=0;t<e.length;t++){let s=e[t],r=void 0!==s.format&&null!==s.format?s.format:ts(s.path),i=this.downloadSplatSceneToSplatBuffer(s.path,s.splatAlphaRemovalThreshold,n.bind(this,t),!1,void 0,r);o.push(i),l.push(i.promise)}let c=new u((i,a)=>{Promise.all(l).then(a=>{t&&this.loadingSpinner.removeTask(r),s&&s(0,"0%",e5.Processing),this.addSplatBuffers(a,e,!0,t,t,!1,!1).then(()=>{s&&s(100,"100%",e5.Processing),this.clearSplatSceneDownloadAndBuildPromise(),i()})}).catch(e=>{t&&this.loadingSpinner.removeTask(r),this.clearSplatSceneDownloadAndBuildPromise(),a(e instanceof m?e:Error("Viewer::addSplatScenes -> Could not load one or more splat scenes."))}).finally(()=>{this.removeSplatSceneDownloadPromise(c)})},e=>{for(let t of o)t.abort(e)});return this.addSplatSceneDownloadPromise(c),this.setSplatSceneDownloadAndBuildPromise(c),c}downloadSplatSceneToSplatBuffer(e,t=1,s,r=!1,i,a){if(a===tt.Splat)return e7.loadFromURL(e,s,r,i,t,0,!1);if(a===tt.KSplat)return te.loadFromURL(e,s,r,i);if(a===tt.Ply)return e9.loadFromURL(e,s,r,i,t,this.plyInMemoryCompressionLevel,this.sphericalHarmonicsDegree);throw Error(`Viewer::downloadSplatSceneToSplatBuffer -> File format not supported: ${e}`)}static isProgressivelyLoadable(e){return e===tt.Splat||e===tt.KSplat||e===tt.Ply}addSplatBuffers=function(e,t=[],s=!0,r=!0,i=!0,a=!1,n=!1,o=!0){if(this.isDisposingOrDisposed())return Promise.resolve();this.splatRenderReady=!1;let l=null,c=()=>{null!==l&&(this.loadingSpinner.removeTask(l),l=null)},h=(e,t)=>{this.isDisposingOrDisposed()||(!this.gpuAcceleratedSort&&this.sortWorker&&this.sortWorker.postMessage({centers:e.centers.buffer,sceneIndexes:e.sceneIndexes.buffer,range:{from:e.from,to:e.to,count:e.count}}),this.runSplatSort(!0).then(e=>{this.sortWorker&&e?(n?this.splatRenderReady=!0:this.runAfterNextSort.push(()=>{this.splatRenderReady=!0}),this.runAfterNextSort.push(()=>{c(),t()})):(this.splatRenderReady=!0,c(),t())}))};return new Promise(n=>{r&&(l=this.loadingSpinner.addTask("Processing splats...")),y(()=>{if(this.isDisposingOrDisposed())n();else{let r=this.addSplatBuffersToMesh(e,t,s,i,a,o),l=this.splatMesh.getMaxSplatCount();this.sortWorker&&this.sortWorker.maxSplatCount!==l&&this.disposeSortWorker(),(!this.sortWorker&&l>0?this.setupSortWorker(this.splatMesh):Promise.resolve()).then(()=>{h(r,n)})}},!0)})};addSplatBuffersToMesh=function(e,t,s=!0,r=!1,i=!1,n=!0){if(this.isDisposingOrDisposed())return;let o=[],l=[];i||(o=this.splatMesh.scenes.map(e=>e.splatBuffer)||[],l=this.splatMesh.sceneOptions?this.splatMesh.sceneOptions.map(e=>e):[]),o.push(...e),l.push(...t),this.renderer&&this.splatMesh.setRenderer(this.renderer);let c=this.splatMesh.build(o,l,!0,s,e=>{if(this.isDisposingOrDisposed())return;let t=this.splatMesh.getSplatCount();r&&t>=15e5&&!e&&!a&&(this.loadingSpinner.setMinimized(!0,!0),a=this.loadingSpinner.addTask("Optimizing splats..."))},e=>{!this.isDisposingOrDisposed()&&e&&a&&(this.loadingSpinner.removeTask(a),a=null)},n);return s&&this.freeIntermediateSplatData&&this.splatMesh.freeIntermediateSplatData(),c};setupSortWorker(e){if(!this.isDisposingOrDisposed())return new Promise(t=>{let s=this.integerBasedSort?Int32Array:Float32Array,r=e.getSplatCount(),i=e.getMaxSplatCount();this.sortWorker=function(e,t,s,r,i){let a=new Worker(URL.createObjectURL(new Blob(["(",tU.toString(),")(self)"],{type:"application/javascript"}))),n="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",o=w()?b():null;s||t?s?!t&&o&&o.major<16&&o.minor<4&&(n="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"):n=tz:(n=tz,o&&o.major<16&&o.minor<4&&(n="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"));let l=atob(n),c=new Uint8Array(l.length);for(let e=0;e<l.length;e++)c[e]=l.charCodeAt(e);return a.postMessage({init:{sorterWasmBytes:c.buffer,splatCount:e,useSharedMemory:t,integerBasedSort:r,dynamicMode:i,Constants:{BytesPerFloat:D.BytesPerFloat,BytesPerInt:D.BytesPerInt,DepthMapRange:D.DepthMapRange,MemoryPageSize:D.MemoryPageSize,MaxScenes:D.MaxScenes}}}),a}(i,this.sharedMemoryForWorkers,this.enableSIMDInSort,this.integerBasedSort,this.splatMesh.dynamicMode),this.sortWorker.onmessage=e=>{if(e.data.sortDone){if(this.sortRunning=!1,this.sharedMemoryForWorkers)this.splatMesh.updateRenderIndexes(this.sortWorkerSortedIndexes,e.data.splatRenderCount);else{let t=new Uint32Array(e.data.sortedIndexes.buffer,0,e.data.splatRenderCount);this.splatMesh.updateRenderIndexes(t,e.data.splatRenderCount)}this.lastSortTime=e.data.sortTime,this.sortPromiseResolver(),this.sortPromiseResolver=null,this.forceRenderNextFrame(),this.runAfterNextSort.length>0&&(this.runAfterNextSort.forEach(e=>{e()}),this.runAfterNextSort.length=0)}else if(e.data.sortCanceled)this.sortRunning=!1;else if(e.data.sortSetupPhase1Complete){this.logLevel>=tH.Info&&console.log("Sorting web worker WASM setup complete."),this.sharedMemoryForWorkers?(this.sortWorkerSortedIndexes=new Uint32Array(e.data.sortedIndexesBuffer,e.data.sortedIndexesOffset,i),this.sortWorkerIndexesToSort=new Uint32Array(e.data.indexesToSortBuffer,e.data.indexesToSortOffset,i),this.sortWorkerPrecomputedDistances=new s(e.data.precomputedDistancesBuffer,e.data.precomputedDistancesOffset,i),this.sortWorkerTransforms=new Float32Array(e.data.transformsBuffer,e.data.transformsOffset,16*D.MaxScenes)):(this.sortWorkerIndexesToSort=new Uint32Array(i),this.sortWorkerPrecomputedDistances=new s(i),this.sortWorkerTransforms=new Float32Array(16*D.MaxScenes));for(let e=0;e<r;e++)this.sortWorkerIndexesToSort[e]=e;if(this.sortWorker.maxSplatCount=i,this.logLevel>=tH.Info){console.log("Sorting web worker ready.");let e=this.splatMesh.getSplatDataTextures(),t=e.covariances.size,s=e.centerColors.size;console.log("Covariances texture size: "+t.x+" x "+t.y),console.log("Centers/colors texture size: "+s.x+" x "+s.y)}t()}}})}disposeSortWorker(){this.sortWorker&&this.sortWorker.terminate(),this.sortWorker=null,this.sortPromise=null,this.sortPromiseResolver&&(this.sortPromiseResolver(),this.sortPromiseResolver=null),this.sortRunning=!1}removeSplatScene(e,t=!0){return this.removeSplatScenes([e],t)}removeSplatScenes(e,t=!0){if(this.isLoadingOrUnloading())throw Error("Cannot remove splat scene while another load or unload is already in progress.");if(this.isDisposingOrDisposed())throw Error("Cannot remove splat scene after dispose() is called.");return this.splatSceneRemovalPromise=new Promise((s,r)=>{let i;t&&(this.loadingSpinner.removeAllTasks(),this.loadingSpinner.show(),i=this.loadingSpinner.addTask("Removing splat scene..."));let a=()=>{t&&(this.loadingSpinner.hide(),this.loadingSpinner.removeTask(i))},n=e=>{a(),this.splatSceneRemovalPromise=null,e?r(e):s()},o=()=>!!this.isDisposingOrDisposed()&&(n(),!0);(this.sortPromise||Promise.resolve()).then(()=>{if(o())return;let t=[],s=[],r=[];for(let i=0;i<this.splatMesh.scenes.length;i++){let a=!1;for(let t of e)if(t===i){a=!0;break}if(!a){let e=this.splatMesh.scenes[i];t.push(e.splatBuffer),s.push(this.splatMesh.sceneOptions[i]),r.push({position:e.position.clone(),quaternion:e.quaternion.clone(),scale:e.scale.clone()})}}this.disposeSortWorker(),this.splatMesh.dispose(),this.sceneRevealMode=tk.Instant,this.createSplatMesh(),this.addSplatBuffers(t,s,!0,!1,!0).then(()=>{o()||(a(),this.splatMesh.scenes.forEach((e,t)=>{e.position.copy(r[t].position),e.quaternion.copy(r[t].quaternion),e.scale.copy(r[t].scale)}),this.splatMesh.updateTransforms(),this.splatRenderReady=!1,this.runSplatSort(!0).then(()=>{if(o()){this.splatRenderReady=!0;return}(this.sortPromise||Promise.resolve()).then(()=>{this.splatRenderReady=!0,n()})}))}).catch(e=>{n(e)})})}),this.splatSceneRemovalPromise}start(){if(this.selfDrivenMode)this.webXRMode?this.renderer.setAnimationLoop(this.selfDrivenUpdateFunc):this.requestFrameId=requestAnimationFrame(this.selfDrivenUpdateFunc),this.selfDrivenModeRunning=!0;else throw Error("Cannot start viewer unless it is in self driven mode.")}stop(){this.selfDrivenMode&&this.selfDrivenModeRunning&&(this.webXRMode||cancelAnimationFrame(this.requestFrameId),this.selfDrivenModeRunning=!1)}async dispose(){if(this.isDisposingOrDisposed())return this.disposePromise;let e=[],t=[];for(let s in this.splatSceneDownloadPromises)if(this.splatSceneDownloadPromises.hasOwnProperty(s)){let r=this.splatSceneDownloadPromises[s];t.push(r),e.push(r.promise)}return this.sortPromise&&e.push(this.sortPromise),this.disposing=!0,this.disposePromise=Promise.all(e).finally(()=>{this.stop(),this.controls&&(this.controls.dispose(),this.controls=null),this.splatMesh&&(this.splatMesh.dispose(),this.splatMesh=null),this.sceneHelper&&(this.sceneHelper.dispose(),this.sceneHelper=null),this.resizeObserver&&(this.resizeObserver.unobserve(this.rootElement),this.resizeObserver=null),this.disposeSortWorker(),this.removeEventHandlers(),this.loadingSpinner.removeAllTasks(),this.loadingSpinner.setContainer(null),this.loadingProgressBar.hide(),this.loadingProgressBar.setContainer(null),this.infoPanel.setContainer(null),this.camera=null,this.threeScene=null,this.splatRenderReady=!1,this.initialized=!1,this.renderer&&(this.usingExternalRenderer||(this.rootElement.removeChild(this.renderer.domElement),this.renderer.dispose()),this.renderer=null),this.usingExternalRenderer||document.body.removeChild(this.rootElement),this.sortWorkerSortedIndexes=null,this.sortWorkerIndexesToSort=null,this.sortWorkerPrecomputedDistances=null,this.sortWorkerTransforms=null,this.disposed=!0,this.disposing=!1,this.disposePromise=null}),t.forEach(e=>{e.abort("Scene disposed")}),this.disposePromise}selfDrivenUpdate(){this.selfDrivenMode&&!this.webXRMode&&(this.requestFrameId=requestAnimationFrame(this.selfDrivenUpdateFunc)),this.update(),this.shouldRender()?(this.render(),this.consecutiveRenderFrames++):this.consecutiveRenderFrames=0,this.renderNextFrame=!1}forceRenderNextFrame(){this.renderNextFrame=!0}shouldRender=(function(){let e=0,t=new p.Pa4,s=new p._fP;return function(){let r=!1,i=!1;if(this.camera){let e=this.camera.position,r=this.camera.quaternion;i=Math.abs(e.x-t.x)>1e-4||Math.abs(e.y-t.y)>1e-4||Math.abs(e.z-t.z)>1e-4||Math.abs(r.x-s.x)>1e-4||Math.abs(r.y-s.y)>1e-4||Math.abs(r.z-s.z)>1e-4||Math.abs(r.w-s.w)>1e-4}return r=this.renderMode!==tK.Never&&(0===e||this.splatMesh.visibleRegionChanging||i||this.renderMode===tK.Always||!0===this.dynamicMode||this.renderNextFrame),this.camera&&(t.copy(this.camera.position),s.copy(this.camera.quaternion)),e++,r}})();render=function(){if(!this.initialized||!this.splatRenderReady)return;let e=this.renderer.autoClear;(e=>{for(let t of e.children)if(t.visible)return!0;return!1})(this.threeScene)&&(this.renderer.render(this.threeScene,this.camera),this.renderer.autoClear=!1),this.renderer.render(this.splatMesh,this.camera),this.renderer.autoClear=!1,this.sceneHelper.getFocusMarkerOpacity()>0&&this.renderer.render(this.sceneHelper.focusMarker,this.camera),this.showControlPlane&&this.renderer.render(this.sceneHelper.controlPlane,this.camera),this.renderer.autoClear=e};update(e,t){this.dropInMode&&this.updateForDropInMode(e,t),this.initialized&&this.splatRenderReady&&(this.controls&&(this.controls.update(),this.camera.isOrthographicCamera&&!this.usingExternalCamera&&tG.setCameraPositionFromZoom(this.camera,this.camera,this.controls)),this.runSplatSort(),this.updateForRendererSizeChanges(),this.updateSplatMesh(),this.updateMeshCursor(),this.updateFPS(),this.timingSensitiveUpdates(),this.updateInfoPanel(),this.updateControlPlane())}updateForDropInMode(e,t){this.renderer=e,this.splatMesh&&this.splatMesh.setRenderer(this.renderer),this.camera=t,this.controls&&(this.controls.object=t),this.init()}updateFPS=(n=C(),o=0,function(){if(this.consecutiveRenderFrames>60){let e=C();e-n>=1?(this.currentFPS=o,o=0,n=e):o++}else this.currentFPS=null});updateForRendererSizeChanges=(function(){let e;let t=new p.FM8,s=new p.FM8;return function(){this.usingExternalCamera||(this.renderer.getSize(s),void 0!==e&&e===this.camera.isOrthographicCamera&&s.x===t.x&&s.y===t.y||(this.camera.isOrthographicCamera?(this.camera.left=-s.x/2,this.camera.right=s.x/2,this.camera.top=s.y/2,this.camera.bottom=-s.y/2):this.camera.aspect=s.x/s.y,this.camera.updateProjectionMatrix(),t.copy(s),e=this.camera.isOrthographicCamera))}})();timingSensitiveUpdates=function(){let e=C();l||(l=e);let t=e-l;this.updateCameraTransition(e),this.updateFocusMarker(t),l=e};updateCameraTransition=(c=new p.Pa4,h=new p.Pa4,d=new p.Pa4,function(e){if(this.transitioningCameraTarget){h.copy(this.previousCameraTarget).sub(this.camera.position).normalize(),d.copy(this.nextCameraTarget).sub(this.camera.position).normalize();let t=Math.acos(h.dot(d)),s=(t/(Math.PI/3)*.65+.3)/t*(e-this.transitioningCameraTargetStartTime);c.copy(this.previousCameraTarget).lerp(this.nextCameraTarget,s),this.camera.lookAt(c),this.controls.target.copy(c),s>=1&&(this.transitioningCameraTarget=!1)}});updateFocusMarker=(function(){let e=new p.FM8,t=!1;return function(s){if(this.getRenderDimensions(e),this.transitioningCameraTarget){this.sceneHelper.setFocusMarkerVisibility(!0);let r=Math.max(this.sceneHelper.getFocusMarkerOpacity(),0);this.sceneHelper.setFocusMarkerOpacity(Math.min(r+10*s,1)),this.sceneHelper.updateFocusMarker(this.nextCameraTarget,this.camera,e),t=!0,this.forceRenderNextFrame()}else{let r;if((r=t?1:Math.min(this.sceneHelper.getFocusMarkerOpacity(),1))>0){this.sceneHelper.updateFocusMarker(this.nextCameraTarget,this.camera,e);let t=Math.max(r-2.5*s,0);this.sceneHelper.setFocusMarkerOpacity(t),0===t&&this.sceneHelper.setFocusMarkerVisibility(!1)}r>0&&this.forceRenderNextFrame(),t=!1}}})();updateMeshCursor=(function(){let e=[],t=new p.FM8;return function(){this.showMeshCursor?(this.forceRenderNextFrame(),this.getRenderDimensions(t),e.length=0,this.raycaster.setFromCameraAndScreenPosition(this.camera,this.mousePosition,t),this.raycaster.intersectSplatMesh(this.splatMesh,e),e.length>0?(this.sceneHelper.setMeshCursorVisibility(!0),this.sceneHelper.positionAndOrientMeshCursor(e[0].origin,this.camera)):this.sceneHelper.setMeshCursorVisibility(!1)):(this.sceneHelper.getMeschCursorVisibility()&&this.forceRenderNextFrame(),this.sceneHelper.setMeshCursorVisibility(!1))}})();updateInfoPanel=(function(){let e=new p.FM8;return function(){if(!this.showInfo)return;let t=this.splatMesh.getSplatCount();this.getRenderDimensions(e);let s=this.controls?this.controls.target:null,r=this.showMeshCursor?this.sceneHelper.meshCursor.position:null,i=t>0?this.splatRenderCount/t*100:0;this.infoPanel.update(e,this.camera.position,s,this.camera.up,this.camera.isOrthographicCamera,r,this.currentFPS||"N/A",t,this.splatRenderCount,i,this.lastSortTime,this.focalAdjustment,this.splatMesh.getSplatScale(),this.splatMesh.getPointCloudModeEnabled())}})();updateControlPlane(){this.showControlPlane?(this.sceneHelper.setControlPlaneVisibility(!0),this.sceneHelper.positionAndOrientControlPlane(this.controls.target,this.camera.up)):this.sceneHelper.setControlPlaneVisibility(!1)}runSplatSort=(function(){let e=new p.yGw,t=[],s=new p.Pa4(0,0,-1),r=new p.Pa4(0,0,-1),i=new p.Pa4,a=new p.Pa4,n=[],o=[{angleThreshold:.55,sortFractions:[.125,.33333,.75]},{angleThreshold:.65,sortFractions:[.33333,.66667]},{angleThreshold:.8,sortFractions:[.5]}];return function(l=!1){if(!this.initialized)return Promise.resolve(!1);if(this.sortRunning)return Promise.resolve(!0);if(0>=this.splatMesh.getSplatCount())return this.splatRenderCount=0,!1;let c=0,h=0,d=!1,p=!1;if(r.set(0,0,-1).applyQuaternion(this.camera.quaternion),c=r.dot(s),h=a.copy(this.camera.position).sub(i).length(),!l&&!this.splatMesh.dynamicMode&&0===n.length&&(c<=.99&&(d=!0),h>=1&&(p=!0),!d&&!p))return Promise.resolve(!1);this.sortRunning=!0;let{splatRenderCount:u,shouldSortAll:m}=this.gatherSceneNodesForSort();this.splatRenderCount=u,e.copy(this.camera.matrixWorld).invert();let A=this.perspectiveCamera||this.camera;e.premultiply(A.projectionMatrix),e.multiply(this.splatMesh.matrixWorld);let f=Promise.resolve();return this.gpuAcceleratedSort&&(n.length<=1||n.length%2==0)&&(f=this.splatMesh.computeDistancesOnGPU(e,this.sortWorkerPrecomputedDistances)),f.then(()=>{if(this.splatMesh.dynamicMode||m)n.push(this.splatRenderCount);else if(0===n.length){for(let e of o)if(c<e.angleThreshold){for(let t of e.sortFractions)n.push(Math.floor(this.splatRenderCount*t));break}n.push(this.splatRenderCount)}let a=Math.min(n.shift(),this.splatRenderCount);t[0]=this.camera.position.x,t[1]=this.camera.position.y,t[2]=this.camera.position.z;let l={modelViewProj:e.elements,cameraPosition:t,splatRenderCount:this.splatRenderCount,splatSortCount:a,usePrecomputedDistances:this.gpuAcceleratedSort};this.splatMesh.dynamicMode&&this.splatMesh.fillTransformsArray(this.sortWorkerTransforms),!this.sharedMemoryForWorkers&&(l.indexesToSort=this.sortWorkerIndexesToSort,l.transforms=this.sortWorkerTransforms,this.gpuAcceleratedSort&&(l.precomputedDistances=this.sortWorkerPrecomputedDistances)),this.sortPromise=new Promise(e=>{this.sortPromiseResolver=e}),this.sortWorker.postMessage({sort:l}),0===n.length&&(i.copy(this.camera.position),s.copy(r))}),f}})();gatherSceneNodesForSort=(function(){let e=[],t=null,s=new p.Pa4,r=new p.Pa4,i=new p.Pa4,a=new p.yGw,n=new p.yGw,o=new p.yGw,l=new p.Pa4,c=new p.Pa4(0,0,-1),h=new p.Pa4,d=e=>h.copy(e.max).sub(e.min).length();return function(h=!1){this.getRenderDimensions(l);let u=l.y/2/Math.tan(this.camera.fov/2*p.M8C.DEG2RAD),m=Math.atan(l.x/2/u),A=Math.atan(l.y/2/u),f=Math.cos(m),g=Math.cos(A),C=this.splatMesh.getSplatTree();if(C){n.copy(this.camera.matrixWorld).invert(),n.multiply(this.splatMesh.matrixWorld);let t=0,l=0;for(let p=0;p<C.subTrees.length;p++){let u=C.subTrees[p];a.copy(n),this.splatMesh.dynamicMode&&(this.splatMesh.getSceneTransform(p,o),a.multiply(o));let m=u.nodesWithIndexes.length;for(let n=0;n<m;n++){let o=u.nodesWithIndexes[n];if(!o.data||!o.data.indexes||0===o.data.indexes.length)continue;i.copy(o.center).applyMatrix4(a);let p=i.length();i.normalize(),s.copy(i).setX(0).normalize(),r.copy(i).setY(0).normalize();let m=c.dot(r),A=c.dot(s),C=d(o),S=A<g-.6,y=m<f-.6;(h||!y&&!S||!(p>C))&&(l+=o.data.indexes.length,e[t]=o,o.data.distanceToNode=p,t++)}}e.length=t,e.sort((e,t)=>e.data.distanceToNode<t.data.distanceToNode?-1:1);let p=l*D.BytesPerInt;for(let s=0;s<t;s++){let t=e[s],r=t.data.indexes.length,i=r*D.BytesPerInt;new Uint32Array(this.sortWorkerIndexesToSort.buffer,p-i,r).set(t.data.indexes),p-=i}return{splatRenderCount:l,shouldSortAll:!1}}{let e=this.splatMesh.getSplatCount();if(!t||t.length!==e){t=new Uint32Array(e);for(let s=0;s<e;s++)t[s]=s}return this.sortWorkerIndexesToSort.set(t),{splatRenderCount:e,shouldSortAll:!0}}}})();getSplatMesh(){return this.splatMesh}getSplatScene(e){return this.splatMesh.getScene(e)}getSceneCount(){return this.splatMesh.getSceneCount()}isMobile(){return navigator.userAgent.includes("Mobi")}}}}]);